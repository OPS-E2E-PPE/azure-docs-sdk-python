### YamlMime:PythonClass
uid: azure.keyvault.administration.KeyVaultBackupClient
name: KeyVaultBackupClient
fullName: azure.keyvault.administration.KeyVaultBackupClient
module: azure.keyvault.administration
inheritances:
- azure.keyvault.administration._internal.client_base.KeyVaultClientBase
summary: Performs Key Vault backup and restore operations.
constructor:
  syntax: KeyVaultBackupClient(vault_url, credential, **kwargs)
  parameters:
  - name: vault_url
    description: URL of the vault on which the client will operate. This is also called
      the vault's "DNS Name".
    isRequired: true
    types:
    - <xref:str>
  - name: credential
    description: 'an object which can provide an access token for the vault, such
      as a credential from

      <xref:azure.identity>'
    isRequired: true
methods:
- uid: azure.keyvault.administration.KeyVaultBackupClient.begin_backup
  name: begin_backup
  summary: Begin a full backup of the Key Vault.
  signature: begin_backup(blob_storage_url, sas_token, **kwargs)
  parameters:
  - name: blob_storage_url
    description: 'URL of the blob storage container in which the backup will be stored,
      for example

      [https:/](https:/)/<account>.blob.core.windows.net/backup'
    isRequired: true
    types:
    - <xref:str>
  - name: sas_token
    description: a Shared Access Signature (SAS) token authorizing access to the blob
      storage resource
    isRequired: true
    types:
    - <xref:str>
  - name: continuation_token
    description: a continuation token to restart polling from a saved state
    types:
    - <xref:str>
  return:
    description: An instance of an LROPoller. Call *result()* on the poller object
      to get a <xref:azure.keyvault.administration.BackupOperation>.
    types:
    - <xref:azure.core.polling.LROPoller>[<xref:BackupOperation>]
- uid: azure.keyvault.administration.KeyVaultBackupClient.begin_restore
  name: begin_restore
  summary: Restore a full backup of a Key Vault.
  signature: begin_restore(folder_url, sas_token, **kwargs)
  parameters:
  - name: folder_url
    description: 'URL of the blob holding the backup. This would be the *folder_url*
      of a

      <xref:azure.keyvault.administration.BackupOperation> returned by <xref:azure.keyvault.administration.KeyVaultBackupClient.begin_backup>
      or <xref:azure.keyvault.administration.get_backup_status>, for example

      [https:/](https:/)/<account>.blob.core.windows.net/backup/mhsm-account-2020090117323313'
    isRequired: true
    types:
    - <xref:str>
  - name: sas_token
    description: a Shared Access Signature (SAS) token authorizing access to the blob
      storage resource
    isRequired: true
    types:
    - <xref:str>
  return:
    types:
    - <xref:azure.core.polling.LROPoller>[<xref:RestoreOperation>]
- uid: azure.keyvault.administration.KeyVaultBackupClient.begin_selective_restore
  name: begin_selective_restore
  summary: Restore a single key from a full Key Vault backup.
  signature: begin_selective_restore(folder_url, sas_token, key_name, **kwargs)
  parameters:
  - name: folder_url
    description: 'URL for the blob storage resource, including the path to the blob
      holding the

      backup. This would be the *folder_url* of a <xref:azure.keyvault.administration.BackupOperation>
      returned by

      <xref:azure.keyvault.administration.KeyVaultBackupClient.begin_backup> or <xref:azure.keyvault.administration.get_backup_status>,
      for example

      [https:/](https:/)/<account>.blob.core.windows.net/backup/mhsm-account-2020090117323313'
    isRequired: true
    types:
    - <xref:str>
  - name: sas_token
    description: a Shared Access Signature (SAS) token authorizing access to the blob
      storage resource
    isRequired: true
    types:
    - <xref:str>
  - name: key_name
    description: name of the key to restore from the backup
    isRequired: true
    types:
    - <xref:str>
  return:
    types:
    - <xref:azure.core.polling.LROPoller>[<xref:RestoreOperation>]
- uid: azure.keyvault.administration.KeyVaultBackupClient.get_backup_status
  name: get_backup_status
  summary: Returns the status of a full backup operation.
  signature: get_backup_status(job_id, **kwargs)
  parameters:
  - name: job_id
    description: The job ID returned as part of the backup request
    isRequired: true
    types:
    - <xref:str>
  return:
    description: The full backup operation status as a <xref:azure.keyvault.administration.BackupOperation>
    types:
    - <xref:BackupOperation>
- uid: azure.keyvault.administration.KeyVaultBackupClient.get_restore_status
  name: get_restore_status
  summary: Returns the status of a restore operation.
  signature: get_restore_status(job_id, **kwargs)
  parameters:
  - name: job_id
    description: The job ID returned as part of the restore request
    isRequired: true
    types:
    - <xref:str>
  return:
    description: The restore operation status as a <xref:azure.keyvault.administration.RestoreOperation>
    types:
    - <xref:RestoreOperation>
