### YamlMime:UniversalReference
api_name: []
items:
- children: []
  class: azure.graphrbac.models.service_principal_py3.ServicePrincipal
  fullName: azure.graphrbac.models.service_principal_py3.ServicePrincipal
  inheritance:
  - inheritance:
    - inheritance:
      - type: builtins.object
      type: msrest.serialization.Model
    type: azure.graphrbac.models.directory_object_py3.DirectoryObject
  langs:
  - python
  module: azure.graphrbac.models.service_principal_py3
  name: ServicePrincipal
  summary: 'Active Directory service principal information.


    Variables are only populated by the server, and will be ignored when

    sending a request.


    All required parameters must be populated in order to send to Azure.'
  syntax:
    content: 'ServicePrincipal(*, additional_properties=None, account_enabled: bool
      = None, alternative_names=None, app_id: str = None, app_role_assignment_required:
      bool = None, app_roles=None, display_name: str = None, error_url: str = None,
      homepage: str = None, key_credentials=None, logout_url: str = None, password_credentials=None,
      preferred_token_signing_key_thumbprint: str = None, publisher_name: str = None,
      reply_urls=None, saml_metadata_url: str = None, service_principal_names=None,
      service_principal_type: str = None, tags=None, **kwargs) -> None'
    parameters:
    - description: 'Unmatched properties from the message are

        deserialized this collection'
      id: additional_properties
      type:
      - dict[str, object]
    - description: Required. Constant filled by server.
      id: object_type
      type:
      - str
    - description: 'whether or not the service principal account is

        enabled'
      id: account_enabled
      type:
      - bool
    - description: alternative names
      id: alternative_names
      type:
      - list[str]
    - description: The application ID.
      id: app_id
      type:
      - str
    - description: 'Specifies whether an

        AppRoleAssignment to a user or group is required before Azure AD will

        issue a user or access token to the application.'
      id: app_role_assignment_required
      type:
      - bool
    - description: 'The collection of application roles that an application

        may declare. These roles can be assigned to users, groups or service

        principals.'
      id: app_roles
      type:
      - list[azure.graphrbac.models.AppRole]
    - description: The display name of the service principal.
      id: display_name
      type:
      - str
    - description: 'A URL provided by the author of the associated

        application to report errors when using the application.'
      id: error_url
      type:
      - str
    - description: The URL to the homepage of the associated application.
      id: homepage
      type:
      - str
    - description: 'The collection of key credentials associated with

        the service principal.'
      id: key_credentials
      type:
      - list[azure.graphrbac.models.KeyCredential]
    - description: 'A URL provided by the author of the associated

        application to logout'
      id: logout_url
      type:
      - str
    - description: 'The collection of password credentials

        associated with the service principal.'
      id: password_credentials
      type:
      - list[azure.graphrbac.models.PasswordCredential]
    - description: 'The thumbprint of preferred

        certificate to sign the token'
      id: preferred_token_signing_key_thumbprint
      type:
      - str
    - description: The publisher's name of the associated application
      id: publisher_name
      type:
      - str
    - description: 'The URLs that user tokens are sent to for sign in with

        the associated application.  The redirect URIs that the oAuth 2.0

        authorization code and access tokens are sent to for the associated

        application.'
      id: reply_urls
      type:
      - list[str]
    - description: 'The URL to the SAML metadata of the associated

        application'
      id: saml_metadata_url
      type:
      - str
    - description: A collection of service principal names.
      id: service_principal_names
      type:
      - list[str]
    - description: the type of the service principal
      id: service_principal_type
      type:
      - str
    - description: 'Optional list of tags that you can apply to your service

        principals. Not nullable.'
      id: tags
      type:
      - list[str]
    variables:
    - description: The object ID.
      id: object_id
      type:
      - str
    - description: 'The time at which the directory object was

        deleted.'
      id: deletion_timestamp
      type:
      - datetime
    - description: 'The display name exposed by the associated

        application.'
      id: app_display_name
      type:
      - str
    - description: ''
      id: app_owner_tenant_id
      type:
      - str
    - description: 'The OAuth 2.0 permissions exposed by the

        associated application.'
      id: oauth2_permissions
      type:
      - list[azure.graphrbac.models.OAuth2Permission]
  type: class
  uid: azure.graphrbac.models.service_principal_py3.ServicePrincipal
references:
- fullName: dict[str, object]
  name: dict[str, object]
  spec.python:
  - fullName: dict
    name: dict
    uid: dict
  - fullName: '['
    name: '['
  - fullName: str
    name: str
    uid: str
  - fullName: ', '
    name: ', '
  - fullName: object
    name: object
    uid: object
  - fullName: ']'
    name: ']'
  uid: dict[str, object]
- fullName: list[str]
  name: list[str]
  spec.python:
  - fullName: list
    name: list
    uid: list
  - fullName: '['
    name: '['
  - fullName: str
    name: str
    uid: str
  - fullName: ']'
    name: ']'
  uid: list[str]
- fullName: list[azure.graphrbac.models.AppRole]
  name: list[AppRole]
  spec.python:
  - fullName: list
    name: list
    uid: list
  - fullName: '['
    name: '['
  - fullName: azure.graphrbac.models.AppRole
    name: AppRole
    uid: azure.graphrbac.models.AppRole
  - fullName: ']'
    name: ']'
  uid: list[azure.graphrbac.models.AppRole]
- fullName: list[azure.graphrbac.models.KeyCredential]
  name: list[KeyCredential]
  spec.python:
  - fullName: list
    name: list
    uid: list
  - fullName: '['
    name: '['
  - fullName: azure.graphrbac.models.KeyCredential
    name: KeyCredential
    uid: azure.graphrbac.models.KeyCredential
  - fullName: ']'
    name: ']'
  uid: list[azure.graphrbac.models.KeyCredential]
- fullName: list[azure.graphrbac.models.PasswordCredential]
  name: list[PasswordCredential]
  spec.python:
  - fullName: list
    name: list
    uid: list
  - fullName: '['
    name: '['
  - fullName: azure.graphrbac.models.PasswordCredential
    name: PasswordCredential
    uid: azure.graphrbac.models.PasswordCredential
  - fullName: ']'
    name: ']'
  uid: list[azure.graphrbac.models.PasswordCredential]
- fullName: list[str]
  name: list[str]
  spec.python:
  - fullName: list
    name: list
    uid: list
  - fullName: '['
    name: '['
  - fullName: str
    name: str
    uid: str
  - fullName: ']'
    name: ']'
  uid: list[str]
- fullName: list[str]
  name: list[str]
  spec.python:
  - fullName: list
    name: list
    uid: list
  - fullName: '['
    name: '['
  - fullName: str
    name: str
    uid: str
  - fullName: ']'
    name: ']'
  uid: list[str]
- fullName: list[str]
  name: list[str]
  spec.python:
  - fullName: list
    name: list
    uid: list
  - fullName: '['
    name: '['
  - fullName: str
    name: str
    uid: str
  - fullName: ']'
    name: ']'
  uid: list[str]
- fullName: list[azure.graphrbac.models.OAuth2Permission]
  name: list[OAuth2Permission]
  spec.python:
  - fullName: list
    name: list
    uid: list
  - fullName: '['
    name: '['
  - fullName: azure.graphrbac.models.OAuth2Permission
    name: OAuth2Permission
    uid: azure.graphrbac.models.OAuth2Permission
  - fullName: ']'
    name: ']'
  uid: list[azure.graphrbac.models.OAuth2Permission]
