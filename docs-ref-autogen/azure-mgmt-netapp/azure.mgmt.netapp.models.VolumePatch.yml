### YamlMime:UniversalReference
api_name: []
items:
- children: []
  class: azure.mgmt.netapp.models.VolumePatch
  fullName: azure.mgmt.netapp.models.VolumePatch
  inheritance:
  - inheritance:
    - type: builtins.object
    type: msrest.serialization.Model
  langs:
  - python
  module: azure.mgmt.netapp.models
  name: VolumePatch
  summary: 'Volume patch resource.


    Variables are only populated by the server, and will be ignored when

    sending a request.'
  syntax:
    content: 'VolumePatch(*, location: str = None, tags=None, service_level=''Premium'',
      usage_threshold: int = 107374182400, export_policy=None, **kwargs) -> None'
    parameters:
    - description: Resource location
      id: location
      type:
      - str
    - description: Resource tags
      id: tags
      type:
      - dict[str, str]
    - description: 'serviceLevel. The service level of the file system.

        Possible values include: ''Standard'', ''Premium'', ''Ultra''. Default value:

        "Premium" .'
      id: service_level
      type:
      - str
      - azure.mgmt.netapp.models.ServiceLevel
    - description: 'usageThreshold. Maximum storage quota allowed for

        a file system in bytes. This is a soft quota used for alerting only.

        Minimum size is 100 GiB. Upper limit is 100TiB. Specified in bytes.

        Default value: 107374182400 .'
      id: usage_threshold
      type:
      - long
    - description: exportPolicy. Set of export policy rules
      id: export_policy
      type:
      - azure.mgmt.netapp.models.VolumePatchPropertiesExportPolicy
    variables:
    - description: Resource Id
      id: id
      type:
      - str
    - description: Resource name
      id: name
      type:
      - str
    - description: Resource type
      id: type
      type:
      - str
  type: class
  uid: azure.mgmt.netapp.models.VolumePatch
references:
- fullName: dict[str, str]
  name: dict[str, str]
  spec.python:
  - fullName: dict
    name: dict
    uid: dict
  - fullName: '['
    name: '['
  - fullName: str
    name: str
    uid: str
  - fullName: ', '
    name: ', '
  - fullName: str
    name: str
    uid: str
  - fullName: ']'
    name: ']'
  uid: dict[str, str]
