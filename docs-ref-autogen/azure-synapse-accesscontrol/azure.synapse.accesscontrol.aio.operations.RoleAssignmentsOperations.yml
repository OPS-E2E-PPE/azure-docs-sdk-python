### YamlMime:PythonClass
uid: azure.synapse.accesscontrol.aio.operations.RoleAssignmentsOperations
name: RoleAssignmentsOperations
fullName: azure.synapse.accesscontrol.aio.operations.RoleAssignmentsOperations
module: azure.synapse.accesscontrol.aio.operations
inheritances:
- builtins.object
summary: 'RoleAssignmentsOperations async operations.


  You should not instantiate this class directly. Instead, you should create a Client
  instance that

  instantiates it for you and attaches it as an attribute.'
constructor:
  syntax: RoleAssignmentsOperations(client, config, serializer, deserializer) -> None
  parameters:
  - name: client
    description: Client for service requests.
    isRequired: true
  - name: config
    description: Configuration of service client.
    isRequired: true
  - name: serializer
    description: An object model serializer.
    isRequired: true
  - name: deserializer
    description: An object model deserializer.
    isRequired: true
variables:
- description: Alias to model classes used in this operation group.
  name: models
methods:
- uid: azure.synapse.accesscontrol.aio.operations.RoleAssignmentsOperations.check_principal_access
  name: check_principal_access
  summary: Check if the given principalId has access to perform list of actions at
    a given scope.
  signature: 'check_principal_access(subject: azure.synapse.accesscontrol.models._models_py3.SubjectInfo,
    actions: typing.List[_ForwardRef(''_models.RequiredAction'')], scope: str, **kwargs)
    -> azure.synapse.accesscontrol.models._models_py3.CheckPrincipalAccessResponse'
  parameters:
  - name: subject
    description: Subject details.
    isRequired: true
    types:
    - <xref:azure.synapse.accesscontrol.models.SubjectInfo>
  - name: actions
    description: List of actions.
    isRequired: true
    types:
    - <xref:list>[<xref:azure.synapse.accesscontrol.models.RequiredAction>]
  - name: scope
    description: Scope at which the check access is done.
    isRequired: true
    types:
    - <xref:str>
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  return:
    description: CheckPrincipalAccessResponse, or the result of cls(response)
    types:
    - <xref:azure.synapse.accesscontrol.models.CheckPrincipalAccessResponse>
- uid: azure.synapse.accesscontrol.aio.operations.RoleAssignmentsOperations.create_role_assignment
  name: create_role_assignment
  summary: Create role assignment.
  signature: 'create_role_assignment(role_assignment_id: str, role_id: str, principal_id:
    str, scope: str, principal_type: typing.Union[str, NoneType] = None, **kwargs)
    -> azure.synapse.accesscontrol.models._models_py3.RoleAssignmentDetails'
  parameters:
  - name: role_assignment_id
    description: The ID of the role assignment.
    isRequired: true
    types:
    - <xref:str>
  - name: role_id
    description: Role ID of the Synapse Built-In Role.
    isRequired: true
    types:
    - <xref:str>
  - name: principal_id
    description: Object ID of the AAD principal or security-group.
    isRequired: true
    types:
    - <xref:str>
  - name: scope
    description: Scope at which the role assignment is created.
    isRequired: true
    types:
    - <xref:str>
  - name: principal_type
    description: 'Type of the principal Id: User, Group or ServicePrincipal.'
    isRequired: true
    defaultValue: None
    types:
    - <xref:str>
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  return:
    description: RoleAssignmentDetails, or the result of cls(response)
    types:
    - <xref:azure.synapse.accesscontrol.models.RoleAssignmentDetails>
- uid: azure.synapse.accesscontrol.aio.operations.RoleAssignmentsOperations.delete_role_assignment_by_id
  name: delete_role_assignment_by_id
  summary: Delete role assignment by role assignment Id.
  signature: 'delete_role_assignment_by_id(role_assignment_id: str, scope: typing.Union[str,
    NoneType] = None, **kwargs) -> None'
  parameters:
  - name: role_assignment_id
    description: The ID of the role assignment.
    isRequired: true
    types:
    - <xref:str>
  - name: scope
    description: Scope of the Synapse Built-in Role.
    isRequired: true
    defaultValue: None
    types:
    - <xref:str>
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  return:
    description: None, or the result of cls(response)
    types:
    - <xref:None>
- uid: azure.synapse.accesscontrol.aio.operations.RoleAssignmentsOperations.get_role_assignment_by_id
  name: get_role_assignment_by_id
  summary: Get role assignment by role assignment Id.
  signature: 'get_role_assignment_by_id(role_assignment_id: str, **kwargs) -> azure.synapse.accesscontrol.models._models_py3.RoleAssignmentDetails'
  parameters:
  - name: role_assignment_id
    description: The ID of the role assignment.
    isRequired: true
    types:
    - <xref:str>
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  return:
    description: RoleAssignmentDetails, or the result of cls(response)
    types:
    - <xref:azure.synapse.accesscontrol.models.RoleAssignmentDetails>
- uid: azure.synapse.accesscontrol.aio.operations.RoleAssignmentsOperations.list_role_assignments
  name: list_role_assignments
  summary: List role assignments.
  signature: 'list_role_assignments(role_id: typing.Union[str, NoneType] = None, principal_id:
    typing.Union[str, NoneType] = None, scope: typing.Union[str, NoneType] = None,
    continuation_token_parameter: typing.Union[str, NoneType] = None, **kwargs) ->
    azure.synapse.accesscontrol.models._models_py3.RoleAssignmentDetailsList'
  parameters:
  - name: role_id
    description: Synapse Built-In Role Id.
    isRequired: true
    defaultValue: None
    types:
    - <xref:str>
  - name: principal_id
    description: Object ID of the AAD principal or security-group.
    isRequired: true
    defaultValue: None
    types:
    - <xref:str>
  - name: scope
    description: Scope of the Synapse Built-in Role.
    isRequired: true
    defaultValue: None
    types:
    - <xref:str>
  - name: continuation_token_parameter
    description: Continuation token.
    isRequired: true
    defaultValue: None
    types:
    - <xref:str>
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  return:
    description: RoleAssignmentDetailsList, or the result of cls(response)
    types:
    - <xref:azure.synapse.accesscontrol.models.RoleAssignmentDetailsList>
attributes:
- uid: azure.synapse.accesscontrol.aio.operations.RoleAssignmentsOperations.models
  name: models
  signature: 'models = <module ''azure.synapse.accesscontrol.models'' from ''c:\\hostedtoolcache\\windows\\python\\3.6.8\\x64\\lib\\site-packages\\azure\\synapse\\accesscontrol\\models\\__init__.py''>'
