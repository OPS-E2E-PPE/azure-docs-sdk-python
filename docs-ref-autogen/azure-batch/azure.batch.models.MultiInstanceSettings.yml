### YamlMime:UniversalReference
api_name: []
items:
- children: []
  class: azure.batch.models.MultiInstanceSettings
  fullName: azure.batch.models.MultiInstanceSettings
  inheritance:
  - inheritance:
    - type: builtins.object
    type: msrest.serialization.Model
  langs:
  - python
  module: azure.batch.models
  name: MultiInstanceSettings
  summary: 'Settings which specify how to run a multi-instance Task.


    Multi-instance Tasks are commonly used to support MPI Tasks. In the MPI

    case, if any of the subtasks fail (for example due to exiting with a

    non-zero exit code) the entire multi-instance Task fails. The

    multi-instance Task is then terminated and retried, up to its retry limit.


    All required parameters must be populated in order to send to Azure.'
  syntax:
    content: 'MultiInstanceSettings(*, coordination_command_line: str, number_of_instances:
      int = None, common_resource_files=None, **kwargs) -> None'
    parameters:
    - description: 'The number of Compute Nodes required by the

        Task. If omitted, the default is 1.'
      id: number_of_instances
      type:
      - int
    - description: 'Required. The command line to run on all

        the Compute Nodes to enable them to coordinate when the primary runs the

        main Task command. A typical coordination command line launches a

        background service and verifies that the service is ready to process

        inter-node messages.'
      id: coordination_command_line
      type:
      - str
    - description: 'A list of files that the Batch service will

        download before running the coordination command line. The difference

        between common resource files and Task resource files is that common

        resource files are downloaded for all subtasks including the primary,

        whereas Task resource files are downloaded only for the primary. Also note

        that these resource files are not downloaded to the Task working

        directory, but instead are downloaded to the Task root directory (one

        directory above the working directory).  There is a maximum size for the

        list of resource files.  When the max size is exceeded, the request will

        fail and the response error code will be RequestEntityTooLarge. If this

        occurs, the collection of ResourceFiles must be reduced in size. This can

        be achieved using .zip files, Application Packages, or Docker Containers.'
      id: common_resource_files
      type:
      - list[azure.batch.models.ResourceFile]
  type: class
  uid: azure.batch.models.MultiInstanceSettings
references:
- fullName: list[azure.batch.models.ResourceFile]
  name: list[ResourceFile]
  spec.python:
  - fullName: list
    name: list
    uid: list
  - fullName: '['
    name: '['
  - fullName: azure.batch.models.ResourceFile
    name: ResourceFile
    uid: azure.batch.models.ResourceFile
  - fullName: ']'
    name: ']'
  uid: list[azure.batch.models.ResourceFile]
