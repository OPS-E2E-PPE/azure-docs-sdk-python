### YamlMime:UniversalReference
api_name: []
items:
- children: []
  class: azure.mgmt.devtestlabs.models.LabFragment
  fullName: azure.mgmt.devtestlabs.models.LabFragment
  inheritance:
  - inheritance:
    - inheritance:
      - type: builtins.object
      type: msrest.serialization.Model
    type: azure.mgmt.devtestlabs.models._models_py3.UpdateResource
  langs:
  - python
  module: azure.mgmt.devtestlabs.models
  name: LabFragment
  summary: A lab.
  syntax:
    content: LabFragment(*, tags=None, lab_storage_type=None, mandatory_artifacts_resource_ids_linux=None,
      mandatory_artifacts_resource_ids_windows=None, premium_data_disks=None, environment_permission=None,
      announcement=None, support=None, extended_properties=None, **kwargs) -> None
    parameters:
    - description: The tags of the resource.
      id: tags
      type:
      - dict[str, str]
    - description: 'Type of storage used by the lab. It can be either

        Premium or Standard. Default is Premium. Possible values include:

        ''Standard'', ''Premium'', ''StandardSSD'''
      id: lab_storage_type
      type:
      - str
      - azure.mgmt.devtestlabs.models.StorageType
    - description: 'The ordered list of

        artifact resource IDs that should be applied on all Linux VM creations by

        default, prior to the artifacts specified by the user.'
      id: mandatory_artifacts_resource_ids_linux
      type:
      - list[str]
    - description: 'The ordered list of

        artifact resource IDs that should be applied on all Windows VM creations

        by default, prior to the artifacts specified by the user.'
      id: mandatory_artifacts_resource_ids_windows
      type:
      - list[str]
    - description: 'The setting to enable usage of premium data

        disks.

        When its value is ''Enabled'', creation of standard or premium data disks
        is

        allowed.

        When its value is ''Disabled'', only creation of standard data disks is

        allowed. Possible values include: ''Disabled'', ''Enabled'''
      id: premium_data_disks
      type:
      - str
      - azure.mgmt.devtestlabs.models.PremiumDataDisk
    - description: 'The access rights to be granted to the user

        when provisioning an environment. Possible values include: ''Reader'',

        ''Contributor'''
      id: environment_permission
      type:
      - str
      - azure.mgmt.devtestlabs.models.EnvironmentPermission
    - description: 'The properties of any lab announcement associated

        with this lab'
      id: announcement
      type:
      - azure.mgmt.devtestlabs.models.LabAnnouncementPropertiesFragment
    - description: 'The properties of any lab support message associated with

        this lab'
      id: support
      type:
      - azure.mgmt.devtestlabs.models.LabSupportPropertiesFragment
    - description: 'Extended properties of the lab used for

        experimental features'
      id: extended_properties
      type:
      - dict[str, str]
  type: class
  uid: azure.mgmt.devtestlabs.models.LabFragment
references:
- fullName: dict[str, str]
  name: dict[str, str]
  spec.python:
  - fullName: dict
    name: dict
    uid: dict
  - fullName: '['
    name: '['
  - fullName: str
    name: str
    uid: str
  - fullName: ', '
    name: ', '
  - fullName: str
    name: str
    uid: str
  - fullName: ']'
    name: ']'
  uid: dict[str, str]
- fullName: list[str]
  name: list[str]
  spec.python:
  - fullName: list
    name: list
    uid: list
  - fullName: '['
    name: '['
  - fullName: str
    name: str
    uid: str
  - fullName: ']'
    name: ']'
  uid: list[str]
- fullName: list[str]
  name: list[str]
  spec.python:
  - fullName: list
    name: list
    uid: list
  - fullName: '['
    name: '['
  - fullName: str
    name: str
    uid: str
  - fullName: ']'
    name: ']'
  uid: list[str]
- fullName: dict[str, str]
  name: dict[str, str]
  spec.python:
  - fullName: dict
    name: dict
    uid: dict
  - fullName: '['
    name: '['
  - fullName: str
    name: str
    uid: str
  - fullName: ', '
    name: ', '
  - fullName: str
    name: str
    uid: str
  - fullName: ']'
    name: ']'
  uid: dict[str, str]
