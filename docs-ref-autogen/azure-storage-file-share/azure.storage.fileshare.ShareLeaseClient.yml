### YamlMime:PythonClass
uid: azure.storage.fileshare.ShareLeaseClient
name: ShareLeaseClient
fullName: azure.storage.fileshare.ShareLeaseClient
module: azure.storage.fileshare
inheritances:
- builtins.object
summary: 'Creates a new ShareLeaseClient.


  This client provides lease operations on a ShareFileClient.'
constructor:
  syntax: ShareLeaseClient(client, lease_id=None)
  parameters:
  - name: client
    description: The client of the file to lease.
    isRequired: true
    types:
    - <xref:azure.storage.fileshare.ShareFileClient>
  - name: lease_id
    description: 'A string representing the lease ID of an existing lease. This value
      does not

      need to be specified in order to acquire a new lease, or break one.'
    isRequired: true
    types:
    - <xref:str>
variables:
- description: 'The ID of the lease currently being maintained. This will be *None*
    if no

    lease has yet been acquired.'
  name: id
  types:
  - <xref:str>
- description: 'The ETag of the lease currently being maintained. This will be *None*
    if no

    lease has yet been acquired or modified.'
  name: etag
  types:
  - <xref:str>
- description: 'The last modified timestamp of the lease currently being maintained.

    This will be *None* if no lease has yet been acquired or modified.'
  name: last_modified
  types:
  - <xref:datetime.datetime>
methods:
- uid: azure.storage.fileshare.ShareLeaseClient.acquire
  name: acquire
  summary: 'Requests a new lease. This operation establishes and manages a lock on
    a

    file for write and delete operations. If the file does not have an active lease,

    the File service creates a lease on the file. If the file has an active lease,

    you can only request a new lease using the active lease ID.


    If the file does not have an active lease, the File service creates a

    lease on the file and returns a new lease ID.'
  signature: acquire(**kwargs)
  parameters:
  - name: timeout
    description: The timeout parameter is expressed in seconds.
    types:
    - <xref:int>
  return:
    types:
    - <xref:None>
- uid: azure.storage.fileshare.ShareLeaseClient.break_lease
  name: break_lease
  summary: 'Force breaks the lease if the file has an active lease. Any authorized
    request can break the lease;

    the request is not required to specify a matching lease ID. An infinite lease
    breaks immediately.


    Once a lease is broken, it cannot be changed. Any authorized request can break
    the lease;

    the request is not required to specify a matching lease ID.

    When a lease is successfully broken, the response indicates the interval

    in seconds until a new lease can be acquired.'
  signature: break_lease(**kwargs)
  parameters:
  - name: timeout
    description: The timeout parameter is expressed in seconds.
    types:
    - <xref:int>
  return:
    description: Approximate time remaining in the lease period, in seconds.
    types:
    - <xref:int>
- uid: azure.storage.fileshare.ShareLeaseClient.change
  name: change
  summary: 'Changes the lease ID of an active lease. A change must include the current
    lease ID in x-ms-lease-id and

    a new lease ID in x-ms-proposed-lease-id.'
  signature: change(proposed_lease_id, **kwargs)
  parameters:
  - name: proposed_lease_id
    description: 'Proposed lease ID, in a GUID string format. The File service will
      raise an error

      (Invalid request) if the proposed lease ID is not in the correct format.'
    isRequired: true
    types:
    - <xref:str>
  - name: timeout
    description: The timeout parameter is expressed in seconds.
    types:
    - <xref:int>
  return:
    description: None
- uid: azure.storage.fileshare.ShareLeaseClient.release
  name: release
  summary: 'Releases the lease. The lease may be released if the lease ID specified
    on the request matches

    that associated with the file. Releasing the lease allows another client to immediately
    acquire

    the lease for the or file as soon as the release is complete.'
  signature: release(**kwargs)
  parameters:
  - name: timeout
    description: The timeout parameter is expressed in seconds.
    types:
    - <xref:int>
  return:
    description: None
