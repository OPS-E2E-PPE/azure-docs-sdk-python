### YamlMime:UniversalReference
api_name: []
items:
- children: []
  class: azure.mgmt.datafactory.models.MongoDbCursorMethodsProperties
  fullName: azure.mgmt.datafactory.models.MongoDbCursorMethodsProperties
  inheritance:
  - inheritance:
    - type: builtins.object
    type: msrest.serialization.Model
  langs:
  - python
  module: azure.mgmt.datafactory.models
  name: MongoDbCursorMethodsProperties
  summary: Cursor methods for Mongodb query.
  syntax:
    content: MongoDbCursorMethodsProperties(*, additional_properties=None, project=None,
      sort=None, skip=None, limit=None, **kwargs) -> None
    parameters:
    - description: 'Unmatched properties from the message are

        deserialized this collection'
      id: additional_properties
      type:
      - dict[str, object]
    - description: 'Specifies the fields to return in the documents that match

        the query filter. To return all fields in the matching documents, omit

        this parameter. Type: string (or Expression with resultType string).'
      id: project
      type:
      - object
    - description: 'Specifies the order in which the query returns matching

        documents. Type: string (or Expression with resultType string). Type:

        string (or Expression with resultType string).'
      id: sort
      type:
      - object
    - description: 'Specifies the how many documents skipped and where MongoDB

        begins returning results. This approach may be useful in implementing

        paginated results. Type: integer (or Expression with resultType integer).'
      id: skip
      type:
      - object
    - description: 'Specifies the maximum number of documents the server

        returns. limit() is analogous to the LIMIT statement in a SQL database.

        Type: integer (or Expression with resultType integer).'
      id: limit
      type:
      - object
  type: class
  uid: azure.mgmt.datafactory.models.MongoDbCursorMethodsProperties
references:
- fullName: dict[str, object]
  name: dict[str, object]
  spec.python:
  - fullName: dict
    name: dict
    uid: dict
  - fullName: '['
    name: '['
  - fullName: str
    name: str
    uid: str
  - fullName: ', '
    name: ', '
  - fullName: object
    name: object
    uid: object
  - fullName: ']'
    name: ']'
  uid: dict[str, object]
