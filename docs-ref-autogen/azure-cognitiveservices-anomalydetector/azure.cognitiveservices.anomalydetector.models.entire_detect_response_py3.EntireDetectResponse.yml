### YamlMime:UniversalReference
api_name: []
items:
- children: []
  class: azure.cognitiveservices.anomalydetector.models.entire_detect_response_py3.EntireDetectResponse
  fullName: azure.cognitiveservices.anomalydetector.models.entire_detect_response_py3.EntireDetectResponse
  inheritance:
  - inheritance:
    - type: builtins.object
    type: msrest.serialization.Model
  langs:
  - python
  module: azure.cognitiveservices.anomalydetector.models.entire_detect_response_py3
  name: EntireDetectResponse
  summary: 'EntireDetectResponse.


    All required parameters must be populated in order to send to Azure.'
  syntax:
    content: 'EntireDetectResponse(*, period: int, expected_values, upper_margins,
      lower_margins, is_anomaly, is_negative_anomaly, is_positive_anomaly, **kwargs)
      -> None'
    parameters:
    - description: 'Required. Frequency extracted from the series, zero means

        no recurrent pattern has been found.'
      id: period
      type:
      - int
    - description: 'Required. ExpectedValues contain expected value

        for each input point. The index of the array is consistent with the input

        series.'
      id: expected_values
      type:
      - list[float]
    - description: 'Required. UpperMargins contain upper margin of each

        input point. UpperMargin is used to calculate upperBoundary, which equals

        to expectedValue + (100 - marginScale)*upperMargin. Anomalies in response

        can be filtered by upperBoundary and lowerBoundary. By adjusting

        marginScale value, less significant anomalies can be filtered in client

        side. The index of the array is consistent with the input series.'
      id: upper_margins
      type:
      - list[float]
    - description: 'Required. LowerMargins contain lower margin of each

        input point. LowerMargin is used to calculate lowerBoundary, which equals

        to expectedValue - (100 - marginScale)*lowerMargin. Points between the

        boundary can be marked as normal ones in client side. The index of the

        array is consistent with the input series.'
      id: lower_margins
      type:
      - list[float]
    - description: 'Required. IsAnomaly contains anomaly properties for

        each input point. True means an anomaly either negative or positive has

        been detected. The index of the array is consistent with the input series.'
      id: is_anomaly
      type:
      - list[bool]
    - description: 'Required. IsNegativeAnomaly contains anomaly

        status in negative direction for each input point. True means a negative

        anomaly has been detected. A negative anomaly means the point is detected

        as an anomaly and its real value is smaller than the expected one. The

        index of the array is consistent with the input series.'
      id: is_negative_anomaly
      type:
      - list[bool]
    - description: 'Required. IsPositiveAnomaly contain anomaly

        status in positive direction for each input point. True means a positive

        anomaly has been detected. A positive anomaly means the point is detected

        as an anomaly and its real value is larger than the expected one. The

        index of the array is consistent with the input series.'
      id: is_positive_anomaly
      type:
      - list[bool]
  type: class
  uid: azure.cognitiveservices.anomalydetector.models.entire_detect_response_py3.EntireDetectResponse
references:
- fullName: list[float]
  name: list[float]
  spec.python:
  - fullName: list
    name: list
    uid: list
  - fullName: '['
    name: '['
  - fullName: float
    name: float
    uid: float
  - fullName: ']'
    name: ']'
  uid: list[float]
- fullName: list[bool]
  name: list[bool]
  spec.python:
  - fullName: list
    name: list
    uid: list
  - fullName: '['
    name: '['
  - fullName: bool
    name: bool
    uid: bool
  - fullName: ']'
    name: ']'
  uid: list[bool]
- fullName: list[bool]
  name: list[bool]
  spec.python:
  - fullName: list
    name: list
    uid: list
  - fullName: '['
    name: '['
  - fullName: bool
    name: bool
    uid: bool
  - fullName: ']'
    name: ']'
  uid: list[bool]
- fullName: list[bool]
  name: list[bool]
  spec.python:
  - fullName: list
    name: list
    uid: list
  - fullName: '['
    name: '['
  - fullName: bool
    name: bool
    uid: bool
  - fullName: ']'
    name: ']'
  uid: list[bool]
