### YamlMime:UniversalReference
api_name: []
items:
- children:
  - azure.core.tracing.common.change_context
  - azure.core.tracing.common.with_current_context
  fullName: azure.core.tracing.common
  langs:
  - python
  module: azure.core.tracing.common
  name: common
  summary: Common functions shared by both the sync and the async decorators.
  type: module
  uid: azure.core.tracing.common
- fullName: azure.core.tracing.common.change_context
  langs:
  - python
  module: azure.core.tracing.common
  name: change_context(span)
  summary: 'Execute this block inside the given context and restore it afterwards.


    This does not start and ends the span, but just make sure all code is executed
    within

    that span.


    If span is None, no-op.'
  syntax:
    content: change_context(span)
    parameters:
    - description: A span
      id: span
      type:
      - AbstractSpan
    return:
      type:
      - contextmanager
  type: function
  uid: azure.core.tracing.common.change_context
- fullName: azure.core.tracing.common.with_current_context
  langs:
  - python
  module: azure.core.tracing.common
  name: with_current_context(func)
  summary: Passes the current spans to the new context the function will be run in.
  syntax:
    content: with_current_context(func)
    parameters:
    - description: The function that will be run in the new context
      id: func
    return:
      description: The func wrapped with correct context
      type:
      - callable
  type: function
  uid: azure.core.tracing.common.with_current_context
references:
- fullName: azure.core.tracing.common.change_context
  isExternal: false
  name: change_context(span)
  parent: azure.core.tracing.common
  uid: azure.core.tracing.common.change_context
- fullName: azure.core.tracing.common.with_current_context
  isExternal: false
  name: with_current_context(func)
  parent: azure.core.tracing.common
  uid: azure.core.tracing.common.with_current_context
