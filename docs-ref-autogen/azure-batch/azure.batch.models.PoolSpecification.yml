### YamlMime:UniversalReference
api_name: []
items:
- children: []
  class: azure.batch.models.PoolSpecification
  fullName: azure.batch.models.PoolSpecification
  inheritance:
  - inheritance:
    - type: builtins.object
    type: msrest.serialization.Model
  langs:
  - python
  module: azure.batch.models
  name: PoolSpecification
  summary: 'Specification for creating a new Pool.


    All required parameters must be populated in order to send to Azure.'
  syntax:
    content: 'PoolSpecification(*, vm_size: str, display_name: str = None, cloud_service_configuration=None,
      virtual_machine_configuration=None, max_tasks_per_node: int = None, task_scheduling_policy=None,
      resize_timeout=None, target_dedicated_nodes: int = None, target_low_priority_nodes:
      int = None, enable_auto_scale: bool = None, auto_scale_formula: str = None,
      auto_scale_evaluation_interval=None, enable_inter_node_communication: bool =
      None, network_configuration=None, start_task=None, certificate_references=None,
      application_package_references=None, application_licenses=None, user_accounts=None,
      metadata=None, mount_configuration=None, **kwargs) -> None'
    parameters:
    - description: 'The display name for the Pool. The display name need

        not be unique and can contain any Unicode characters up to a maximum

        length of 1024.'
      id: display_name
      type:
      - str
    - description: 'Required. The size of the virtual machines in the Pool.

        All virtual machines in a Pool are the same size. For information about

        available sizes of virtual machines in Pools, see Choose a VM size for

        Compute Nodes in an Azure Batch Pool

        ([https://docs.microsoft.com/azure/batch/batch-pool-vm-sizes](https://docs.microsoft.com/azure/batch/batch-pool-vm-sizes)).'
      id: vm_size
      type:
      - str
    - description: 'The cloud service configuration for

        the Pool. This property must be specified if the Pool needs to be created

        with Azure PaaS VMs. This property and virtualMachineConfiguration are

        mutually exclusive and one of the properties must be specified. If neither

        is specified then the Batch service returns an error; if you are calling

        the REST API directly, the HTTP status code is 400 (Bad Request). This

        property cannot be specified if the Batch Account was created with its

        poolAllocationMode property set to ''UserSubscription''.'
      id: cloud_service_configuration
      type:
      - azure.batch.models.CloudServiceConfiguration
    - description: 'The virtual machine configuration

        for the Pool. This property must be specified if the Pool needs to be

        created with Azure IaaS VMs. This property and cloudServiceConfiguration

        are mutually exclusive and one of the properties must be specified. If

        neither is specified then the Batch service returns an error; if you are

        calling the REST API directly, the HTTP status code is 400 (Bad Request).'
      id: virtual_machine_configuration
      type:
      - azure.batch.models.VirtualMachineConfiguration
    - description: 'The maximum number of Tasks that can run

        concurrently on a single Compute Node in the Pool. The default value is 1.

        The maximum value is the smaller of 4 times the number of cores of the

        vmSize of the Pool or 256.'
      id: max_tasks_per_node
      type:
      - int
    - description: 'How Tasks are distributed across Compute

        Nodes in a Pool. If not specified, the default is spread.'
      id: task_scheduling_policy
      type:
      - azure.batch.models.TaskSchedulingPolicy
    - description: 'The timeout for allocation of Compute Nodes to the

        Pool. This timeout applies only to manual scaling; it has no effect when

        enableAutoScale is set to true. The default value is 15 minutes. The

        minimum value is 5 minutes. If you specify a value less than 5 minutes,

        the Batch service rejects the request with an error; if you are calling

        the REST API directly, the HTTP status code is 400 (Bad Request).'
      id: resize_timeout
      type:
      - timedelta
    - description: 'The desired number of dedicated Compute

        Nodes in the Pool. This property must not be specified if enableAutoScale

        is set to true. If enableAutoScale is set to false, then you must set

        either targetDedicatedNodes, targetLowPriorityNodes, or both.'
      id: target_dedicated_nodes
      type:
      - int
    - description: 'The desired number of low-priority

        Compute Nodes in the Pool. This property must not be specified if

        enableAutoScale is set to true. If enableAutoScale is set to false, then

        you must set either targetDedicatedNodes, targetLowPriorityNodes, or both.'
      id: target_low_priority_nodes
      type:
      - int
    - description: 'Whether the Pool size should automatically

        adjust over time. If false, at least one of targetDedicateNodes and

        targetLowPriorityNodes must be specified. If true, the autoScaleFormula

        element is required. The Pool automatically resizes according to the

        formula. The default value is false.'
      id: enable_auto_scale
      type:
      - bool
    - description: 'The formula for the desired number of Compute

        Nodes in the Pool. This property must not be specified if enableAutoScale

        is set to false. It is required if enableAutoScale is set to true. The

        formula is checked for validity before the Pool is created. If the formula

        is not valid, the Batch service rejects the request with detailed error

        information.'
      id: auto_scale_formula
      type:
      - str
    - description: 'The time interval at which to

        automatically adjust the Pool size according to the autoscale formula. The

        default value is 15 minutes. The minimum and maximum value are 5 minutes

        and 168 hours respectively. If you specify a value less than 5 minutes or

        greater than 168 hours, the Batch service rejects the request with an

        invalid property value error; if you are calling the REST API directly,

        the HTTP status code is 400 (Bad Request).'
      id: auto_scale_evaluation_interval
      type:
      - timedelta
    - description: 'Whether the Pool permits direct

        communication between Compute Nodes. Enabling inter-node communication

        limits the maximum size of the Pool due to deployment restrictions on the

        Compute Nodes of the Pool. This may result in the Pool not reaching its

        desired size. The default value is false.'
      id: enable_inter_node_communication
      type:
      - bool
    - description: The network configuration for the Pool.
      id: network_configuration
      type:
      - azure.batch.models.NetworkConfiguration
    - description: 'A Task to run on each Compute Node as it joins the

        Pool. The Task runs when the Compute Node is added to the Pool or when the

        Compute Node is restarted.'
      id: start_task
      type:
      - azure.batch.models.StartTask
    - description: 'A list of Certificates to be installed on

        each Compute Node in the Pool. For Windows Nodes, the Batch service

        installs the Certificates to the specified Certificate store and location.

        For Linux Compute Nodes, the Certificates are stored in a directory inside

        the Task working directory and an environment variable

        AZ_BATCH_CERTIFICATES_DIR is supplied to the Task to query for this

        location. For Certificates with visibility of ''remoteUser'', a ''certs''

        directory is created in the user''s home directory (e.g.,

        /home/{user-name}/certs) and Certificates are placed in that directory.'
      id: certificate_references
      type:
      - list[azure.batch.models.CertificateReference]
    - description: 'The list of Packages to be

        installed on each Compute Node in the Pool. Changes to Package references

        affect all new Nodes joining the Pool, but do not affect Compute Nodes

        that are already in the Pool until they are rebooted or reimaged. There is

        a maximum of 10 Package references on any given Pool.'
      id: application_package_references
      type:
      - list[azure.batch.models.ApplicationPackageReference]
    - description: 'The list of application licenses the Batch

        service will make available on each Compute Node in the Pool. The list of

        application licenses must be a subset of available Batch service

        application licenses. If a license is requested which is not supported,

        Pool creation will fail. The permitted licenses available on the Pool are

        ''maya'', ''vray'', ''3dsmax'', ''arnold''. An additional charge applies for
        each

        application license added to the Pool.'
      id: application_licenses
      type:
      - list[str]
    - description: 'The list of user Accounts to be created on each

        Compute Node in the Pool.'
      id: user_accounts
      type:
      - list[azure.batch.models.UserAccount]
    - description: 'A list of name-value pairs associated with the Pool as

        metadata. The Batch service does not assign any meaning to metadata; it is

        solely for the use of user code.'
      id: metadata
      type:
      - list[azure.batch.models.MetadataItem]
    - description: 'A list of file systems to mount on each node

        in the pool. This supports Azure Files, NFS, CIFS/SMB, and Blobfuse.'
      id: mount_configuration
      type:
      - list[azure.batch.models.MountConfiguration]
  type: class
  uid: azure.batch.models.PoolSpecification
references:
- fullName: list[azure.batch.models.CertificateReference]
  name: list[CertificateReference]
  spec.python:
  - fullName: list
    name: list
    uid: list
  - fullName: '['
    name: '['
  - fullName: azure.batch.models.CertificateReference
    name: CertificateReference
    uid: azure.batch.models.CertificateReference
  - fullName: ']'
    name: ']'
  uid: list[azure.batch.models.CertificateReference]
- fullName: list[azure.batch.models.ApplicationPackageReference]
  name: list[ApplicationPackageReference]
  spec.python:
  - fullName: list
    name: list
    uid: list
  - fullName: '['
    name: '['
  - fullName: azure.batch.models.ApplicationPackageReference
    name: ApplicationPackageReference
    uid: azure.batch.models.ApplicationPackageReference
  - fullName: ']'
    name: ']'
  uid: list[azure.batch.models.ApplicationPackageReference]
- fullName: list[str]
  name: list[str]
  spec.python:
  - fullName: list
    name: list
    uid: list
  - fullName: '['
    name: '['
  - fullName: str
    name: str
    uid: str
  - fullName: ']'
    name: ']'
  uid: list[str]
- fullName: list[azure.batch.models.UserAccount]
  name: list[UserAccount]
  spec.python:
  - fullName: list
    name: list
    uid: list
  - fullName: '['
    name: '['
  - fullName: azure.batch.models.UserAccount
    name: UserAccount
    uid: azure.batch.models.UserAccount
  - fullName: ']'
    name: ']'
  uid: list[azure.batch.models.UserAccount]
- fullName: list[azure.batch.models.MetadataItem]
  name: list[MetadataItem]
  spec.python:
  - fullName: list
    name: list
    uid: list
  - fullName: '['
    name: '['
  - fullName: azure.batch.models.MetadataItem
    name: MetadataItem
    uid: azure.batch.models.MetadataItem
  - fullName: ']'
    name: ']'
  uid: list[azure.batch.models.MetadataItem]
- fullName: list[azure.batch.models.MountConfiguration]
  name: list[MountConfiguration]
  spec.python:
  - fullName: list
    name: list
    uid: list
  - fullName: '['
    name: '['
  - fullName: azure.batch.models.MountConfiguration
    name: MountConfiguration
    uid: azure.batch.models.MountConfiguration
  - fullName: ']'
    name: ']'
  uid: list[azure.batch.models.MountConfiguration]
