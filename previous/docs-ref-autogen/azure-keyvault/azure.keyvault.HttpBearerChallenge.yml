### YamlMime:UniversalReference
api_name: []
items:
- children:
  - azure.keyvault.HttpBearerChallenge.get_authorization_server
  - azure.keyvault.HttpBearerChallenge.get_resource
  - azure.keyvault.HttpBearerChallenge.get_scope
  - azure.keyvault.HttpBearerChallenge.get_value
  - azure.keyvault.HttpBearerChallenge.is_bearer_challenge
  class: azure.keyvault.HttpBearerChallenge
  fullName: azure.keyvault.HttpBearerChallenge
  inheritance:
  - type: builtins.object
  langs:
  - python
  module: azure.keyvault
  name: HttpBearerChallenge
  summary: ''
  syntax:
    content: HttpBearerChallenge(request_uri, challenge)
  type: class
  uid: azure.keyvault.HttpBearerChallenge
- class: azure.keyvault.HttpBearerChallenge
  fullName: azure.keyvault.HttpBearerChallenge.get_authorization_server
  langs:
  - python
  module: azure.keyvault
  name: get_authorization_server()
  summary: Returns the URI for the authorization server if present, otherwise empty
    string.
  syntax:
    content: get_authorization_server()
    parameters: []
  type: method
  uid: azure.keyvault.HttpBearerChallenge.get_authorization_server
- class: azure.keyvault.HttpBearerChallenge
  fullName: azure.keyvault.HttpBearerChallenge.get_resource
  langs:
  - python
  module: azure.keyvault
  name: get_resource()
  summary: Returns the resource if present, otherwise empty string.
  syntax:
    content: get_resource()
    parameters: []
  type: method
  uid: azure.keyvault.HttpBearerChallenge.get_resource
- class: azure.keyvault.HttpBearerChallenge
  fullName: azure.keyvault.HttpBearerChallenge.get_scope
  langs:
  - python
  module: azure.keyvault
  name: get_scope()
  summary: Returns the scope if present, otherwise empty string.
  syntax:
    content: get_scope()
    parameters: []
  type: method
  uid: azure.keyvault.HttpBearerChallenge.get_scope
- class: azure.keyvault.HttpBearerChallenge
  fullName: azure.keyvault.HttpBearerChallenge.get_value
  langs:
  - python
  module: azure.keyvault
  name: get_value(key)
  syntax:
    content: get_value(key)
    parameters:
    - id: key
  type: method
  uid: azure.keyvault.HttpBearerChallenge.get_value
- class: azure.keyvault.HttpBearerChallenge
  fullName: azure.keyvault.HttpBearerChallenge.is_bearer_challenge
  langs:
  - python
  module: azure.keyvault
  name: is_bearer_challenge(authentication_header)
  summary: 'Tests whether an authentication header is a Bearer challenge.

    :param authentication_header: the authentication header to test

    rtype: bool'
  syntax:
    content: is_bearer_challenge(authentication_header)
    parameters:
    - id: authentication_header
  type: method
  uid: azure.keyvault.HttpBearerChallenge.is_bearer_challenge
references:
- fullName: azure.keyvault.HttpBearerChallenge.get_authorization_server
  isExternal: false
  name: get_authorization_server()
  parent: azure.keyvault.HttpBearerChallenge
  uid: azure.keyvault.HttpBearerChallenge.get_authorization_server
- fullName: azure.keyvault.HttpBearerChallenge.get_resource
  isExternal: false
  name: get_resource()
  parent: azure.keyvault.HttpBearerChallenge
  uid: azure.keyvault.HttpBearerChallenge.get_resource
- fullName: azure.keyvault.HttpBearerChallenge.get_scope
  isExternal: false
  name: get_scope()
  parent: azure.keyvault.HttpBearerChallenge
  uid: azure.keyvault.HttpBearerChallenge.get_scope
- fullName: azure.keyvault.HttpBearerChallenge.get_value
  isExternal: false
  name: get_value(key)
  parent: azure.keyvault.HttpBearerChallenge
  uid: azure.keyvault.HttpBearerChallenge.get_value
- fullName: azure.keyvault.HttpBearerChallenge.is_bearer_challenge
  isExternal: false
  name: is_bearer_challenge(authentication_header)
  parent: azure.keyvault.HttpBearerChallenge
  uid: azure.keyvault.HttpBearerChallenge.is_bearer_challenge
