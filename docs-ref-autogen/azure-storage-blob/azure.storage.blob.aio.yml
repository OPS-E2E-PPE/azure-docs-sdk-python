### YamlMime:UniversalReference
api_name: []
items:
- children:
  - azure.storage.blob.aio.upload_blob_to_url
  - azure.storage.blob.aio.download_blob_from_url
  - azure.storage.blob.aio.BlobServiceClient
  - azure.storage.blob.aio.ContainerClient
  - azure.storage.blob.aio.BlobClient
  - azure.storage.blob.aio.BlobLeaseClient
  - azure.storage.blob.aio.ExponentialRetry
  - azure.storage.blob.aio.LinearRetry
  - azure.storage.blob.aio.StorageStreamDownloader
  fullName: azure.storage.blob.aio
  kind: import
  langs:
  - python
  module: azure.storage.blob.aio
  name: aio
  type: package
  uid: azure.storage.blob.aio
- fullName: azure.storage.blob.aio.upload_blob_to_url
  langs:
  - python
  module: azure.storage.blob.aio
  name: upload_blob_to_url(blob_url, data, credential=None, **kwargs)
  summary: 'Upload data to a given URL


    The data will be uploaded as a block blob.'
  syntax:
    content: upload_blob_to_url(blob_url, data, credential=None, **kwargs)
    parameters:
    - description: The full URI to the blob. This can also include a SAS token.
      id: blob_url
      type:
      - str
    - description: The data to upload. This can be bytes, text, an iterable or a file-like
        object.
      id: data
      type:
      - bytes
      - str
      - Iterable
    - defaultValue: None
      description: 'The credentials with which to authenticate. This is optional if
        the

        blob URL already has a SAS token. The value can be a SAS token string, an
        account

        shared access key, or an instance of a TokenCredentials class from azure.identity.

        If the URL already has a SAS token, specifying an explicit credential will
        take priority.'
      id: credential
    return:
      description: Blob-updated property dict (Etag and last modified)
      type:
      - dict(str, Any)
  type: function
  uid: azure.storage.blob.aio.upload_blob_to_url
- fullName: azure.storage.blob.aio.download_blob_from_url
  langs:
  - python
  module: azure.storage.blob.aio
  name: download_blob_from_url(blob_url, output, credential=None, **kwargs)
  summary: Download the contents of a blob to a local file or stream.
  syntax:
    content: download_blob_from_url(blob_url, output, credential=None, **kwargs)
    parameters:
    - description: The full URI to the blob. This can also include a SAS token.
      id: blob_url
      type:
      - str
    - description: 'Where the data should be downloaded to. This could be either a
        file path to write to,

        or an open IO handle to write to.'
      id: output
      type:
      - str
      - writable stream
    - defaultValue: None
      description: 'The credentials with which to authenticate. This is optional if
        the

        blob URL already has a SAS token or the blob is public. The value can be a
        SAS token string,

        an account shared access key, or an instance of a TokenCredentials class from
        azure.identity.

        If the URL already has a SAS token, specifying an explicit credential will
        take priority.'
      id: credential
    return:
      type:
      - None
  type: function
  uid: azure.storage.blob.aio.download_blob_from_url
references:
- fullName: azure.storage.blob.aio.upload_blob_to_url
  isExternal: false
  name: upload_blob_to_url(blob_url, data, credential=None, **kwargs)
  parent: azure.storage.blob.aio
  uid: azure.storage.blob.aio.upload_blob_to_url
- fullName: azure.storage.blob.aio.download_blob_from_url
  isExternal: false
  name: download_blob_from_url(blob_url, output, credential=None, **kwargs)
  parent: azure.storage.blob.aio
  uid: azure.storage.blob.aio.download_blob_from_url
- fullName: azure.storage.blob.aio.BlobServiceClient
  isExternal: false
  name: BlobServiceClient
  parent: azure.storage.blob.aio
  uid: azure.storage.blob.aio.BlobServiceClient
- fullName: azure.storage.blob.aio.ContainerClient
  isExternal: false
  name: ContainerClient
  parent: azure.storage.blob.aio
  uid: azure.storage.blob.aio.ContainerClient
- fullName: azure.storage.blob.aio.BlobClient
  isExternal: false
  name: BlobClient
  parent: azure.storage.blob.aio
  uid: azure.storage.blob.aio.BlobClient
- fullName: azure.storage.blob.aio.BlobLeaseClient
  isExternal: false
  name: BlobLeaseClient
  parent: azure.storage.blob.aio
  uid: azure.storage.blob.aio.BlobLeaseClient
- fullName: azure.storage.blob.aio.ExponentialRetry
  isExternal: false
  name: ExponentialRetry
  parent: azure.storage.blob.aio
  uid: azure.storage.blob.aio.ExponentialRetry
- fullName: azure.storage.blob.aio.LinearRetry
  isExternal: false
  name: LinearRetry
  parent: azure.storage.blob.aio
  uid: azure.storage.blob.aio.LinearRetry
- fullName: azure.storage.blob.aio.StorageStreamDownloader
  isExternal: false
  name: StorageStreamDownloader
  parent: azure.storage.blob.aio
  uid: azure.storage.blob.aio.StorageStreamDownloader
- fullName: dict(str, Any)
  name: dict(str, Any)
  spec.python:
  - fullName: dict
    name: dict
    uid: dict
  - fullName: (
    name: (
  - fullName: str
    name: str
    uid: str
  - fullName: ', '
    name: ', '
  - fullName: Any
    name: Any
    uid: Any
  - fullName: )
    name: )
  uid: dict(str, Any)
