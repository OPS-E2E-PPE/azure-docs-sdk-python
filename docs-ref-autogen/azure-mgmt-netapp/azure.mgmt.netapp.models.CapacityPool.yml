### YamlMime:UniversalReference
api_name: []
items:
- children: []
  class: azure.mgmt.netapp.models.CapacityPool
  fullName: azure.mgmt.netapp.models.CapacityPool
  inheritance:
  - inheritance:
    - type: builtins.object
    type: msrest.serialization.Model
  langs:
  - python
  module: azure.mgmt.netapp.models
  name: CapacityPool
  summary: 'Capacity pool resource.


    Variables are only populated by the server, and will be ignored when

    sending a request.


    All required parameters must be populated in order to send to Azure.'
  syntax:
    content: 'CapacityPool(*, location: str, size: int, tags=None, service_level=''Premium'',
      **kwargs) -> None'
    parameters:
    - description: Required. Resource location
      id: location
      type:
      - str
    - description: Resource tags
      id: tags
      type:
      - dict[str, str]
    - description: 'Required. size. Provisioned size of the pool (in bytes).

        Allowed values are in 4TiB chunks (value must be multiply of

        4398046511104).'
      id: size
      type:
      - long
    - description: 'Required. serviceLevel. The service level of the

        file system. Possible values include: ''Standard'', ''Premium'', ''Ultra''.

        Default value: "Premium" .'
      id: service_level
      type:
      - str
      - azure.mgmt.netapp.models.ServiceLevel
    variables:
    - description: Resource Id
      id: id
      type:
      - str
    - description: Resource name
      id: name
      type:
      - str
    - description: Resource type
      id: type
      type:
      - str
    - description: poolId. UUID v4 used to identify the Pool
      id: pool_id
      type:
      - str
    - description: Azure lifecycle management
      id: provisioning_state
      type:
      - str
  type: class
  uid: azure.mgmt.netapp.models.CapacityPool
references:
- fullName: dict[str, str]
  name: dict[str, str]
  spec.python:
  - fullName: dict
    name: dict
    uid: dict
  - fullName: '['
    name: '['
  - fullName: str
    name: str
    uid: str
  - fullName: ', '
    name: ', '
  - fullName: str
    name: str
    uid: str
  - fullName: ']'
    name: ']'
  uid: dict[str, str]
