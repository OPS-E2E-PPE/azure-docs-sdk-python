### YamlMime:UniversalReference
api_name: []
items:
- children:
  - azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient.backup_key
  - azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient.backup_secret
  - azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient.create_certificate
  - azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient.create_key
  - azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient.decrypt
  - azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient.delete_certificate
  - azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient.delete_certificate_contacts
  - azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient.delete_certificate_issuer
  - azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient.delete_certificate_operation
  - azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient.delete_key
  - azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient.delete_sas_definition
  - azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient.delete_secret
  - azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient.delete_storage_account
  - azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient.encrypt
  - azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient.get_certificate
  - azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient.get_certificate_contacts
  - azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient.get_certificate_issuer
  - azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient.get_certificate_issuers
  - azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient.get_certificate_operation
  - azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient.get_certificate_policy
  - azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient.get_certificate_versions
  - azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient.get_certificates
  - azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient.get_deleted_certificate
  - azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient.get_deleted_certificates
  - azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient.get_deleted_key
  - azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient.get_deleted_keys
  - azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient.get_deleted_secret
  - azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient.get_deleted_secrets
  - azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient.get_key
  - azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient.get_key_versions
  - azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient.get_keys
  - azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient.get_sas_definition
  - azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient.get_sas_definitions
  - azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient.get_secret
  - azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient.get_secret_versions
  - azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient.get_secrets
  - azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient.get_storage_account
  - azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient.get_storage_accounts
  - azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient.import_certificate
  - azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient.import_key
  - azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient.merge_certificate
  - azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient.purge_deleted_certificate
  - azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient.purge_deleted_key
  - azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient.purge_deleted_secret
  - azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient.recover_deleted_certificate
  - azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient.recover_deleted_key
  - azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient.recover_deleted_secret
  - azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient.regenerate_storage_account_key
  - azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient.restore_key
  - azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient.restore_secret
  - azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient.set_certificate_contacts
  - azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient.set_certificate_issuer
  - azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient.set_sas_definition
  - azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient.set_secret
  - azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient.set_storage_account
  - azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient.sign
  - azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient.unwrap_key
  - azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient.update_certificate
  - azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient.update_certificate_issuer
  - azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient.update_certificate_operation
  - azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient.update_certificate_policy
  - azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient.update_key
  - azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient.update_sas_definition
  - azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient.update_secret
  - azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient.update_storage_account
  - azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient.verify
  - azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient.wrap_key
  class: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient
  fullName: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient
  inheritance:
  - inheritance:
    - type: builtins.object
    type: msrest.service_client.SDKClient
  langs:
  - python
  module: azure.keyvault.v2016_10_01.key_vault_client
  name: KeyVaultClient
  summary: The key vault client performs cryptographic key operations and vault operations
    against the Key Vault service.
  syntax:
    content: KeyVaultClient(credentials)
    parameters:
    - description: Credentials needed for the client to connect to Azure.
      id: credentials
      type:
      - msrestazure.azure_active_directory
    variables:
    - description: Configuration for client.
      id: config
      type:
      - KeyVaultClientConfiguration
  type: class
  uid: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient
- class: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient
  exceptions:
  - type: azure.keyvault.v2016_10_01.models.KeyVaultErrorException
  fullName: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient.backup_key
  langs:
  - python
  module: azure.keyvault.v2016_10_01.key_vault_client
  name: backup_key(vault_base_url, key_name, custom_headers=None, raw=False, **operation_config)
  summary: 'Requests that a backup of the specified key be downloaded to the

    client.


    The Key Backup operation exports a key from Azure Key Vault in a

    protected form. Note that this operation does NOT return key material

    in a form that can be used outside the Azure Key Vault system, the

    returned key material is either protected to a Azure Key Vault HSM or

    to Azure Key Vault itself. The intent of this operation is to allow a

    client to GENERATE a key in one Azure Key Vault instance, BACKUP the

    key, and then RESTORE it into another Azure Key Vault instance. The

    BACKUP operation may be used to export, in protected form, any key type

    from Azure Key Vault. Individual versions of a key cannot be backed up.

    BACKUP / RESTORE can be performed within geographical boundaries only;

    meaning that a BACKUP from one geographical area cannot be restored to

    another geographical area. For example, a backup from the US

    geographical area cannot be restored in an EU geographical area. This

    operation requires the key/backup permission.'
  syntax:
    content: backup_key(vault_base_url, key_name, custom_headers=None, raw=False,
      **operation_config)
    parameters:
    - description: 'The vault name, for example

        [https://myvault.vault.azure.net](https://myvault.vault.azure.net).'
      id: vault_base_url
      type:
      - str
    - description: The name of the key.
      id: key_name
      type:
      - str
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
    return:
      description: BackupKeyResult or ClientRawResponse if raw=true
      type:
      - azure.keyvault.v2016_10_01.models.BackupKeyResult
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient.backup_key
- class: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient
  exceptions:
  - type: azure.keyvault.v2016_10_01.models.KeyVaultErrorException
  fullName: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient.backup_secret
  langs:
  - python
  module: azure.keyvault.v2016_10_01.key_vault_client
  name: backup_secret(vault_base_url, secret_name, custom_headers=None, raw=False,
    **operation_config)
  summary: 'Backs up the specified secret.


    Requests that a backup of the specified secret be downloaded to the

    client. All versions of the secret will be downloaded. This operation

    requires the secrets/backup permission.'
  syntax:
    content: backup_secret(vault_base_url, secret_name, custom_headers=None, raw=False,
      **operation_config)
    parameters:
    - description: 'The vault name, for example

        [https://myvault.vault.azure.net](https://myvault.vault.azure.net).'
      id: vault_base_url
      type:
      - str
    - description: The name of the secret.
      id: secret_name
      type:
      - str
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
    return:
      description: BackupSecretResult or ClientRawResponse if raw=true
      type:
      - azure.keyvault.v2016_10_01.models.BackupSecretResult
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient.backup_secret
- class: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient
  exceptions:
  - type: azure.keyvault.v2016_10_01.models.KeyVaultErrorException
  fullName: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient.create_certificate
  langs:
  - python
  module: azure.keyvault.v2016_10_01.key_vault_client
  name: create_certificate(vault_base_url, certificate_name, certificate_policy=None,
    certificate_attributes=None, tags=None, custom_headers=None, raw=False, **operation_config)
  summary: 'Creates a new certificate.


    If this is the first version, the certificate resource is created. This

    operation requires the certificates/create permission.'
  syntax:
    content: create_certificate(vault_base_url, certificate_name, certificate_policy=None,
      certificate_attributes=None, tags=None, custom_headers=None, raw=False, **operation_config)
    parameters:
    - description: 'The vault name, for example

        [https://myvault.vault.azure.net](https://myvault.vault.azure.net).'
      id: vault_base_url
      type:
      - str
    - description: The name of the certificate.
      id: certificate_name
      type:
      - str
    - defaultValue: None
      description: The management policy for the certificate.
      id: certificate_policy
      type:
      - azure.keyvault.v2016_10_01.models.CertificatePolicy
    - defaultValue: None
      description: 'The attributes of the certificate

        (optional).'
      id: certificate_attributes
      type:
      - azure.keyvault.v2016_10_01.models.CertificateAttributes
    - defaultValue: None
      description: 'Application specific metadata in the form of key-value

        pairs.'
      id: tags
      type:
      - dict[str, str]
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
    return:
      description: CertificateOperation or ClientRawResponse if raw=true
      type:
      - azure.keyvault.v2016_10_01.models.CertificateOperation
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient.create_certificate
- class: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient
  exceptions:
  - type: azure.keyvault.v2016_10_01.models.KeyVaultErrorException
  fullName: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient.create_key
  langs:
  - python
  module: azure.keyvault.v2016_10_01.key_vault_client
  name: create_key(vault_base_url, key_name, kty, key_size=None, key_ops=None, key_attributes=None,
    tags=None, curve=None, custom_headers=None, raw=False, **operation_config)
  summary: 'Creates a new key, stores it, then returns key parameters and

    attributes to the client.


    The create key operation can be used to create any key type in Azure

    Key Vault. If the named key already exists, Azure Key Vault creates a

    new version of the key. It requires the keys/create permission.'
  syntax:
    content: create_key(vault_base_url, key_name, kty, key_size=None, key_ops=None,
      key_attributes=None, tags=None, curve=None, custom_headers=None, raw=False,
      **operation_config)
    parameters:
    - description: 'The vault name, for example

        [https://myvault.vault.azure.net](https://myvault.vault.azure.net).'
      id: vault_base_url
      type:
      - str
    - description: 'The name for the new key. The system will generate

        the version name for the new key.'
      id: key_name
      type:
      - str
    - description: 'The type of key to create. For valid values, see

        JsonWebKeyType. Possible values include: ''EC'', ''EC-HSM'', ''RSA'',

        ''RSA-HSM'', ''oct'''
      id: kty
      type:
      - str
      - azure.keyvault.v2016_10_01.models.JsonWebKeyType
    - defaultValue: None
      description: 'The key size in bits. For example: 2048, 3072, or

        4096 for RSA.'
      id: key_size
      type:
      - int
    - defaultValue: None
      description: ''
      id: key_ops
      type:
      - list[str
      - azure.keyvault.v2016_10_01.models.JsonWebKeyOperation]
    - defaultValue: None
      description: ''
      id: key_attributes
      type:
      - azure.keyvault.v2016_10_01.models.KeyAttributes
    - defaultValue: None
      description: 'Application specific metadata in the form of key-value

        pairs.'
      id: tags
      type:
      - dict[str, str]
    - defaultValue: None
      description: 'Elliptic curve name. For valid values, see

        JsonWebKeyCurveName. Possible values include: ''P-256'', ''P-384'',

        ''P-521'', ''SECP256K1'''
      id: curve
      type:
      - str
      - azure.keyvault.v2016_10_01.models.JsonWebKeyCurveName
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
    return:
      description: KeyBundle or ClientRawResponse if raw=true
      type:
      - azure.keyvault.v2016_10_01.models.KeyBundle
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient.create_key
- class: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient
  exceptions:
  - type: azure.keyvault.v2016_10_01.models.KeyVaultErrorException
  fullName: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient.decrypt
  langs:
  - python
  module: azure.keyvault.v2016_10_01.key_vault_client
  name: decrypt(vault_base_url, key_name, key_version, algorithm, value, custom_headers=None,
    raw=False, **operation_config)
  summary: 'Decrypts a single block of encrypted data.


    The DECRYPT operation decrypts a well-formed block of ciphertext using

    the target encryption key and specified algorithm. This operation is

    the reverse of the ENCRYPT operation; only a single block of data may

    be decrypted, the size of this block is dependent on the target key and

    the algorithm to be used. The DECRYPT operation applies to asymmetric

    and symmetric keys stored in Azure Key Vault since it uses the private

    portion of the key. This operation requires the keys/decrypt

    permission.'
  syntax:
    content: decrypt(vault_base_url, key_name, key_version, algorithm, value, custom_headers=None,
      raw=False, **operation_config)
    parameters:
    - description: 'The vault name, for example

        [https://myvault.vault.azure.net](https://myvault.vault.azure.net).'
      id: vault_base_url
      type:
      - str
    - description: The name of the key.
      id: key_name
      type:
      - str
    - description: The version of the key.
      id: key_version
      type:
      - str
    - description: 'algorithm identifier. Possible values include:

        ''RSA-OAEP'', ''RSA-OAEP-256'', ''RSA1_5'''
      id: algorithm
      type:
      - str
      - azure.keyvault.v2016_10_01.models.JsonWebKeyEncryptionAlgorithm
    - description: ''
      id: value
      type:
      - bytes
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
    return:
      description: KeyOperationResult or ClientRawResponse if raw=true
      type:
      - azure.keyvault.v2016_10_01.models.KeyOperationResult
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient.decrypt
- class: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient
  exceptions:
  - type: azure.keyvault.v2016_10_01.models.KeyVaultErrorException
  fullName: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient.delete_certificate
  langs:
  - python
  module: azure.keyvault.v2016_10_01.key_vault_client
  name: delete_certificate(vault_base_url, certificate_name, custom_headers=None,
    raw=False, **operation_config)
  summary: 'Deletes a certificate from a specified key vault.


    Deletes all versions of a certificate object along with its associated

    policy. Delete certificate cannot be used to remove individual versions

    of a certificate object. This operation requires the

    certificates/delete permission.'
  syntax:
    content: delete_certificate(vault_base_url, certificate_name, custom_headers=None,
      raw=False, **operation_config)
    parameters:
    - description: 'The vault name, for example

        [https://myvault.vault.azure.net](https://myvault.vault.azure.net).'
      id: vault_base_url
      type:
      - str
    - description: The name of the certificate.
      id: certificate_name
      type:
      - str
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
    return:
      description: DeletedCertificateBundle or ClientRawResponse if raw=true
      type:
      - azure.keyvault.v2016_10_01.models.DeletedCertificateBundle
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient.delete_certificate
- class: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient
  exceptions:
  - type: azure.keyvault.v2016_10_01.models.KeyVaultErrorException
  fullName: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient.delete_certificate_contacts
  langs:
  - python
  module: azure.keyvault.v2016_10_01.key_vault_client
  name: delete_certificate_contacts(vault_base_url, custom_headers=None, raw=False,
    **operation_config)
  summary: 'Deletes the certificate contacts for a specified key vault.


    Deletes the certificate contacts for a specified key vault certificate.

    This operation requires the certificates/managecontacts permission.'
  syntax:
    content: delete_certificate_contacts(vault_base_url, custom_headers=None, raw=False,
      **operation_config)
    parameters:
    - description: 'The vault name, for example

        [https://myvault.vault.azure.net](https://myvault.vault.azure.net).'
      id: vault_base_url
      type:
      - str
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
    return:
      description: Contacts or ClientRawResponse if raw=true
      type:
      - azure.keyvault.v2016_10_01.models.Contacts
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient.delete_certificate_contacts
- class: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient
  exceptions:
  - type: azure.keyvault.v2016_10_01.models.KeyVaultErrorException
  fullName: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient.delete_certificate_issuer
  langs:
  - python
  module: azure.keyvault.v2016_10_01.key_vault_client
  name: delete_certificate_issuer(vault_base_url, issuer_name, custom_headers=None,
    raw=False, **operation_config)
  summary: 'Deletes the specified certificate issuer.


    The DeleteCertificateIssuer operation permanently removes the specified

    certificate issuer from the vault. This operation requires the

    certificates/manageissuers/deleteissuers permission.'
  syntax:
    content: delete_certificate_issuer(vault_base_url, issuer_name, custom_headers=None,
      raw=False, **operation_config)
    parameters:
    - description: 'The vault name, for example

        [https://myvault.vault.azure.net](https://myvault.vault.azure.net).'
      id: vault_base_url
      type:
      - str
    - description: The name of the issuer.
      id: issuer_name
      type:
      - str
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
    return:
      description: IssuerBundle or ClientRawResponse if raw=true
      type:
      - azure.keyvault.v2016_10_01.models.IssuerBundle
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient.delete_certificate_issuer
- class: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient
  exceptions:
  - type: azure.keyvault.v2016_10_01.models.KeyVaultErrorException
  fullName: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient.delete_certificate_operation
  langs:
  - python
  module: azure.keyvault.v2016_10_01.key_vault_client
  name: delete_certificate_operation(vault_base_url, certificate_name, custom_headers=None,
    raw=False, **operation_config)
  summary: 'Deletes the creation operation for a specific certificate.


    Deletes the creation operation for a specified certificate that is in

    the process of being created. The certificate is no longer created.

    This operation requires the certificates/update permission.'
  syntax:
    content: delete_certificate_operation(vault_base_url, certificate_name, custom_headers=None,
      raw=False, **operation_config)
    parameters:
    - description: 'The vault name, for example

        [https://myvault.vault.azure.net](https://myvault.vault.azure.net).'
      id: vault_base_url
      type:
      - str
    - description: The name of the certificate.
      id: certificate_name
      type:
      - str
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
    return:
      description: CertificateOperation or ClientRawResponse if raw=true
      type:
      - azure.keyvault.v2016_10_01.models.CertificateOperation
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient.delete_certificate_operation
- class: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient
  exceptions:
  - type: azure.keyvault.v2016_10_01.models.KeyVaultErrorException
  fullName: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient.delete_key
  langs:
  - python
  module: azure.keyvault.v2016_10_01.key_vault_client
  name: delete_key(vault_base_url, key_name, custom_headers=None, raw=False, **operation_config)
  summary: 'Deletes a key of any type from storage in Azure Key Vault.


    The delete key operation cannot be used to remove individual versions

    of a key. This operation removes the cryptographic material associated

    with the key, which means the key is not usable for Sign/Verify,

    Wrap/Unwrap or Encrypt/Decrypt operations. This operation requires the

    keys/delete permission.'
  syntax:
    content: delete_key(vault_base_url, key_name, custom_headers=None, raw=False,
      **operation_config)
    parameters:
    - description: 'The vault name, for example

        [https://myvault.vault.azure.net](https://myvault.vault.azure.net).'
      id: vault_base_url
      type:
      - str
    - description: The name of the key to delete.
      id: key_name
      type:
      - str
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
    return:
      description: DeletedKeyBundle or ClientRawResponse if raw=true
      type:
      - azure.keyvault.v2016_10_01.models.DeletedKeyBundle
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient.delete_key
- class: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient
  exceptions:
  - type: azure.keyvault.v2016_10_01.models.KeyVaultErrorException
  fullName: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient.delete_sas_definition
  langs:
  - python
  module: azure.keyvault.v2016_10_01.key_vault_client
  name: delete_sas_definition(vault_base_url, storage_account_name, sas_definition_name,
    custom_headers=None, raw=False, **operation_config)
  summary: 'Deletes a SAS definition from a specified storage account. This

    operation requires the storage/deletesas permission.'
  syntax:
    content: delete_sas_definition(vault_base_url, storage_account_name, sas_definition_name,
      custom_headers=None, raw=False, **operation_config)
    parameters:
    - description: 'The vault name, for example

        [https://myvault.vault.azure.net](https://myvault.vault.azure.net).'
      id: vault_base_url
      type:
      - str
    - description: The name of the storage account.
      id: storage_account_name
      type:
      - str
    - description: The name of the SAS definition.
      id: sas_definition_name
      type:
      - str
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
    return:
      description: SasDefinitionBundle or ClientRawResponse if raw=true
      type:
      - azure.keyvault.v2016_10_01.models.SasDefinitionBundle
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient.delete_sas_definition
- class: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient
  exceptions:
  - type: azure.keyvault.v2016_10_01.models.KeyVaultErrorException
  fullName: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient.delete_secret
  langs:
  - python
  module: azure.keyvault.v2016_10_01.key_vault_client
  name: delete_secret(vault_base_url, secret_name, custom_headers=None, raw=False,
    **operation_config)
  summary: 'Deletes a secret from a specified key vault.


    The DELETE operation applies to any secret stored in Azure Key Vault.

    DELETE cannot be applied to an individual version of a secret. This

    operation requires the secrets/delete permission.'
  syntax:
    content: delete_secret(vault_base_url, secret_name, custom_headers=None, raw=False,
      **operation_config)
    parameters:
    - description: 'The vault name, for example

        [https://myvault.vault.azure.net](https://myvault.vault.azure.net).'
      id: vault_base_url
      type:
      - str
    - description: The name of the secret.
      id: secret_name
      type:
      - str
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
    return:
      description: DeletedSecretBundle or ClientRawResponse if raw=true
      type:
      - azure.keyvault.v2016_10_01.models.DeletedSecretBundle
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient.delete_secret
- class: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient
  exceptions:
  - type: azure.keyvault.v2016_10_01.models.KeyVaultErrorException
  fullName: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient.delete_storage_account
  langs:
  - python
  module: azure.keyvault.v2016_10_01.key_vault_client
  name: delete_storage_account(vault_base_url, storage_account_name, custom_headers=None,
    raw=False, **operation_config)
  summary: 'Deletes a storage account. This operation requires the storage/delete

    permission.'
  syntax:
    content: delete_storage_account(vault_base_url, storage_account_name, custom_headers=None,
      raw=False, **operation_config)
    parameters:
    - description: 'The vault name, for example

        [https://myvault.vault.azure.net](https://myvault.vault.azure.net).'
      id: vault_base_url
      type:
      - str
    - description: The name of the storage account.
      id: storage_account_name
      type:
      - str
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
    return:
      description: StorageBundle or ClientRawResponse if raw=true
      type:
      - azure.keyvault.v2016_10_01.models.StorageBundle
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient.delete_storage_account
- class: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient
  exceptions:
  - type: azure.keyvault.v2016_10_01.models.KeyVaultErrorException
  fullName: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient.encrypt
  langs:
  - python
  module: azure.keyvault.v2016_10_01.key_vault_client
  name: encrypt(vault_base_url, key_name, key_version, algorithm, value, custom_headers=None,
    raw=False, **operation_config)
  summary: 'Encrypts an arbitrary sequence of bytes using an encryption key that is

    stored in a key vault.


    The ENCRYPT operation encrypts an arbitrary sequence of bytes using an

    encryption key that is stored in Azure Key Vault. Note that the ENCRYPT

    operation only supports a single block of data, the size of which is

    dependent on the target key and the encryption algorithm to be used.

    The ENCRYPT operation is only strictly necessary for symmetric keys

    stored in Azure Key Vault since protection with an asymmetric key can

    be performed using public portion of the key. This operation is

    supported for asymmetric keys as a convenience for callers that have a

    key-reference but do not have access to the public key material. This

    operation requires the keys/encypt permission.'
  syntax:
    content: encrypt(vault_base_url, key_name, key_version, algorithm, value, custom_headers=None,
      raw=False, **operation_config)
    parameters:
    - description: 'The vault name, for example

        [https://myvault.vault.azure.net](https://myvault.vault.azure.net).'
      id: vault_base_url
      type:
      - str
    - description: The name of the key.
      id: key_name
      type:
      - str
    - description: The version of the key.
      id: key_version
      type:
      - str
    - description: 'algorithm identifier. Possible values include:

        ''RSA-OAEP'', ''RSA-OAEP-256'', ''RSA1_5'''
      id: algorithm
      type:
      - str
      - azure.keyvault.v2016_10_01.models.JsonWebKeyEncryptionAlgorithm
    - description: ''
      id: value
      type:
      - bytes
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
    return:
      description: KeyOperationResult or ClientRawResponse if raw=true
      type:
      - azure.keyvault.v2016_10_01.models.KeyOperationResult
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient.encrypt
- class: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient
  exceptions:
  - type: azure.keyvault.v2016_10_01.models.KeyVaultErrorException
  fullName: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient.get_certificate
  langs:
  - python
  module: azure.keyvault.v2016_10_01.key_vault_client
  name: get_certificate(vault_base_url, certificate_name, certificate_version, custom_headers=None,
    raw=False, **operation_config)
  summary: 'Gets information about a certificate.


    Gets information about a specific certificate. This operation requires

    the certificates/get permission.'
  syntax:
    content: get_certificate(vault_base_url, certificate_name, certificate_version,
      custom_headers=None, raw=False, **operation_config)
    parameters:
    - description: 'The vault name, for example

        [https://myvault.vault.azure.net](https://myvault.vault.azure.net).'
      id: vault_base_url
      type:
      - str
    - description: 'The name of the certificate in the given

        vault.'
      id: certificate_name
      type:
      - str
    - description: The version of the certificate.
      id: certificate_version
      type:
      - str
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
    return:
      description: CertificateBundle or ClientRawResponse if raw=true
      type:
      - azure.keyvault.v2016_10_01.models.CertificateBundle
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient.get_certificate
- class: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient
  exceptions:
  - type: azure.keyvault.v2016_10_01.models.KeyVaultErrorException
  fullName: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient.get_certificate_contacts
  langs:
  - python
  module: azure.keyvault.v2016_10_01.key_vault_client
  name: get_certificate_contacts(vault_base_url, custom_headers=None, raw=False, **operation_config)
  summary: 'Lists the certificate contacts for a specified key vault.


    The GetCertificateContacts operation returns the set of certificate

    contact resources in the specified key vault. This operation requires

    the certificates/managecontacts permission.'
  syntax:
    content: get_certificate_contacts(vault_base_url, custom_headers=None, raw=False,
      **operation_config)
    parameters:
    - description: 'The vault name, for example

        [https://myvault.vault.azure.net](https://myvault.vault.azure.net).'
      id: vault_base_url
      type:
      - str
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
    return:
      description: Contacts or ClientRawResponse if raw=true
      type:
      - azure.keyvault.v2016_10_01.models.Contacts
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient.get_certificate_contacts
- class: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient
  exceptions:
  - type: azure.keyvault.v2016_10_01.models.KeyVaultErrorException
  fullName: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient.get_certificate_issuer
  langs:
  - python
  module: azure.keyvault.v2016_10_01.key_vault_client
  name: get_certificate_issuer(vault_base_url, issuer_name, custom_headers=None, raw=False,
    **operation_config)
  summary: 'Lists the specified certificate issuer.


    The GetCertificateIssuer operation returns the specified certificate

    issuer resources in the specified key vault. This operation requires

    the certificates/manageissuers/getissuers permission.'
  syntax:
    content: get_certificate_issuer(vault_base_url, issuer_name, custom_headers=None,
      raw=False, **operation_config)
    parameters:
    - description: 'The vault name, for example

        [https://myvault.vault.azure.net](https://myvault.vault.azure.net).'
      id: vault_base_url
      type:
      - str
    - description: The name of the issuer.
      id: issuer_name
      type:
      - str
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
    return:
      description: IssuerBundle or ClientRawResponse if raw=true
      type:
      - azure.keyvault.v2016_10_01.models.IssuerBundle
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient.get_certificate_issuer
- class: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient
  exceptions:
  - type: azure.keyvault.v2016_10_01.models.KeyVaultErrorException
  fullName: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient.get_certificate_issuers
  langs:
  - python
  module: azure.keyvault.v2016_10_01.key_vault_client
  name: get_certificate_issuers(vault_base_url, maxresults=None, custom_headers=None,
    raw=False, **operation_config)
  summary: 'List certificate issuers for a specified key vault.


    The GetCertificateIssuers operation returns the set of certificate

    issuer resources in the specified key vault. This operation requires

    the certificates/manageissuers/getissuers permission.'
  syntax:
    content: get_certificate_issuers(vault_base_url, maxresults=None, custom_headers=None,
      raw=False, **operation_config)
    parameters:
    - description: 'The vault name, for example

        [https://myvault.vault.azure.net](https://myvault.vault.azure.net).'
      id: vault_base_url
      type:
      - str
    - defaultValue: None
      description: 'Maximum number of results to return in a page. If

        not specified the service will return up to 25 results.'
      id: maxresults
      type:
      - int
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
    return:
      description: An iterator like instance of CertificateIssuerItem
      type:
      - azure.keyvault.v2016_10_01.models.CertificateIssuerItemPaged[azure.keyvault.v2016_10_01.models.CertificateIssuerItem]
  type: method
  uid: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient.get_certificate_issuers
- class: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient
  exceptions:
  - type: azure.keyvault.v2016_10_01.models.KeyVaultErrorException
  fullName: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient.get_certificate_operation
  langs:
  - python
  module: azure.keyvault.v2016_10_01.key_vault_client
  name: get_certificate_operation(vault_base_url, certificate_name, custom_headers=None,
    raw=False, **operation_config)
  summary: 'Gets the creation operation of a certificate.


    Gets the creation operation associated with a specified certificate.

    This operation requires the certificates/get permission.'
  syntax:
    content: get_certificate_operation(vault_base_url, certificate_name, custom_headers=None,
      raw=False, **operation_config)
    parameters:
    - description: 'The vault name, for example

        [https://myvault.vault.azure.net](https://myvault.vault.azure.net).'
      id: vault_base_url
      type:
      - str
    - description: The name of the certificate.
      id: certificate_name
      type:
      - str
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
    return:
      description: CertificateOperation or ClientRawResponse if raw=true
      type:
      - azure.keyvault.v2016_10_01.models.CertificateOperation
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient.get_certificate_operation
- class: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient
  exceptions:
  - type: azure.keyvault.v2016_10_01.models.KeyVaultErrorException
  fullName: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient.get_certificate_policy
  langs:
  - python
  module: azure.keyvault.v2016_10_01.key_vault_client
  name: get_certificate_policy(vault_base_url, certificate_name, custom_headers=None,
    raw=False, **operation_config)
  summary: 'Lists the policy for a certificate.


    The GetCertificatePolicy operation returns the specified certificate

    policy resources in the specified key vault. This operation requires

    the certificates/get permission.'
  syntax:
    content: get_certificate_policy(vault_base_url, certificate_name, custom_headers=None,
      raw=False, **operation_config)
    parameters:
    - description: 'The vault name, for example

        [https://myvault.vault.azure.net](https://myvault.vault.azure.net).'
      id: vault_base_url
      type:
      - str
    - description: 'The name of the certificate in a given key

        vault.'
      id: certificate_name
      type:
      - str
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
    return:
      description: CertificatePolicy or ClientRawResponse if raw=true
      type:
      - azure.keyvault.v2016_10_01.models.CertificatePolicy
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient.get_certificate_policy
- class: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient
  exceptions:
  - type: azure.keyvault.v2016_10_01.models.KeyVaultErrorException
  fullName: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient.get_certificate_versions
  langs:
  - python
  module: azure.keyvault.v2016_10_01.key_vault_client
  name: get_certificate_versions(vault_base_url, certificate_name, maxresults=None,
    custom_headers=None, raw=False, **operation_config)
  summary: 'List the versions of a certificate.


    The GetCertificateVersions operation returns the versions of a

    certificate in the specified key vault. This operation requires the

    certificates/list permission.'
  syntax:
    content: get_certificate_versions(vault_base_url, certificate_name, maxresults=None,
      custom_headers=None, raw=False, **operation_config)
    parameters:
    - description: 'The vault name, for example

        [https://myvault.vault.azure.net](https://myvault.vault.azure.net).'
      id: vault_base_url
      type:
      - str
    - description: The name of the certificate.
      id: certificate_name
      type:
      - str
    - defaultValue: None
      description: 'Maximum number of results to return in a page. If

        not specified the service will return up to 25 results.'
      id: maxresults
      type:
      - int
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
    return:
      description: An iterator like instance of CertificateItem
      type:
      - azure.keyvault.v2016_10_01.models.CertificateItemPaged[azure.keyvault.v2016_10_01.models.CertificateItem]
  type: method
  uid: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient.get_certificate_versions
- class: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient
  exceptions:
  - type: azure.keyvault.v2016_10_01.models.KeyVaultErrorException
  fullName: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient.get_certificates
  langs:
  - python
  module: azure.keyvault.v2016_10_01.key_vault_client
  name: get_certificates(vault_base_url, maxresults=None, custom_headers=None, raw=False,
    **operation_config)
  summary: 'List certificates in a specified key vault.


    The GetCertificates operation returns the set of certificates resources

    in the specified key vault. This operation requires the

    certificates/list permission.'
  syntax:
    content: get_certificates(vault_base_url, maxresults=None, custom_headers=None,
      raw=False, **operation_config)
    parameters:
    - description: 'The vault name, for example

        [https://myvault.vault.azure.net](https://myvault.vault.azure.net).'
      id: vault_base_url
      type:
      - str
    - defaultValue: None
      description: 'Maximum number of results to return in a page. If

        not specified the service will return up to 25 results.'
      id: maxresults
      type:
      - int
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
    return:
      description: An iterator like instance of CertificateItem
      type:
      - azure.keyvault.v2016_10_01.models.CertificateItemPaged[azure.keyvault.v2016_10_01.models.CertificateItem]
  type: method
  uid: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient.get_certificates
- class: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient
  exceptions:
  - type: azure.keyvault.v2016_10_01.models.KeyVaultErrorException
  fullName: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient.get_deleted_certificate
  langs:
  - python
  module: azure.keyvault.v2016_10_01.key_vault_client
  name: get_deleted_certificate(vault_base_url, certificate_name, custom_headers=None,
    raw=False, **operation_config)
  summary: 'Retrieves information about the specified deleted certificate.


    The GetDeletedCertificate operation retrieves the deleted certificate

    information plus its attributes, such as retention interval, scheduled

    permanent deletion and the current deletion recovery level. This

    operation requires the certificates/get permission.'
  syntax:
    content: get_deleted_certificate(vault_base_url, certificate_name, custom_headers=None,
      raw=False, **operation_config)
    parameters:
    - description: 'The vault name, for example

        [https://myvault.vault.azure.net](https://myvault.vault.azure.net).'
      id: vault_base_url
      type:
      - str
    - description: The name of the certificate
      id: certificate_name
      type:
      - str
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
    return:
      description: DeletedCertificateBundle or ClientRawResponse if raw=true
      type:
      - azure.keyvault.v2016_10_01.models.DeletedCertificateBundle
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient.get_deleted_certificate
- class: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient
  exceptions:
  - type: azure.keyvault.v2016_10_01.models.KeyVaultErrorException
  fullName: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient.get_deleted_certificates
  langs:
  - python
  module: azure.keyvault.v2016_10_01.key_vault_client
  name: get_deleted_certificates(vault_base_url, maxresults=None, custom_headers=None,
    raw=False, **operation_config)
  summary: 'Lists the deleted certificates in the specified vault currently

    available for recovery.


    The GetDeletedCertificates operation retrieves the certificates in the

    current vault which are in a deleted state and ready for recovery or

    purging. This operation includes deletion-specific information. This

    operation requires the certificates/get/list permission. This operation

    can only be enabled on soft-delete enabled vaults.'
  syntax:
    content: get_deleted_certificates(vault_base_url, maxresults=None, custom_headers=None,
      raw=False, **operation_config)
    parameters:
    - description: 'The vault name, for example

        [https://myvault.vault.azure.net](https://myvault.vault.azure.net).'
      id: vault_base_url
      type:
      - str
    - defaultValue: None
      description: 'Maximum number of results to return in a page. If

        not specified the service will return up to 25 results.'
      id: maxresults
      type:
      - int
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
    return:
      description: An iterator like instance of DeletedCertificateItem
      type:
      - azure.keyvault.v2016_10_01.models.DeletedCertificateItemPaged[azure.keyvault.v2016_10_01.models.DeletedCertificateItem]
  type: method
  uid: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient.get_deleted_certificates
- class: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient
  exceptions:
  - type: azure.keyvault.v2016_10_01.models.KeyVaultErrorException
  fullName: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient.get_deleted_key
  langs:
  - python
  module: azure.keyvault.v2016_10_01.key_vault_client
  name: get_deleted_key(vault_base_url, key_name, custom_headers=None, raw=False,
    **operation_config)
  summary: 'Gets the public part of a deleted key.


    The Get Deleted Key operation is applicable for soft-delete enabled

    vaults. While the operation can be invoked on any vault, it will return

    an error if invoked on a non soft-delete enabled vault. This operation

    requires the keys/get permission. .'
  syntax:
    content: get_deleted_key(vault_base_url, key_name, custom_headers=None, raw=False,
      **operation_config)
    parameters:
    - description: 'The vault name, for example

        [https://myvault.vault.azure.net](https://myvault.vault.azure.net).'
      id: vault_base_url
      type:
      - str
    - description: The name of the key.
      id: key_name
      type:
      - str
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
    return:
      description: DeletedKeyBundle or ClientRawResponse if raw=true
      type:
      - azure.keyvault.v2016_10_01.models.DeletedKeyBundle
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient.get_deleted_key
- class: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient
  exceptions:
  - type: azure.keyvault.v2016_10_01.models.KeyVaultErrorException
  fullName: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient.get_deleted_keys
  langs:
  - python
  module: azure.keyvault.v2016_10_01.key_vault_client
  name: get_deleted_keys(vault_base_url, maxresults=None, custom_headers=None, raw=False,
    **operation_config)
  summary: 'Lists the deleted keys in the specified vault.


    Retrieves a list of the keys in the Key Vault as JSON Web Key

    structures that contain the public part of a deleted key. This

    operation includes deletion-specific information. The Get Deleted Keys

    operation is applicable for vaults enabled for soft-delete. While the

    operation can be invoked on any vault, it will return an error if

    invoked on a non soft-delete enabled vault. This operation requires the

    keys/list permission.'
  syntax:
    content: get_deleted_keys(vault_base_url, maxresults=None, custom_headers=None,
      raw=False, **operation_config)
    parameters:
    - description: 'The vault name, for example

        [https://myvault.vault.azure.net](https://myvault.vault.azure.net).'
      id: vault_base_url
      type:
      - str
    - defaultValue: None
      description: 'Maximum number of results to return in a page. If

        not specified the service will return up to 25 results.'
      id: maxresults
      type:
      - int
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
    return:
      description: An iterator like instance of DeletedKeyItem
      type:
      - azure.keyvault.v2016_10_01.models.DeletedKeyItemPaged[azure.keyvault.v2016_10_01.models.DeletedKeyItem]
  type: method
  uid: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient.get_deleted_keys
- class: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient
  exceptions:
  - type: azure.keyvault.v2016_10_01.models.KeyVaultErrorException
  fullName: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient.get_deleted_secret
  langs:
  - python
  module: azure.keyvault.v2016_10_01.key_vault_client
  name: get_deleted_secret(vault_base_url, secret_name, custom_headers=None, raw=False,
    **operation_config)
  summary: 'Gets the specified deleted secret.


    The Get Deleted Secret operation returns the specified deleted secret

    along with its attributes. This operation requires the secrets/get

    permission.'
  syntax:
    content: get_deleted_secret(vault_base_url, secret_name, custom_headers=None,
      raw=False, **operation_config)
    parameters:
    - description: 'The vault name, for example

        [https://myvault.vault.azure.net](https://myvault.vault.azure.net).'
      id: vault_base_url
      type:
      - str
    - description: The name of the secret.
      id: secret_name
      type:
      - str
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
    return:
      description: DeletedSecretBundle or ClientRawResponse if raw=true
      type:
      - azure.keyvault.v2016_10_01.models.DeletedSecretBundle
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient.get_deleted_secret
- class: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient
  exceptions:
  - type: azure.keyvault.v2016_10_01.models.KeyVaultErrorException
  fullName: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient.get_deleted_secrets
  langs:
  - python
  module: azure.keyvault.v2016_10_01.key_vault_client
  name: get_deleted_secrets(vault_base_url, maxresults=None, custom_headers=None,
    raw=False, **operation_config)
  summary: 'Lists deleted secrets for the specified vault.


    The Get Deleted Secrets operation returns the secrets that have been

    deleted for a vault enabled for soft-delete. This operation requires

    the secrets/list permission.'
  syntax:
    content: get_deleted_secrets(vault_base_url, maxresults=None, custom_headers=None,
      raw=False, **operation_config)
    parameters:
    - description: 'The vault name, for example

        [https://myvault.vault.azure.net](https://myvault.vault.azure.net).'
      id: vault_base_url
      type:
      - str
    - defaultValue: None
      description: 'Maximum number of results to return in a page. If

        not specified the service will return up to 25 results.'
      id: maxresults
      type:
      - int
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
    return:
      description: An iterator like instance of DeletedSecretItem
      type:
      - azure.keyvault.v2016_10_01.models.DeletedSecretItemPaged[azure.keyvault.v2016_10_01.models.DeletedSecretItem]
  type: method
  uid: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient.get_deleted_secrets
- class: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient
  exceptions:
  - type: azure.keyvault.v2016_10_01.models.KeyVaultErrorException
  fullName: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient.get_key
  langs:
  - python
  module: azure.keyvault.v2016_10_01.key_vault_client
  name: get_key(vault_base_url, key_name, key_version, custom_headers=None, raw=False,
    **operation_config)
  summary: 'Gets the public part of a stored key.


    The get key operation is applicable to all key types. If the requested

    key is symmetric, then no key material is released in the response.

    This operation requires the keys/get permission.'
  syntax:
    content: get_key(vault_base_url, key_name, key_version, custom_headers=None, raw=False,
      **operation_config)
    parameters:
    - description: 'The vault name, for example

        [https://myvault.vault.azure.net](https://myvault.vault.azure.net).'
      id: vault_base_url
      type:
      - str
    - description: The name of the key to get.
      id: key_name
      type:
      - str
    - description: 'Adding the version parameter retrieves a specific

        version of a key.'
      id: key_version
      type:
      - str
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
    return:
      description: KeyBundle or ClientRawResponse if raw=true
      type:
      - azure.keyvault.v2016_10_01.models.KeyBundle
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient.get_key
- class: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient
  exceptions:
  - type: azure.keyvault.v2016_10_01.models.KeyVaultErrorException
  fullName: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient.get_key_versions
  langs:
  - python
  module: azure.keyvault.v2016_10_01.key_vault_client
  name: get_key_versions(vault_base_url, key_name, maxresults=None, custom_headers=None,
    raw=False, **operation_config)
  summary: 'Retrieves a list of individual key versions with the same key name.


    The full key identifier, attributes, and tags are provided in the

    response. This operation requires the keys/list permission.'
  syntax:
    content: get_key_versions(vault_base_url, key_name, maxresults=None, custom_headers=None,
      raw=False, **operation_config)
    parameters:
    - description: 'The vault name, for example

        [https://myvault.vault.azure.net](https://myvault.vault.azure.net).'
      id: vault_base_url
      type:
      - str
    - description: The name of the key.
      id: key_name
      type:
      - str
    - defaultValue: None
      description: 'Maximum number of results to return in a page. If

        not specified the service will return up to 25 results.'
      id: maxresults
      type:
      - int
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
    return:
      description: An iterator like instance of KeyItem
      type:
      - azure.keyvault.v2016_10_01.models.KeyItemPaged[azure.keyvault.v2016_10_01.models.KeyItem]
  type: method
  uid: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient.get_key_versions
- class: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient
  exceptions:
  - type: azure.keyvault.v2016_10_01.models.KeyVaultErrorException
  fullName: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient.get_keys
  langs:
  - python
  module: azure.keyvault.v2016_10_01.key_vault_client
  name: get_keys(vault_base_url, maxresults=None, custom_headers=None, raw=False,
    **operation_config)
  summary: 'List keys in the specified vault.


    Retrieves a list of the keys in the Key Vault as JSON Web Key

    structures that contain the public part of a stored key. The LIST

    operation is applicable to all key types, however only the base key

    identifier, attributes, and tags are provided in the response.

    Individual versions of a key are not listed in the response. This

    operation requires the keys/list permission.'
  syntax:
    content: get_keys(vault_base_url, maxresults=None, custom_headers=None, raw=False,
      **operation_config)
    parameters:
    - description: 'The vault name, for example

        [https://myvault.vault.azure.net](https://myvault.vault.azure.net).'
      id: vault_base_url
      type:
      - str
    - defaultValue: None
      description: 'Maximum number of results to return in a page. If

        not specified the service will return up to 25 results.'
      id: maxresults
      type:
      - int
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
    return:
      description: An iterator like instance of KeyItem
      type:
      - azure.keyvault.v2016_10_01.models.KeyItemPaged[azure.keyvault.v2016_10_01.models.KeyItem]
  type: method
  uid: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient.get_keys
- class: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient
  exceptions:
  - type: azure.keyvault.v2016_10_01.models.KeyVaultErrorException
  fullName: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient.get_sas_definition
  langs:
  - python
  module: azure.keyvault.v2016_10_01.key_vault_client
  name: get_sas_definition(vault_base_url, storage_account_name, sas_definition_name,
    custom_headers=None, raw=False, **operation_config)
  summary: 'Gets information about a SAS definition for the specified storage

    account. This operation requires the storage/getsas permission.'
  syntax:
    content: get_sas_definition(vault_base_url, storage_account_name, sas_definition_name,
      custom_headers=None, raw=False, **operation_config)
    parameters:
    - description: 'The vault name, for example

        [https://myvault.vault.azure.net](https://myvault.vault.azure.net).'
      id: vault_base_url
      type:
      - str
    - description: The name of the storage account.
      id: storage_account_name
      type:
      - str
    - description: The name of the SAS definition.
      id: sas_definition_name
      type:
      - str
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
    return:
      description: SasDefinitionBundle or ClientRawResponse if raw=true
      type:
      - azure.keyvault.v2016_10_01.models.SasDefinitionBundle
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient.get_sas_definition
- class: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient
  exceptions:
  - type: azure.keyvault.v2016_10_01.models.KeyVaultErrorException
  fullName: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient.get_sas_definitions
  langs:
  - python
  module: azure.keyvault.v2016_10_01.key_vault_client
  name: get_sas_definitions(vault_base_url, storage_account_name, maxresults=None,
    custom_headers=None, raw=False, **operation_config)
  summary: 'List storage SAS definitions for the given storage account. This

    operation requires the storage/listsas permission.'
  syntax:
    content: get_sas_definitions(vault_base_url, storage_account_name, maxresults=None,
      custom_headers=None, raw=False, **operation_config)
    parameters:
    - description: 'The vault name, for example

        [https://myvault.vault.azure.net](https://myvault.vault.azure.net).'
      id: vault_base_url
      type:
      - str
    - description: The name of the storage account.
      id: storage_account_name
      type:
      - str
    - defaultValue: None
      description: 'Maximum number of results to return in a page. If

        not specified the service will return up to 25 results.'
      id: maxresults
      type:
      - int
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
    return:
      description: An iterator like instance of SasDefinitionItem
      type:
      - azure.keyvault.v2016_10_01.models.SasDefinitionItemPaged[azure.keyvault.v2016_10_01.models.SasDefinitionItem]
  type: method
  uid: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient.get_sas_definitions
- class: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient
  exceptions:
  - type: azure.keyvault.v2016_10_01.models.KeyVaultErrorException
  fullName: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient.get_secret
  langs:
  - python
  module: azure.keyvault.v2016_10_01.key_vault_client
  name: get_secret(vault_base_url, secret_name, secret_version, custom_headers=None,
    raw=False, **operation_config)
  summary: 'Get a specified secret from a given key vault.


    The GET operation is applicable to any secret stored in Azure Key

    Vault. This operation requires the secrets/get permission.'
  syntax:
    content: get_secret(vault_base_url, secret_name, secret_version, custom_headers=None,
      raw=False, **operation_config)
    parameters:
    - description: 'The vault name, for example

        [https://myvault.vault.azure.net](https://myvault.vault.azure.net).'
      id: vault_base_url
      type:
      - str
    - description: The name of the secret.
      id: secret_name
      type:
      - str
    - description: The version of the secret.
      id: secret_version
      type:
      - str
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
    return:
      description: SecretBundle or ClientRawResponse if raw=true
      type:
      - azure.keyvault.v2016_10_01.models.SecretBundle
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient.get_secret
- class: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient
  exceptions:
  - type: azure.keyvault.v2016_10_01.models.KeyVaultErrorException
  fullName: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient.get_secret_versions
  langs:
  - python
  module: azure.keyvault.v2016_10_01.key_vault_client
  name: get_secret_versions(vault_base_url, secret_name, maxresults=None, custom_headers=None,
    raw=False, **operation_config)
  summary: 'List all versions of the specified secret.


    The full secret identifier and attributes are provided in the response.

    No values are returned for the secrets. This operations requires the

    secrets/list permission.'
  syntax:
    content: get_secret_versions(vault_base_url, secret_name, maxresults=None, custom_headers=None,
      raw=False, **operation_config)
    parameters:
    - description: 'The vault name, for example

        [https://myvault.vault.azure.net](https://myvault.vault.azure.net).'
      id: vault_base_url
      type:
      - str
    - description: The name of the secret.
      id: secret_name
      type:
      - str
    - defaultValue: None
      description: 'Maximum number of results to return in a page. If

        not specified, the service will return up to 25 results.'
      id: maxresults
      type:
      - int
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
    return:
      description: An iterator like instance of SecretItem
      type:
      - azure.keyvault.v2016_10_01.models.SecretItemPaged[azure.keyvault.v2016_10_01.models.SecretItem]
  type: method
  uid: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient.get_secret_versions
- class: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient
  exceptions:
  - type: azure.keyvault.v2016_10_01.models.KeyVaultErrorException
  fullName: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient.get_secrets
  langs:
  - python
  module: azure.keyvault.v2016_10_01.key_vault_client
  name: get_secrets(vault_base_url, maxresults=None, custom_headers=None, raw=False,
    **operation_config)
  summary: 'List secrets in a specified key vault.


    The Get Secrets operation is applicable to the entire vault. However,

    only the base secret identifier and its attributes are provided in the

    response. Individual secret versions are not listed in the response.

    This operation requires the secrets/list permission.'
  syntax:
    content: get_secrets(vault_base_url, maxresults=None, custom_headers=None, raw=False,
      **operation_config)
    parameters:
    - description: 'The vault name, for example

        [https://myvault.vault.azure.net](https://myvault.vault.azure.net).'
      id: vault_base_url
      type:
      - str
    - defaultValue: None
      description: 'Maximum number of results to return in a page. If

        not specified, the service will return up to 25 results.'
      id: maxresults
      type:
      - int
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
    return:
      description: An iterator like instance of SecretItem
      type:
      - azure.keyvault.v2016_10_01.models.SecretItemPaged[azure.keyvault.v2016_10_01.models.SecretItem]
  type: method
  uid: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient.get_secrets
- class: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient
  exceptions:
  - type: azure.keyvault.v2016_10_01.models.KeyVaultErrorException
  fullName: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient.get_storage_account
  langs:
  - python
  module: azure.keyvault.v2016_10_01.key_vault_client
  name: get_storage_account(vault_base_url, storage_account_name, custom_headers=None,
    raw=False, **operation_config)
  summary: 'Gets information about a specified storage account. This operation

    requires the storage/get permission.'
  syntax:
    content: get_storage_account(vault_base_url, storage_account_name, custom_headers=None,
      raw=False, **operation_config)
    parameters:
    - description: 'The vault name, for example

        [https://myvault.vault.azure.net](https://myvault.vault.azure.net).'
      id: vault_base_url
      type:
      - str
    - description: The name of the storage account.
      id: storage_account_name
      type:
      - str
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
    return:
      description: StorageBundle or ClientRawResponse if raw=true
      type:
      - azure.keyvault.v2016_10_01.models.StorageBundle
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient.get_storage_account
- class: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient
  exceptions:
  - type: azure.keyvault.v2016_10_01.models.KeyVaultErrorException
  fullName: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient.get_storage_accounts
  langs:
  - python
  module: azure.keyvault.v2016_10_01.key_vault_client
  name: get_storage_accounts(vault_base_url, maxresults=None, custom_headers=None,
    raw=False, **operation_config)
  summary: 'List storage accounts managed by the specified key vault. This

    operation requires the storage/list permission.'
  syntax:
    content: get_storage_accounts(vault_base_url, maxresults=None, custom_headers=None,
      raw=False, **operation_config)
    parameters:
    - description: 'The vault name, for example

        [https://myvault.vault.azure.net](https://myvault.vault.azure.net).'
      id: vault_base_url
      type:
      - str
    - defaultValue: None
      description: 'Maximum number of results to return in a page. If

        not specified the service will return up to 25 results.'
      id: maxresults
      type:
      - int
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
    return:
      description: An iterator like instance of StorageAccountItem
      type:
      - azure.keyvault.v2016_10_01.models.StorageAccountItemPaged[azure.keyvault.v2016_10_01.models.StorageAccountItem]
  type: method
  uid: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient.get_storage_accounts
- class: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient
  exceptions:
  - type: azure.keyvault.v2016_10_01.models.KeyVaultErrorException
  fullName: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient.import_certificate
  langs:
  - python
  module: azure.keyvault.v2016_10_01.key_vault_client
  name: import_certificate(vault_base_url, certificate_name, base64_encoded_certificate,
    password=None, certificate_policy=None, certificate_attributes=None, tags=None,
    custom_headers=None, raw=False, **operation_config)
  summary: 'Imports a certificate into a specified key vault.


    Imports an existing valid certificate, containing a private key, into

    Azure Key Vault. The certificate to be imported can be in either PFX or

    PEM format. If the certificate is in PEM format the PEM file must

    contain the key as well as x509 certificates. This operation requires

    the certificates/import permission.'
  syntax:
    content: import_certificate(vault_base_url, certificate_name, base64_encoded_certificate,
      password=None, certificate_policy=None, certificate_attributes=None, tags=None,
      custom_headers=None, raw=False, **operation_config)
    parameters:
    - description: 'The vault name, for example

        [https://myvault.vault.azure.net](https://myvault.vault.azure.net).'
      id: vault_base_url
      type:
      - str
    - description: The name of the certificate.
      id: certificate_name
      type:
      - str
    - description: 'Base64 encoded representation of

        the certificate object to import. This certificate needs to contain

        the private key.'
      id: base64_encoded_certificate
      type:
      - str
    - defaultValue: None
      description: 'If the private key in base64EncodedCertificate is

        encrypted, the password used for encryption.'
      id: password
      type:
      - str
    - defaultValue: None
      description: The management policy for the certificate.
      id: certificate_policy
      type:
      - azure.keyvault.v2016_10_01.models.CertificatePolicy
    - defaultValue: None
      description: 'The attributes of the certificate

        (optional).'
      id: certificate_attributes
      type:
      - azure.keyvault.v2016_10_01.models.CertificateAttributes
    - defaultValue: None
      description: 'Application specific metadata in the form of key-value

        pairs.'
      id: tags
      type:
      - dict[str, str]
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
    return:
      description: CertificateBundle or ClientRawResponse if raw=true
      type:
      - azure.keyvault.v2016_10_01.models.CertificateBundle
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient.import_certificate
- class: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient
  exceptions:
  - type: azure.keyvault.v2016_10_01.models.KeyVaultErrorException
  fullName: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient.import_key
  langs:
  - python
  module: azure.keyvault.v2016_10_01.key_vault_client
  name: import_key(vault_base_url, key_name, key, hsm=None, key_attributes=None, tags=None,
    custom_headers=None, raw=False, **operation_config)
  summary: 'Imports an externally created key, stores it, and returns key

    parameters and attributes to the client.


    The import key operation may be used to import any key type into an

    Azure Key Vault. If the named key already exists, Azure Key Vault

    creates a new version of the key. This operation requires the

    keys/import permission.'
  syntax:
    content: import_key(vault_base_url, key_name, key, hsm=None, key_attributes=None,
      tags=None, custom_headers=None, raw=False, **operation_config)
    parameters:
    - description: 'The vault name, for example

        [https://myvault.vault.azure.net](https://myvault.vault.azure.net).'
      id: vault_base_url
      type:
      - str
    - description: Name for the imported key.
      id: key_name
      type:
      - str
    - description: The Json web key
      id: key
      type:
      - azure.keyvault.v2016_10_01.models.JsonWebKey
    - defaultValue: None
      description: Whether to import as a hardware key (HSM) or software key.
      id: hsm
      type:
      - bool
    - defaultValue: None
      description: The key management attributes.
      id: key_attributes
      type:
      - azure.keyvault.v2016_10_01.models.KeyAttributes
    - defaultValue: None
      description: 'Application specific metadata in the form of key-value

        pairs.'
      id: tags
      type:
      - dict[str, str]
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
    return:
      description: KeyBundle or ClientRawResponse if raw=true
      type:
      - azure.keyvault.v2016_10_01.models.KeyBundle
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient.import_key
- class: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient
  exceptions:
  - type: azure.keyvault.v2016_10_01.models.KeyVaultErrorException
  fullName: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient.merge_certificate
  langs:
  - python
  module: azure.keyvault.v2016_10_01.key_vault_client
  name: merge_certificate(vault_base_url, certificate_name, x509_certificates, certificate_attributes=None,
    tags=None, custom_headers=None, raw=False, **operation_config)
  summary: 'Merges a certificate or a certificate chain with a key pair existing on

    the server.


    The MergeCertificate operation performs the merging of a certificate or

    certificate chain with a key pair currently available in the service.

    This operation requires the certificates/create permission.'
  syntax:
    content: merge_certificate(vault_base_url, certificate_name, x509_certificates,
      certificate_attributes=None, tags=None, custom_headers=None, raw=False, **operation_config)
    parameters:
    - description: 'The vault name, for example

        [https://myvault.vault.azure.net](https://myvault.vault.azure.net).'
      id: vault_base_url
      type:
      - str
    - description: The name of the certificate.
      id: certificate_name
      type:
      - str
    - description: 'The certificate or the certificate chain to

        merge.'
      id: x509_certificates
      type:
      - list[bytearray]
    - defaultValue: None
      description: 'The attributes of the certificate

        (optional).'
      id: certificate_attributes
      type:
      - azure.keyvault.v2016_10_01.models.CertificateAttributes
    - defaultValue: None
      description: 'Application specific metadata in the form of key-value

        pairs.'
      id: tags
      type:
      - dict[str, str]
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
    return:
      description: CertificateBundle or ClientRawResponse if raw=true
      type:
      - azure.keyvault.v2016_10_01.models.CertificateBundle
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient.merge_certificate
- class: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient
  exceptions:
  - type: azure.keyvault.v2016_10_01.models.KeyVaultErrorException
  fullName: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient.purge_deleted_certificate
  langs:
  - python
  module: azure.keyvault.v2016_10_01.key_vault_client
  name: purge_deleted_certificate(vault_base_url, certificate_name, custom_headers=None,
    raw=False, **operation_config)
  summary: 'Permanently deletes the specified deleted certificate.


    The PurgeDeletedCertificate operation performs an irreversible deletion

    of the specified certificate, without possibility for recovery. The

    operation is not available if the recovery level does not specify

    ''Purgeable''. This operation requires the certificate/purge permission.'
  syntax:
    content: purge_deleted_certificate(vault_base_url, certificate_name, custom_headers=None,
      raw=False, **operation_config)
    parameters:
    - description: 'The vault name, for example

        [https://myvault.vault.azure.net](https://myvault.vault.azure.net).'
      id: vault_base_url
      type:
      - str
    - description: The name of the certificate
      id: certificate_name
      type:
      - str
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
    return:
      description: None or ClientRawResponse if raw=true
      type:
      - None
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient.purge_deleted_certificate
- class: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient
  exceptions:
  - type: azure.keyvault.v2016_10_01.models.KeyVaultErrorException
  fullName: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient.purge_deleted_key
  langs:
  - python
  module: azure.keyvault.v2016_10_01.key_vault_client
  name: purge_deleted_key(vault_base_url, key_name, custom_headers=None, raw=False,
    **operation_config)
  summary: 'Permanently deletes the specified key.


    The Purge Deleted Key operation is applicable for soft-delete enabled

    vaults. While the operation can be invoked on any vault, it will return

    an error if invoked on a non soft-delete enabled vault. This operation

    requires the keys/purge permission.'
  syntax:
    content: purge_deleted_key(vault_base_url, key_name, custom_headers=None, raw=False,
      **operation_config)
    parameters:
    - description: 'The vault name, for example

        [https://myvault.vault.azure.net](https://myvault.vault.azure.net).'
      id: vault_base_url
      type:
      - str
    - description: The name of the key
      id: key_name
      type:
      - str
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
    return:
      description: None or ClientRawResponse if raw=true
      type:
      - None
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient.purge_deleted_key
- class: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient
  exceptions:
  - type: azure.keyvault.v2016_10_01.models.KeyVaultErrorException
  fullName: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient.purge_deleted_secret
  langs:
  - python
  module: azure.keyvault.v2016_10_01.key_vault_client
  name: purge_deleted_secret(vault_base_url, secret_name, custom_headers=None, raw=False,
    **operation_config)
  summary: 'Permanently deletes the specified secret.


    The purge deleted secret operation removes the secret permanently,

    without the possibility of recovery. This operation can only be enabled

    on a soft-delete enabled vault. This operation requires the

    secrets/purge permission.'
  syntax:
    content: purge_deleted_secret(vault_base_url, secret_name, custom_headers=None,
      raw=False, **operation_config)
    parameters:
    - description: 'The vault name, for example

        [https://myvault.vault.azure.net](https://myvault.vault.azure.net).'
      id: vault_base_url
      type:
      - str
    - description: The name of the secret.
      id: secret_name
      type:
      - str
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
    return:
      description: None or ClientRawResponse if raw=true
      type:
      - None
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient.purge_deleted_secret
- class: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient
  exceptions:
  - type: azure.keyvault.v2016_10_01.models.KeyVaultErrorException
  fullName: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient.recover_deleted_certificate
  langs:
  - python
  module: azure.keyvault.v2016_10_01.key_vault_client
  name: recover_deleted_certificate(vault_base_url, certificate_name, custom_headers=None,
    raw=False, **operation_config)
  summary: 'Recovers the deleted certificate back to its current version under

    /certificates.


    The RecoverDeletedCertificate operation performs the reversal of the

    Delete operation. The operation is applicable in vaults enabled for

    soft-delete, and must be issued during the retention interval

    (available in the deleted certificate''s attributes). This operation

    requires the certificates/recover permission.'
  syntax:
    content: recover_deleted_certificate(vault_base_url, certificate_name, custom_headers=None,
      raw=False, **operation_config)
    parameters:
    - description: 'The vault name, for example

        [https://myvault.vault.azure.net](https://myvault.vault.azure.net).'
      id: vault_base_url
      type:
      - str
    - description: The name of the deleted certificate
      id: certificate_name
      type:
      - str
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
    return:
      description: CertificateBundle or ClientRawResponse if raw=true
      type:
      - azure.keyvault.v2016_10_01.models.CertificateBundle
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient.recover_deleted_certificate
- class: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient
  exceptions:
  - type: azure.keyvault.v2016_10_01.models.KeyVaultErrorException
  fullName: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient.recover_deleted_key
  langs:
  - python
  module: azure.keyvault.v2016_10_01.key_vault_client
  name: recover_deleted_key(vault_base_url, key_name, custom_headers=None, raw=False,
    **operation_config)
  summary: 'Recovers the deleted key to its latest version.


    The Recover Deleted Key operation is applicable for deleted keys in

    soft-delete enabled vaults. It recovers the deleted key back to its

    latest version under /keys. An attempt to recover an non-deleted key

    will return an error. Consider this the inverse of the delete operation

    on soft-delete enabled vaults. This operation requires the keys/recover

    permission.'
  syntax:
    content: recover_deleted_key(vault_base_url, key_name, custom_headers=None, raw=False,
      **operation_config)
    parameters:
    - description: 'The vault name, for example

        [https://myvault.vault.azure.net](https://myvault.vault.azure.net).'
      id: vault_base_url
      type:
      - str
    - description: The name of the deleted key.
      id: key_name
      type:
      - str
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
    return:
      description: KeyBundle or ClientRawResponse if raw=true
      type:
      - azure.keyvault.v2016_10_01.models.KeyBundle
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient.recover_deleted_key
- class: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient
  exceptions:
  - type: azure.keyvault.v2016_10_01.models.KeyVaultErrorException
  fullName: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient.recover_deleted_secret
  langs:
  - python
  module: azure.keyvault.v2016_10_01.key_vault_client
  name: recover_deleted_secret(vault_base_url, secret_name, custom_headers=None, raw=False,
    **operation_config)
  summary: 'Recovers the deleted secret to the latest version.


    Recovers the deleted secret in the specified vault. This operation can

    only be performed on a soft-delete enabled vault. This operation

    requires the secrets/recover permission.'
  syntax:
    content: recover_deleted_secret(vault_base_url, secret_name, custom_headers=None,
      raw=False, **operation_config)
    parameters:
    - description: 'The vault name, for example

        [https://myvault.vault.azure.net](https://myvault.vault.azure.net).'
      id: vault_base_url
      type:
      - str
    - description: The name of the deleted secret.
      id: secret_name
      type:
      - str
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
    return:
      description: SecretBundle or ClientRawResponse if raw=true
      type:
      - azure.keyvault.v2016_10_01.models.SecretBundle
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient.recover_deleted_secret
- class: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient
  exceptions:
  - type: azure.keyvault.v2016_10_01.models.KeyVaultErrorException
  fullName: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient.regenerate_storage_account_key
  langs:
  - python
  module: azure.keyvault.v2016_10_01.key_vault_client
  name: regenerate_storage_account_key(vault_base_url, storage_account_name, key_name,
    custom_headers=None, raw=False, **operation_config)
  summary: 'Regenerates the specified key value for the given storage account. This

    operation requires the storage/regeneratekey permission.'
  syntax:
    content: regenerate_storage_account_key(vault_base_url, storage_account_name,
      key_name, custom_headers=None, raw=False, **operation_config)
    parameters:
    - description: 'The vault name, for example

        [https://myvault.vault.azure.net](https://myvault.vault.azure.net).'
      id: vault_base_url
      type:
      - str
    - description: The name of the storage account.
      id: storage_account_name
      type:
      - str
    - description: The storage account key name.
      id: key_name
      type:
      - str
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
    return:
      description: StorageBundle or ClientRawResponse if raw=true
      type:
      - azure.keyvault.v2016_10_01.models.StorageBundle
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient.regenerate_storage_account_key
- class: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient
  exceptions:
  - type: azure.keyvault.v2016_10_01.models.KeyVaultErrorException
  fullName: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient.restore_key
  langs:
  - python
  module: azure.keyvault.v2016_10_01.key_vault_client
  name: restore_key(vault_base_url, key_bundle_backup, custom_headers=None, raw=False,
    **operation_config)
  summary: 'Restores a backed up key to a vault.


    Imports a previously backed up key into Azure Key Vault, restoring the

    key, its key identifier, attributes and access control policies. The

    RESTORE operation may be used to import a previously backed up key.

    Individual versions of a key cannot be restored. The key is restored in

    its entirety with the same key name as it had when it was backed up. If

    the key name is not available in the target Key Vault, the RESTORE

    operation will be rejected. While the key name is retained during

    restore, the final key identifier will change if the key is restored to

    a different vault. Restore will restore all versions and preserve

    version identifiers. The RESTORE operation is subject to security

    constraints: The target Key Vault must be owned by the same Microsoft

    Azure Subscription as the source Key Vault The user must have RESTORE

    permission in the target Key Vault. This operation requires the

    keys/restore permission.'
  syntax:
    content: restore_key(vault_base_url, key_bundle_backup, custom_headers=None, raw=False,
      **operation_config)
    parameters:
    - description: 'The vault name, for example

        [https://myvault.vault.azure.net](https://myvault.vault.azure.net).'
      id: vault_base_url
      type:
      - str
    - description: 'The backup blob associated with a key

        bundle.'
      id: key_bundle_backup
      type:
      - bytes
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
    return:
      description: KeyBundle or ClientRawResponse if raw=true
      type:
      - azure.keyvault.v2016_10_01.models.KeyBundle
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient.restore_key
- class: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient
  exceptions:
  - type: azure.keyvault.v2016_10_01.models.KeyVaultErrorException
  fullName: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient.restore_secret
  langs:
  - python
  module: azure.keyvault.v2016_10_01.key_vault_client
  name: restore_secret(vault_base_url, secret_bundle_backup, custom_headers=None,
    raw=False, **operation_config)
  summary: 'Restores a backed up secret to a vault.


    Restores a backed up secret, and all its versions, to a vault. This

    operation requires the secrets/restore permission.'
  syntax:
    content: restore_secret(vault_base_url, secret_bundle_backup, custom_headers=None,
      raw=False, **operation_config)
    parameters:
    - description: 'The vault name, for example

        [https://myvault.vault.azure.net](https://myvault.vault.azure.net).'
      id: vault_base_url
      type:
      - str
    - description: 'The backup blob associated with a secret

        bundle.'
      id: secret_bundle_backup
      type:
      - bytes
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
    return:
      description: SecretBundle or ClientRawResponse if raw=true
      type:
      - azure.keyvault.v2016_10_01.models.SecretBundle
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient.restore_secret
- class: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient
  exceptions:
  - type: azure.keyvault.v2016_10_01.models.KeyVaultErrorException
  fullName: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient.set_certificate_contacts
  langs:
  - python
  module: azure.keyvault.v2016_10_01.key_vault_client
  name: set_certificate_contacts(vault_base_url, contact_list=None, custom_headers=None,
    raw=False, **operation_config)
  summary: 'Sets the certificate contacts for the specified key vault.


    Sets the certificate contacts for the specified key vault. This

    operation requires the certificates/managecontacts permission.'
  syntax:
    content: set_certificate_contacts(vault_base_url, contact_list=None, custom_headers=None,
      raw=False, **operation_config)
    parameters:
    - description: 'The vault name, for example

        [https://myvault.vault.azure.net](https://myvault.vault.azure.net).'
      id: vault_base_url
      type:
      - str
    - defaultValue: None
      description: The contact list for the vault certificates.
      id: contact_list
      type:
      - list[azure.keyvault.v2016_10_01.models.Contact]
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
    return:
      description: Contacts or ClientRawResponse if raw=true
      type:
      - azure.keyvault.v2016_10_01.models.Contacts
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient.set_certificate_contacts
- class: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient
  exceptions:
  - type: azure.keyvault.v2016_10_01.models.KeyVaultErrorException
  fullName: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient.set_certificate_issuer
  langs:
  - python
  module: azure.keyvault.v2016_10_01.key_vault_client
  name: set_certificate_issuer(vault_base_url, issuer_name, provider, credentials=None,
    organization_details=None, attributes=None, custom_headers=None, raw=False, **operation_config)
  summary: 'Sets the specified certificate issuer.


    The SetCertificateIssuer operation adds or updates the specified

    certificate issuer. This operation requires the certificates/setissuers

    permission.'
  syntax:
    content: set_certificate_issuer(vault_base_url, issuer_name, provider, credentials=None,
      organization_details=None, attributes=None, custom_headers=None, raw=False,
      **operation_config)
    parameters:
    - description: 'The vault name, for example

        [https://myvault.vault.azure.net](https://myvault.vault.azure.net).'
      id: vault_base_url
      type:
      - str
    - description: The name of the issuer.
      id: issuer_name
      type:
      - str
    - description: The issuer provider.
      id: provider
      type:
      - str
    - defaultValue: None
      description: The credentials to be used for the issuer.
      id: credentials
      type:
      - azure.keyvault.v2016_10_01.models.IssuerCredentials
    - defaultValue: None
      description: 'Details of the organization as provided

        to the issuer.'
      id: organization_details
      type:
      - azure.keyvault.v2016_10_01.models.OrganizationDetails
    - defaultValue: None
      description: Attributes of the issuer object.
      id: attributes
      type:
      - azure.keyvault.v2016_10_01.models.IssuerAttributes
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
    return:
      description: IssuerBundle or ClientRawResponse if raw=true
      type:
      - azure.keyvault.v2016_10_01.models.IssuerBundle
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient.set_certificate_issuer
- class: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient
  exceptions:
  - type: azure.keyvault.v2016_10_01.models.KeyVaultErrorException
  fullName: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient.set_sas_definition
  langs:
  - python
  module: azure.keyvault.v2016_10_01.key_vault_client
  name: set_sas_definition(vault_base_url, storage_account_name, sas_definition_name,
    parameters, sas_definition_attributes=None, tags=None, custom_headers=None, raw=False,
    **operation_config)
  summary: 'Creates or updates a new SAS definition for the specified storage

    account. This operation requires the storage/setsas permission.'
  syntax:
    content: set_sas_definition(vault_base_url, storage_account_name, sas_definition_name,
      parameters, sas_definition_attributes=None, tags=None, custom_headers=None,
      raw=False, **operation_config)
    parameters:
    - description: 'The vault name, for example

        [https://myvault.vault.azure.net](https://myvault.vault.azure.net).'
      id: vault_base_url
      type:
      - str
    - description: The name of the storage account.
      id: storage_account_name
      type:
      - str
    - description: The name of the SAS definition.
      id: sas_definition_name
      type:
      - str
    - description: 'Sas definition creation metadata in the form of

        key-value pairs.'
      id: parameters
      type:
      - dict[str, str]
    - defaultValue: None
      description: 'The attributes of the SAS

        definition.'
      id: sas_definition_attributes
      type:
      - azure.keyvault.v2016_10_01.models.SasDefinitionAttributes
    - defaultValue: None
      description: 'Application specific metadata in the form of key-value

        pairs.'
      id: tags
      type:
      - dict[str, str]
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
    return:
      description: SasDefinitionBundle or ClientRawResponse if raw=true
      type:
      - azure.keyvault.v2016_10_01.models.SasDefinitionBundle
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient.set_sas_definition
- class: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient
  exceptions:
  - type: azure.keyvault.v2016_10_01.models.KeyVaultErrorException
  fullName: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient.set_secret
  langs:
  - python
  module: azure.keyvault.v2016_10_01.key_vault_client
  name: set_secret(vault_base_url, secret_name, value, tags=None, content_type=None,
    secret_attributes=None, custom_headers=None, raw=False, **operation_config)
  summary: 'Sets a secret in a specified key vault.


    The SET operation adds a secret to the Azure Key Vault. If the named

    secret already exists, Azure Key Vault creates a new version of that

    secret. This operation requires the secrets/set permission.'
  syntax:
    content: set_secret(vault_base_url, secret_name, value, tags=None, content_type=None,
      secret_attributes=None, custom_headers=None, raw=False, **operation_config)
    parameters:
    - description: 'The vault name, for example

        [https://myvault.vault.azure.net](https://myvault.vault.azure.net).'
      id: vault_base_url
      type:
      - str
    - description: The name of the secret.
      id: secret_name
      type:
      - str
    - description: The value of the secret.
      id: value
      type:
      - str
    - defaultValue: None
      description: 'Application specific metadata in the form of key-value

        pairs.'
      id: tags
      type:
      - dict[str, str]
    - defaultValue: None
      description: Type of the secret value such as a password.
      id: content_type
      type:
      - str
    - defaultValue: None
      description: The secret management attributes.
      id: secret_attributes
      type:
      - azure.keyvault.v2016_10_01.models.SecretAttributes
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
    return:
      description: SecretBundle or ClientRawResponse if raw=true
      type:
      - azure.keyvault.v2016_10_01.models.SecretBundle
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient.set_secret
- class: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient
  exceptions:
  - type: azure.keyvault.v2016_10_01.models.KeyVaultErrorException
  fullName: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient.set_storage_account
  langs:
  - python
  module: azure.keyvault.v2016_10_01.key_vault_client
  name: set_storage_account(vault_base_url, storage_account_name, resource_id, active_key_name,
    auto_regenerate_key, regeneration_period=None, storage_account_attributes=None,
    tags=None, custom_headers=None, raw=False, **operation_config)
  summary: 'Creates or updates a new storage account. This operation requires the

    storage/set permission.'
  syntax:
    content: set_storage_account(vault_base_url, storage_account_name, resource_id,
      active_key_name, auto_regenerate_key, regeneration_period=None, storage_account_attributes=None,
      tags=None, custom_headers=None, raw=False, **operation_config)
    parameters:
    - description: 'The vault name, for example

        [https://myvault.vault.azure.net](https://myvault.vault.azure.net).'
      id: vault_base_url
      type:
      - str
    - description: The name of the storage account.
      id: storage_account_name
      type:
      - str
    - description: Storage account resource id.
      id: resource_id
      type:
      - str
    - description: Current active storage account key name.
      id: active_key_name
      type:
      - str
    - description: 'whether keyvault should manage the storage

        account for the user.'
      id: auto_regenerate_key
      type:
      - bool
    - defaultValue: None
      description: 'The key regeneration time duration

        specified in ISO-8601 format.'
      id: regeneration_period
      type:
      - str
    - defaultValue: None
      description: 'The attributes of the storage

        account.'
      id: storage_account_attributes
      type:
      - azure.keyvault.v2016_10_01.models.StorageAccountAttributes
    - defaultValue: None
      description: 'Application specific metadata in the form of key-value

        pairs.'
      id: tags
      type:
      - dict[str, str]
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
    return:
      description: StorageBundle or ClientRawResponse if raw=true
      type:
      - azure.keyvault.v2016_10_01.models.StorageBundle
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient.set_storage_account
- class: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient
  exceptions:
  - type: azure.keyvault.v2016_10_01.models.KeyVaultErrorException
  fullName: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient.sign
  langs:
  - python
  module: azure.keyvault.v2016_10_01.key_vault_client
  name: sign(vault_base_url, key_name, key_version, algorithm, value, custom_headers=None,
    raw=False, **operation_config)
  summary: 'Creates a signature from a digest using the specified key.


    The SIGN operation is applicable to asymmetric and symmetric keys

    stored in Azure Key Vault since this operation uses the private portion

    of the key. This operation requires the keys/sign permission.'
  syntax:
    content: sign(vault_base_url, key_name, key_version, algorithm, value, custom_headers=None,
      raw=False, **operation_config)
    parameters:
    - description: 'The vault name, for example

        [https://myvault.vault.azure.net](https://myvault.vault.azure.net).'
      id: vault_base_url
      type:
      - str
    - description: The name of the key.
      id: key_name
      type:
      - str
    - description: The version of the key.
      id: key_version
      type:
      - str
    - description: 'The signing/verification algorithm identifier. For

        more information on possible algorithm types, see

        JsonWebKeySignatureAlgorithm. Possible values include: ''PS256'',

        ''PS384'', ''PS512'', ''RS256'', ''RS384'', ''RS512'', ''RSNULL'', ''ES256'',

        ''ES384'', ''ES512'', ''ECDSA256'''
      id: algorithm
      type:
      - str
      - azure.keyvault.v2016_10_01.models.JsonWebKeySignatureAlgorithm
    - description: ''
      id: value
      type:
      - bytes
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
    return:
      description: KeyOperationResult or ClientRawResponse if raw=true
      type:
      - azure.keyvault.v2016_10_01.models.KeyOperationResult
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient.sign
- class: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient
  exceptions:
  - type: azure.keyvault.v2016_10_01.models.KeyVaultErrorException
  fullName: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient.unwrap_key
  langs:
  - python
  module: azure.keyvault.v2016_10_01.key_vault_client
  name: unwrap_key(vault_base_url, key_name, key_version, algorithm, value, custom_headers=None,
    raw=False, **operation_config)
  summary: 'Unwraps a symmetric key using the specified key that was initially used

    for wrapping that key.


    The UNWRAP operation supports decryption of a symmetric key using the

    target key encryption key. This operation is the reverse of the WRAP

    operation. The UNWRAP operation applies to asymmetric and symmetric

    keys stored in Azure Key Vault since it uses the private portion of the

    key. This operation requires the keys/unwrapKey permission.'
  syntax:
    content: unwrap_key(vault_base_url, key_name, key_version, algorithm, value, custom_headers=None,
      raw=False, **operation_config)
    parameters:
    - description: 'The vault name, for example

        [https://myvault.vault.azure.net](https://myvault.vault.azure.net).'
      id: vault_base_url
      type:
      - str
    - description: The name of the key.
      id: key_name
      type:
      - str
    - description: The version of the key.
      id: key_version
      type:
      - str
    - description: 'algorithm identifier. Possible values include:

        ''RSA-OAEP'', ''RSA-OAEP-256'', ''RSA1_5'''
      id: algorithm
      type:
      - str
      - azure.keyvault.v2016_10_01.models.JsonWebKeyEncryptionAlgorithm
    - description: ''
      id: value
      type:
      - bytes
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
    return:
      description: KeyOperationResult or ClientRawResponse if raw=true
      type:
      - azure.keyvault.v2016_10_01.models.KeyOperationResult
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient.unwrap_key
- class: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient
  exceptions:
  - type: azure.keyvault.v2016_10_01.models.KeyVaultErrorException
  fullName: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient.update_certificate
  langs:
  - python
  module: azure.keyvault.v2016_10_01.key_vault_client
  name: update_certificate(vault_base_url, certificate_name, certificate_version,
    certificate_policy=None, certificate_attributes=None, tags=None, custom_headers=None,
    raw=False, **operation_config)
  summary: 'Updates the specified attributes associated with the given certificate.


    The UpdateCertificate operation applies the specified update on the

    given certificate; the only elements updated are the certificate''s

    attributes. This operation requires the certificates/update permission.'
  syntax:
    content: update_certificate(vault_base_url, certificate_name, certificate_version,
      certificate_policy=None, certificate_attributes=None, tags=None, custom_headers=None,
      raw=False, **operation_config)
    parameters:
    - description: 'The vault name, for example

        [https://myvault.vault.azure.net](https://myvault.vault.azure.net).'
      id: vault_base_url
      type:
      - str
    - description: 'The name of the certificate in the given key

        vault.'
      id: certificate_name
      type:
      - str
    - description: The version of the certificate.
      id: certificate_version
      type:
      - str
    - defaultValue: None
      description: The management policy for the certificate.
      id: certificate_policy
      type:
      - azure.keyvault.v2016_10_01.models.CertificatePolicy
    - defaultValue: None
      description: 'The attributes of the certificate

        (optional).'
      id: certificate_attributes
      type:
      - azure.keyvault.v2016_10_01.models.CertificateAttributes
    - defaultValue: None
      description: 'Application specific metadata in the form of key-value

        pairs.'
      id: tags
      type:
      - dict[str, str]
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
    return:
      description: CertificateBundle or ClientRawResponse if raw=true
      type:
      - azure.keyvault.v2016_10_01.models.CertificateBundle
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient.update_certificate
- class: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient
  exceptions:
  - type: azure.keyvault.v2016_10_01.models.KeyVaultErrorException
  fullName: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient.update_certificate_issuer
  langs:
  - python
  module: azure.keyvault.v2016_10_01.key_vault_client
  name: update_certificate_issuer(vault_base_url, issuer_name, provider=None, credentials=None,
    organization_details=None, attributes=None, custom_headers=None, raw=False, **operation_config)
  summary: 'Updates the specified certificate issuer.


    The UpdateCertificateIssuer operation performs an update on the

    specified certificate issuer entity. This operation requires the

    certificates/setissuers permission.'
  syntax:
    content: update_certificate_issuer(vault_base_url, issuer_name, provider=None,
      credentials=None, organization_details=None, attributes=None, custom_headers=None,
      raw=False, **operation_config)
    parameters:
    - description: 'The vault name, for example

        [https://myvault.vault.azure.net](https://myvault.vault.azure.net).'
      id: vault_base_url
      type:
      - str
    - description: The name of the issuer.
      id: issuer_name
      type:
      - str
    - defaultValue: None
      description: The issuer provider.
      id: provider
      type:
      - str
    - defaultValue: None
      description: The credentials to be used for the issuer.
      id: credentials
      type:
      - azure.keyvault.v2016_10_01.models.IssuerCredentials
    - defaultValue: None
      description: 'Details of the organization as provided

        to the issuer.'
      id: organization_details
      type:
      - azure.keyvault.v2016_10_01.models.OrganizationDetails
    - defaultValue: None
      description: Attributes of the issuer object.
      id: attributes
      type:
      - azure.keyvault.v2016_10_01.models.IssuerAttributes
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
    return:
      description: IssuerBundle or ClientRawResponse if raw=true
      type:
      - azure.keyvault.v2016_10_01.models.IssuerBundle
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient.update_certificate_issuer
- class: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient
  exceptions:
  - type: azure.keyvault.v2016_10_01.models.KeyVaultErrorException
  fullName: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient.update_certificate_operation
  langs:
  - python
  module: azure.keyvault.v2016_10_01.key_vault_client
  name: update_certificate_operation(vault_base_url, certificate_name, cancellation_requested,
    custom_headers=None, raw=False, **operation_config)
  summary: 'Updates a certificate operation.


    Updates a certificate creation operation that is already in progress.

    This operation requires the certificates/update permission.'
  syntax:
    content: update_certificate_operation(vault_base_url, certificate_name, cancellation_requested,
      custom_headers=None, raw=False, **operation_config)
    parameters:
    - description: 'The vault name, for example

        [https://myvault.vault.azure.net](https://myvault.vault.azure.net).'
      id: vault_base_url
      type:
      - str
    - description: The name of the certificate.
      id: certificate_name
      type:
      - str
    - description: 'Indicates if cancellation was requested

        on the certificate operation.'
      id: cancellation_requested
      type:
      - bool
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
    return:
      description: CertificateOperation or ClientRawResponse if raw=true
      type:
      - azure.keyvault.v2016_10_01.models.CertificateOperation
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient.update_certificate_operation
- class: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient
  exceptions:
  - type: azure.keyvault.v2016_10_01.models.KeyVaultErrorException
  fullName: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient.update_certificate_policy
  langs:
  - python
  module: azure.keyvault.v2016_10_01.key_vault_client
  name: update_certificate_policy(vault_base_url, certificate_name, certificate_policy,
    custom_headers=None, raw=False, **operation_config)
  summary: 'Updates the policy for a certificate.


    Set specified members in the certificate policy. Leave others as null.

    This operation requires the certificates/update permission.'
  syntax:
    content: update_certificate_policy(vault_base_url, certificate_name, certificate_policy,
      custom_headers=None, raw=False, **operation_config)
    parameters:
    - description: 'The vault name, for example

        [https://myvault.vault.azure.net](https://myvault.vault.azure.net).'
      id: vault_base_url
      type:
      - str
    - description: 'The name of the certificate in the given

        vault.'
      id: certificate_name
      type:
      - str
    - description: The policy for the certificate.
      id: certificate_policy
      type:
      - azure.keyvault.v2016_10_01.models.CertificatePolicy
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
    return:
      description: CertificatePolicy or ClientRawResponse if raw=true
      type:
      - azure.keyvault.v2016_10_01.models.CertificatePolicy
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient.update_certificate_policy
- class: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient
  exceptions:
  - type: azure.keyvault.v2016_10_01.models.KeyVaultErrorException
  fullName: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient.update_key
  langs:
  - python
  module: azure.keyvault.v2016_10_01.key_vault_client
  name: update_key(vault_base_url, key_name, key_version, key_ops=None, key_attributes=None,
    tags=None, custom_headers=None, raw=False, **operation_config)
  summary: 'The update key operation changes specified attributes of a stored key

    and can be applied to any key type and key version stored in Azure Key

    Vault.


    In order to perform this operation, the key must already exist in the

    Key Vault. Note: The cryptographic material of a key itself cannot be

    changed. This operation requires the keys/update permission.'
  syntax:
    content: update_key(vault_base_url, key_name, key_version, key_ops=None, key_attributes=None,
      tags=None, custom_headers=None, raw=False, **operation_config)
    parameters:
    - description: 'The vault name, for example

        [https://myvault.vault.azure.net](https://myvault.vault.azure.net).'
      id: vault_base_url
      type:
      - str
    - description: The name of key to update.
      id: key_name
      type:
      - str
    - description: The version of the key to update.
      id: key_version
      type:
      - str
    - defaultValue: None
      description: 'Json web key operations. For more information on

        possible key operations, see JsonWebKeyOperation.'
      id: key_ops
      type:
      - list[str
      - azure.keyvault.v2016_10_01.models.JsonWebKeyOperation]
    - defaultValue: None
      description: ''
      id: key_attributes
      type:
      - azure.keyvault.v2016_10_01.models.KeyAttributes
    - defaultValue: None
      description: 'Application specific metadata in the form of key-value

        pairs.'
      id: tags
      type:
      - dict[str, str]
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
    return:
      description: KeyBundle or ClientRawResponse if raw=true
      type:
      - azure.keyvault.v2016_10_01.models.KeyBundle
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient.update_key
- class: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient
  exceptions:
  - type: azure.keyvault.v2016_10_01.models.KeyVaultErrorException
  fullName: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient.update_sas_definition
  langs:
  - python
  module: azure.keyvault.v2016_10_01.key_vault_client
  name: update_sas_definition(vault_base_url, storage_account_name, sas_definition_name,
    parameters=None, sas_definition_attributes=None, tags=None, custom_headers=None,
    raw=False, **operation_config)
  summary: 'Updates the specified attributes associated with the given SAS

    definition. This operation requires the storage/setsas permission.'
  syntax:
    content: update_sas_definition(vault_base_url, storage_account_name, sas_definition_name,
      parameters=None, sas_definition_attributes=None, tags=None, custom_headers=None,
      raw=False, **operation_config)
    parameters:
    - description: 'The vault name, for example

        [https://myvault.vault.azure.net](https://myvault.vault.azure.net).'
      id: vault_base_url
      type:
      - str
    - description: The name of the storage account.
      id: storage_account_name
      type:
      - str
    - description: The name of the SAS definition.
      id: sas_definition_name
      type:
      - str
    - defaultValue: None
      description: 'Sas definition update metadata in the form of

        key-value pairs.'
      id: parameters
      type:
      - dict[str, str]
    - defaultValue: None
      description: 'The attributes of the SAS

        definition.'
      id: sas_definition_attributes
      type:
      - azure.keyvault.v2016_10_01.models.SasDefinitionAttributes
    - defaultValue: None
      description: 'Application specific metadata in the form of key-value

        pairs.'
      id: tags
      type:
      - dict[str, str]
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
    return:
      description: SasDefinitionBundle or ClientRawResponse if raw=true
      type:
      - azure.keyvault.v2016_10_01.models.SasDefinitionBundle
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient.update_sas_definition
- class: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient
  exceptions:
  - type: azure.keyvault.v2016_10_01.models.KeyVaultErrorException
  fullName: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient.update_secret
  langs:
  - python
  module: azure.keyvault.v2016_10_01.key_vault_client
  name: update_secret(vault_base_url, secret_name, secret_version, content_type=None,
    secret_attributes=None, tags=None, custom_headers=None, raw=False, **operation_config)
  summary: 'Updates the attributes associated with a specified secret in a given

    key vault.


    The UPDATE operation changes specified attributes of an existing stored

    secret. Attributes that are not specified in the request are left

    unchanged. The value of a secret itself cannot be changed. This

    operation requires the secrets/set permission.'
  syntax:
    content: update_secret(vault_base_url, secret_name, secret_version, content_type=None,
      secret_attributes=None, tags=None, custom_headers=None, raw=False, **operation_config)
    parameters:
    - description: 'The vault name, for example

        [https://myvault.vault.azure.net](https://myvault.vault.azure.net).'
      id: vault_base_url
      type:
      - str
    - description: The name of the secret.
      id: secret_name
      type:
      - str
    - description: The version of the secret.
      id: secret_version
      type:
      - str
    - defaultValue: None
      description: Type of the secret value such as a password.
      id: content_type
      type:
      - str
    - defaultValue: None
      description: The secret management attributes.
      id: secret_attributes
      type:
      - azure.keyvault.v2016_10_01.models.SecretAttributes
    - defaultValue: None
      description: 'Application specific metadata in the form of key-value

        pairs.'
      id: tags
      type:
      - dict[str, str]
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
    return:
      description: SecretBundle or ClientRawResponse if raw=true
      type:
      - azure.keyvault.v2016_10_01.models.SecretBundle
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient.update_secret
- class: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient
  exceptions:
  - type: azure.keyvault.v2016_10_01.models.KeyVaultErrorException
  fullName: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient.update_storage_account
  langs:
  - python
  module: azure.keyvault.v2016_10_01.key_vault_client
  name: update_storage_account(vault_base_url, storage_account_name, active_key_name=None,
    auto_regenerate_key=None, regeneration_period=None, storage_account_attributes=None,
    tags=None, custom_headers=None, raw=False, **operation_config)
  summary: 'Updates the specified attributes associated with the given storage

    account. This operation requires the storage/set/update permission.'
  syntax:
    content: update_storage_account(vault_base_url, storage_account_name, active_key_name=None,
      auto_regenerate_key=None, regeneration_period=None, storage_account_attributes=None,
      tags=None, custom_headers=None, raw=False, **operation_config)
    parameters:
    - description: 'The vault name, for example

        [https://myvault.vault.azure.net](https://myvault.vault.azure.net).'
      id: vault_base_url
      type:
      - str
    - description: The name of the storage account.
      id: storage_account_name
      type:
      - str
    - defaultValue: None
      description: The current active storage account key name.
      id: active_key_name
      type:
      - str
    - defaultValue: None
      description: 'whether keyvault should manage the storage

        account for the user.'
      id: auto_regenerate_key
      type:
      - bool
    - defaultValue: None
      description: 'The key regeneration time duration

        specified in ISO-8601 format.'
      id: regeneration_period
      type:
      - str
    - defaultValue: None
      description: 'The attributes of the storage

        account.'
      id: storage_account_attributes
      type:
      - azure.keyvault.v2016_10_01.models.StorageAccountAttributes
    - defaultValue: None
      description: 'Application specific metadata in the form of key-value

        pairs.'
      id: tags
      type:
      - dict[str, str]
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
    return:
      description: StorageBundle or ClientRawResponse if raw=true
      type:
      - azure.keyvault.v2016_10_01.models.StorageBundle
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient.update_storage_account
- class: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient
  exceptions:
  - type: azure.keyvault.v2016_10_01.models.KeyVaultErrorException
  fullName: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient.verify
  langs:
  - python
  module: azure.keyvault.v2016_10_01.key_vault_client
  name: verify(vault_base_url, key_name, key_version, algorithm, digest, signature,
    custom_headers=None, raw=False, **operation_config)
  summary: 'Verifies a signature using a specified key.


    The VERIFY operation is applicable to symmetric keys stored in Azure

    Key Vault. VERIFY is not strictly necessary for asymmetric keys stored

    in Azure Key Vault since signature verification can be performed using

    the public portion of the key but this operation is supported as a

    convenience for callers that only have a key-reference and not the

    public portion of the key. This operation requires the keys/verify

    permission.'
  syntax:
    content: verify(vault_base_url, key_name, key_version, algorithm, digest, signature,
      custom_headers=None, raw=False, **operation_config)
    parameters:
    - description: 'The vault name, for example

        [https://myvault.vault.azure.net](https://myvault.vault.azure.net).'
      id: vault_base_url
      type:
      - str
    - description: The name of the key.
      id: key_name
      type:
      - str
    - description: The version of the key.
      id: key_version
      type:
      - str
    - description: 'The signing/verification algorithm. For more

        information on possible algorithm types, see

        JsonWebKeySignatureAlgorithm. Possible values include: ''PS256'',

        ''PS384'', ''PS512'', ''RS256'', ''RS384'', ''RS512'', ''RSNULL'', ''ES256'',

        ''ES384'', ''ES512'', ''ECDSA256'''
      id: algorithm
      type:
      - str
      - azure.keyvault.v2016_10_01.models.JsonWebKeySignatureAlgorithm
    - description: The digest used for signing.
      id: digest
      type:
      - bytes
    - description: The signature to be verified.
      id: signature
      type:
      - bytes
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
    return:
      description: KeyVerifyResult or ClientRawResponse if raw=true
      type:
      - azure.keyvault.v2016_10_01.models.KeyVerifyResult
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient.verify
- class: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient
  exceptions:
  - type: azure.keyvault.v2016_10_01.models.KeyVaultErrorException
  fullName: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient.wrap_key
  langs:
  - python
  module: azure.keyvault.v2016_10_01.key_vault_client
  name: wrap_key(vault_base_url, key_name, key_version, algorithm, value, custom_headers=None,
    raw=False, **operation_config)
  summary: 'Wraps a symmetric key using a specified key.


    The WRAP operation supports encryption of a symmetric key using a key

    encryption key that has previously been stored in an Azure Key Vault.

    The WRAP operation is only strictly necessary for symmetric keys stored

    in Azure Key Vault since protection with an asymmetric key can be

    performed using the public portion of the key. This operation is

    supported for asymmetric keys as a convenience for callers that have a

    key-reference but do not have access to the public key material. This

    operation requires the keys/wrapKey permission.'
  syntax:
    content: wrap_key(vault_base_url, key_name, key_version, algorithm, value, custom_headers=None,
      raw=False, **operation_config)
    parameters:
    - description: 'The vault name, for example

        [https://myvault.vault.azure.net](https://myvault.vault.azure.net).'
      id: vault_base_url
      type:
      - str
    - description: The name of the key.
      id: key_name
      type:
      - str
    - description: The version of the key.
      id: key_version
      type:
      - str
    - description: 'algorithm identifier. Possible values include:

        ''RSA-OAEP'', ''RSA-OAEP-256'', ''RSA1_5'''
      id: algorithm
      type:
      - str
      - azure.keyvault.v2016_10_01.models.JsonWebKeyEncryptionAlgorithm
    - description: ''
      id: value
      type:
      - bytes
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
    return:
      description: KeyOperationResult or ClientRawResponse if raw=true
      type:
      - azure.keyvault.v2016_10_01.models.KeyOperationResult
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient.wrap_key
references:
- fullName: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient.backup_key
  isExternal: false
  name: backup_key(vault_base_url, key_name, custom_headers=None, raw=False, **operation_config)
  parent: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient
  uid: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient.backup_key
- fullName: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient.backup_secret
  isExternal: false
  name: backup_secret(vault_base_url, secret_name, custom_headers=None, raw=False,
    **operation_config)
  parent: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient
  uid: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient.backup_secret
- fullName: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient.create_certificate
  isExternal: false
  name: create_certificate(vault_base_url, certificate_name, certificate_policy=None,
    certificate_attributes=None, tags=None, custom_headers=None, raw=False, **operation_config)
  parent: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient
  uid: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient.create_certificate
- fullName: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient.create_key
  isExternal: false
  name: create_key(vault_base_url, key_name, kty, key_size=None, key_ops=None, key_attributes=None,
    tags=None, curve=None, custom_headers=None, raw=False, **operation_config)
  parent: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient
  uid: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient.create_key
- fullName: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient.decrypt
  isExternal: false
  name: decrypt(vault_base_url, key_name, key_version, algorithm, value, custom_headers=None,
    raw=False, **operation_config)
  parent: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient
  uid: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient.decrypt
- fullName: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient.delete_certificate
  isExternal: false
  name: delete_certificate(vault_base_url, certificate_name, custom_headers=None,
    raw=False, **operation_config)
  parent: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient
  uid: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient.delete_certificate
- fullName: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient.delete_certificate_contacts
  isExternal: false
  name: delete_certificate_contacts(vault_base_url, custom_headers=None, raw=False,
    **operation_config)
  parent: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient
  uid: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient.delete_certificate_contacts
- fullName: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient.delete_certificate_issuer
  isExternal: false
  name: delete_certificate_issuer(vault_base_url, issuer_name, custom_headers=None,
    raw=False, **operation_config)
  parent: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient
  uid: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient.delete_certificate_issuer
- fullName: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient.delete_certificate_operation
  isExternal: false
  name: delete_certificate_operation(vault_base_url, certificate_name, custom_headers=None,
    raw=False, **operation_config)
  parent: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient
  uid: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient.delete_certificate_operation
- fullName: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient.delete_key
  isExternal: false
  name: delete_key(vault_base_url, key_name, custom_headers=None, raw=False, **operation_config)
  parent: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient
  uid: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient.delete_key
- fullName: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient.delete_sas_definition
  isExternal: false
  name: delete_sas_definition(vault_base_url, storage_account_name, sas_definition_name,
    custom_headers=None, raw=False, **operation_config)
  parent: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient
  uid: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient.delete_sas_definition
- fullName: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient.delete_secret
  isExternal: false
  name: delete_secret(vault_base_url, secret_name, custom_headers=None, raw=False,
    **operation_config)
  parent: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient
  uid: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient.delete_secret
- fullName: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient.delete_storage_account
  isExternal: false
  name: delete_storage_account(vault_base_url, storage_account_name, custom_headers=None,
    raw=False, **operation_config)
  parent: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient
  uid: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient.delete_storage_account
- fullName: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient.encrypt
  isExternal: false
  name: encrypt(vault_base_url, key_name, key_version, algorithm, value, custom_headers=None,
    raw=False, **operation_config)
  parent: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient
  uid: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient.encrypt
- fullName: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient.get_certificate
  isExternal: false
  name: get_certificate(vault_base_url, certificate_name, certificate_version, custom_headers=None,
    raw=False, **operation_config)
  parent: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient
  uid: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient.get_certificate
- fullName: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient.get_certificate_contacts
  isExternal: false
  name: get_certificate_contacts(vault_base_url, custom_headers=None, raw=False, **operation_config)
  parent: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient
  uid: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient.get_certificate_contacts
- fullName: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient.get_certificate_issuer
  isExternal: false
  name: get_certificate_issuer(vault_base_url, issuer_name, custom_headers=None, raw=False,
    **operation_config)
  parent: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient
  uid: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient.get_certificate_issuer
- fullName: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient.get_certificate_issuers
  isExternal: false
  name: get_certificate_issuers(vault_base_url, maxresults=None, custom_headers=None,
    raw=False, **operation_config)
  parent: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient
  uid: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient.get_certificate_issuers
- fullName: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient.get_certificate_operation
  isExternal: false
  name: get_certificate_operation(vault_base_url, certificate_name, custom_headers=None,
    raw=False, **operation_config)
  parent: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient
  uid: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient.get_certificate_operation
- fullName: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient.get_certificate_policy
  isExternal: false
  name: get_certificate_policy(vault_base_url, certificate_name, custom_headers=None,
    raw=False, **operation_config)
  parent: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient
  uid: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient.get_certificate_policy
- fullName: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient.get_certificate_versions
  isExternal: false
  name: get_certificate_versions(vault_base_url, certificate_name, maxresults=None,
    custom_headers=None, raw=False, **operation_config)
  parent: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient
  uid: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient.get_certificate_versions
- fullName: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient.get_certificates
  isExternal: false
  name: get_certificates(vault_base_url, maxresults=None, custom_headers=None, raw=False,
    **operation_config)
  parent: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient
  uid: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient.get_certificates
- fullName: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient.get_deleted_certificate
  isExternal: false
  name: get_deleted_certificate(vault_base_url, certificate_name, custom_headers=None,
    raw=False, **operation_config)
  parent: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient
  uid: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient.get_deleted_certificate
- fullName: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient.get_deleted_certificates
  isExternal: false
  name: get_deleted_certificates(vault_base_url, maxresults=None, custom_headers=None,
    raw=False, **operation_config)
  parent: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient
  uid: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient.get_deleted_certificates
- fullName: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient.get_deleted_key
  isExternal: false
  name: get_deleted_key(vault_base_url, key_name, custom_headers=None, raw=False,
    **operation_config)
  parent: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient
  uid: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient.get_deleted_key
- fullName: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient.get_deleted_keys
  isExternal: false
  name: get_deleted_keys(vault_base_url, maxresults=None, custom_headers=None, raw=False,
    **operation_config)
  parent: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient
  uid: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient.get_deleted_keys
- fullName: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient.get_deleted_secret
  isExternal: false
  name: get_deleted_secret(vault_base_url, secret_name, custom_headers=None, raw=False,
    **operation_config)
  parent: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient
  uid: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient.get_deleted_secret
- fullName: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient.get_deleted_secrets
  isExternal: false
  name: get_deleted_secrets(vault_base_url, maxresults=None, custom_headers=None,
    raw=False, **operation_config)
  parent: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient
  uid: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient.get_deleted_secrets
- fullName: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient.get_key
  isExternal: false
  name: get_key(vault_base_url, key_name, key_version, custom_headers=None, raw=False,
    **operation_config)
  parent: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient
  uid: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient.get_key
- fullName: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient.get_key_versions
  isExternal: false
  name: get_key_versions(vault_base_url, key_name, maxresults=None, custom_headers=None,
    raw=False, **operation_config)
  parent: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient
  uid: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient.get_key_versions
- fullName: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient.get_keys
  isExternal: false
  name: get_keys(vault_base_url, maxresults=None, custom_headers=None, raw=False,
    **operation_config)
  parent: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient
  uid: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient.get_keys
- fullName: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient.get_sas_definition
  isExternal: false
  name: get_sas_definition(vault_base_url, storage_account_name, sas_definition_name,
    custom_headers=None, raw=False, **operation_config)
  parent: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient
  uid: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient.get_sas_definition
- fullName: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient.get_sas_definitions
  isExternal: false
  name: get_sas_definitions(vault_base_url, storage_account_name, maxresults=None,
    custom_headers=None, raw=False, **operation_config)
  parent: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient
  uid: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient.get_sas_definitions
- fullName: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient.get_secret
  isExternal: false
  name: get_secret(vault_base_url, secret_name, secret_version, custom_headers=None,
    raw=False, **operation_config)
  parent: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient
  uid: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient.get_secret
- fullName: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient.get_secret_versions
  isExternal: false
  name: get_secret_versions(vault_base_url, secret_name, maxresults=None, custom_headers=None,
    raw=False, **operation_config)
  parent: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient
  uid: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient.get_secret_versions
- fullName: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient.get_secrets
  isExternal: false
  name: get_secrets(vault_base_url, maxresults=None, custom_headers=None, raw=False,
    **operation_config)
  parent: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient
  uid: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient.get_secrets
- fullName: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient.get_storage_account
  isExternal: false
  name: get_storage_account(vault_base_url, storage_account_name, custom_headers=None,
    raw=False, **operation_config)
  parent: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient
  uid: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient.get_storage_account
- fullName: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient.get_storage_accounts
  isExternal: false
  name: get_storage_accounts(vault_base_url, maxresults=None, custom_headers=None,
    raw=False, **operation_config)
  parent: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient
  uid: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient.get_storage_accounts
- fullName: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient.import_certificate
  isExternal: false
  name: import_certificate(vault_base_url, certificate_name, base64_encoded_certificate,
    password=None, certificate_policy=None, certificate_attributes=None, tags=None,
    custom_headers=None, raw=False, **operation_config)
  parent: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient
  uid: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient.import_certificate
- fullName: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient.import_key
  isExternal: false
  name: import_key(vault_base_url, key_name, key, hsm=None, key_attributes=None, tags=None,
    custom_headers=None, raw=False, **operation_config)
  parent: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient
  uid: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient.import_key
- fullName: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient.merge_certificate
  isExternal: false
  name: merge_certificate(vault_base_url, certificate_name, x509_certificates, certificate_attributes=None,
    tags=None, custom_headers=None, raw=False, **operation_config)
  parent: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient
  uid: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient.merge_certificate
- fullName: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient.purge_deleted_certificate
  isExternal: false
  name: purge_deleted_certificate(vault_base_url, certificate_name, custom_headers=None,
    raw=False, **operation_config)
  parent: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient
  uid: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient.purge_deleted_certificate
- fullName: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient.purge_deleted_key
  isExternal: false
  name: purge_deleted_key(vault_base_url, key_name, custom_headers=None, raw=False,
    **operation_config)
  parent: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient
  uid: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient.purge_deleted_key
- fullName: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient.purge_deleted_secret
  isExternal: false
  name: purge_deleted_secret(vault_base_url, secret_name, custom_headers=None, raw=False,
    **operation_config)
  parent: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient
  uid: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient.purge_deleted_secret
- fullName: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient.recover_deleted_certificate
  isExternal: false
  name: recover_deleted_certificate(vault_base_url, certificate_name, custom_headers=None,
    raw=False, **operation_config)
  parent: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient
  uid: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient.recover_deleted_certificate
- fullName: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient.recover_deleted_key
  isExternal: false
  name: recover_deleted_key(vault_base_url, key_name, custom_headers=None, raw=False,
    **operation_config)
  parent: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient
  uid: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient.recover_deleted_key
- fullName: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient.recover_deleted_secret
  isExternal: false
  name: recover_deleted_secret(vault_base_url, secret_name, custom_headers=None, raw=False,
    **operation_config)
  parent: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient
  uid: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient.recover_deleted_secret
- fullName: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient.regenerate_storage_account_key
  isExternal: false
  name: regenerate_storage_account_key(vault_base_url, storage_account_name, key_name,
    custom_headers=None, raw=False, **operation_config)
  parent: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient
  uid: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient.regenerate_storage_account_key
- fullName: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient.restore_key
  isExternal: false
  name: restore_key(vault_base_url, key_bundle_backup, custom_headers=None, raw=False,
    **operation_config)
  parent: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient
  uid: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient.restore_key
- fullName: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient.restore_secret
  isExternal: false
  name: restore_secret(vault_base_url, secret_bundle_backup, custom_headers=None,
    raw=False, **operation_config)
  parent: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient
  uid: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient.restore_secret
- fullName: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient.set_certificate_contacts
  isExternal: false
  name: set_certificate_contacts(vault_base_url, contact_list=None, custom_headers=None,
    raw=False, **operation_config)
  parent: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient
  uid: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient.set_certificate_contacts
- fullName: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient.set_certificate_issuer
  isExternal: false
  name: set_certificate_issuer(vault_base_url, issuer_name, provider, credentials=None,
    organization_details=None, attributes=None, custom_headers=None, raw=False, **operation_config)
  parent: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient
  uid: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient.set_certificate_issuer
- fullName: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient.set_sas_definition
  isExternal: false
  name: set_sas_definition(vault_base_url, storage_account_name, sas_definition_name,
    parameters, sas_definition_attributes=None, tags=None, custom_headers=None, raw=False,
    **operation_config)
  parent: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient
  uid: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient.set_sas_definition
- fullName: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient.set_secret
  isExternal: false
  name: set_secret(vault_base_url, secret_name, value, tags=None, content_type=None,
    secret_attributes=None, custom_headers=None, raw=False, **operation_config)
  parent: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient
  uid: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient.set_secret
- fullName: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient.set_storage_account
  isExternal: false
  name: set_storage_account(vault_base_url, storage_account_name, resource_id, active_key_name,
    auto_regenerate_key, regeneration_period=None, storage_account_attributes=None,
    tags=None, custom_headers=None, raw=False, **operation_config)
  parent: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient
  uid: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient.set_storage_account
- fullName: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient.sign
  isExternal: false
  name: sign(vault_base_url, key_name, key_version, algorithm, value, custom_headers=None,
    raw=False, **operation_config)
  parent: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient
  uid: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient.sign
- fullName: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient.unwrap_key
  isExternal: false
  name: unwrap_key(vault_base_url, key_name, key_version, algorithm, value, custom_headers=None,
    raw=False, **operation_config)
  parent: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient
  uid: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient.unwrap_key
- fullName: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient.update_certificate
  isExternal: false
  name: update_certificate(vault_base_url, certificate_name, certificate_version,
    certificate_policy=None, certificate_attributes=None, tags=None, custom_headers=None,
    raw=False, **operation_config)
  parent: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient
  uid: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient.update_certificate
- fullName: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient.update_certificate_issuer
  isExternal: false
  name: update_certificate_issuer(vault_base_url, issuer_name, provider=None, credentials=None,
    organization_details=None, attributes=None, custom_headers=None, raw=False, **operation_config)
  parent: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient
  uid: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient.update_certificate_issuer
- fullName: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient.update_certificate_operation
  isExternal: false
  name: update_certificate_operation(vault_base_url, certificate_name, cancellation_requested,
    custom_headers=None, raw=False, **operation_config)
  parent: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient
  uid: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient.update_certificate_operation
- fullName: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient.update_certificate_policy
  isExternal: false
  name: update_certificate_policy(vault_base_url, certificate_name, certificate_policy,
    custom_headers=None, raw=False, **operation_config)
  parent: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient
  uid: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient.update_certificate_policy
- fullName: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient.update_key
  isExternal: false
  name: update_key(vault_base_url, key_name, key_version, key_ops=None, key_attributes=None,
    tags=None, custom_headers=None, raw=False, **operation_config)
  parent: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient
  uid: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient.update_key
- fullName: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient.update_sas_definition
  isExternal: false
  name: update_sas_definition(vault_base_url, storage_account_name, sas_definition_name,
    parameters=None, sas_definition_attributes=None, tags=None, custom_headers=None,
    raw=False, **operation_config)
  parent: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient
  uid: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient.update_sas_definition
- fullName: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient.update_secret
  isExternal: false
  name: update_secret(vault_base_url, secret_name, secret_version, content_type=None,
    secret_attributes=None, tags=None, custom_headers=None, raw=False, **operation_config)
  parent: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient
  uid: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient.update_secret
- fullName: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient.update_storage_account
  isExternal: false
  name: update_storage_account(vault_base_url, storage_account_name, active_key_name=None,
    auto_regenerate_key=None, regeneration_period=None, storage_account_attributes=None,
    tags=None, custom_headers=None, raw=False, **operation_config)
  parent: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient
  uid: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient.update_storage_account
- fullName: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient.verify
  isExternal: false
  name: verify(vault_base_url, key_name, key_version, algorithm, digest, signature,
    custom_headers=None, raw=False, **operation_config)
  parent: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient
  uid: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient.verify
- fullName: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient.wrap_key
  isExternal: false
  name: wrap_key(vault_base_url, key_name, key_version, algorithm, value, custom_headers=None,
    raw=False, **operation_config)
  parent: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient
  uid: azure.keyvault.v2016_10_01.key_vault_client.KeyVaultClient.wrap_key
- fullName: dict[str, str]
  name: dict[str, str]
  spec.python:
  - fullName: dict
    name: dict
    uid: dict
  - fullName: '['
    name: '['
  - fullName: str
    name: str
    uid: str
  - fullName: ', '
    name: ', '
  - fullName: str
    name: str
    uid: str
  - fullName: ']'
    name: ']'
  uid: dict[str, str]
- fullName: list[str
  name: list[str
  spec.python:
  - fullName: list
    name: list
    uid: list
  - fullName: '['
    name: '['
  - fullName: str
    name: str
    uid: str
  uid: list[str
- fullName: azure.keyvault.v2016_10_01.models.JsonWebKeyOperation]
  name: JsonWebKeyOperation]
  spec.python:
  - fullName: azure.keyvault.v2016_10_01.models.JsonWebKeyOperation
    name: JsonWebKeyOperation
    uid: azure.keyvault.v2016_10_01.models.JsonWebKeyOperation
  - fullName: ']'
    name: ']'
  uid: azure.keyvault.v2016_10_01.models.JsonWebKeyOperation]
- fullName: azure.keyvault.v2016_10_01.models.CertificateIssuerItemPaged[azure.keyvault.v2016_10_01.models.CertificateIssuerItem]
  name: CertificateIssuerItemPaged[CertificateIssuerItem]
  spec.python:
  - fullName: azure.keyvault.v2016_10_01.models.CertificateIssuerItemPaged
    name: CertificateIssuerItemPaged
    uid: azure.keyvault.v2016_10_01.models.CertificateIssuerItemPaged
  - fullName: '['
    name: '['
  - fullName: azure.keyvault.v2016_10_01.models.CertificateIssuerItem
    name: CertificateIssuerItem
    uid: azure.keyvault.v2016_10_01.models.CertificateIssuerItem
  - fullName: ']'
    name: ']'
  uid: azure.keyvault.v2016_10_01.models.CertificateIssuerItemPaged[azure.keyvault.v2016_10_01.models.CertificateIssuerItem]
- fullName: azure.keyvault.v2016_10_01.models.CertificateItemPaged[azure.keyvault.v2016_10_01.models.CertificateItem]
  name: CertificateItemPaged[CertificateItem]
  spec.python:
  - fullName: azure.keyvault.v2016_10_01.models.CertificateItemPaged
    name: CertificateItemPaged
    uid: azure.keyvault.v2016_10_01.models.CertificateItemPaged
  - fullName: '['
    name: '['
  - fullName: azure.keyvault.v2016_10_01.models.CertificateItem
    name: CertificateItem
    uid: azure.keyvault.v2016_10_01.models.CertificateItem
  - fullName: ']'
    name: ']'
  uid: azure.keyvault.v2016_10_01.models.CertificateItemPaged[azure.keyvault.v2016_10_01.models.CertificateItem]
- fullName: azure.keyvault.v2016_10_01.models.DeletedCertificateItemPaged[azure.keyvault.v2016_10_01.models.DeletedCertificateItem]
  name: DeletedCertificateItemPaged[DeletedCertificateItem]
  spec.python:
  - fullName: azure.keyvault.v2016_10_01.models.DeletedCertificateItemPaged
    name: DeletedCertificateItemPaged
    uid: azure.keyvault.v2016_10_01.models.DeletedCertificateItemPaged
  - fullName: '['
    name: '['
  - fullName: azure.keyvault.v2016_10_01.models.DeletedCertificateItem
    name: DeletedCertificateItem
    uid: azure.keyvault.v2016_10_01.models.DeletedCertificateItem
  - fullName: ']'
    name: ']'
  uid: azure.keyvault.v2016_10_01.models.DeletedCertificateItemPaged[azure.keyvault.v2016_10_01.models.DeletedCertificateItem]
- fullName: azure.keyvault.v2016_10_01.models.DeletedKeyItemPaged[azure.keyvault.v2016_10_01.models.DeletedKeyItem]
  name: DeletedKeyItemPaged[DeletedKeyItem]
  spec.python:
  - fullName: azure.keyvault.v2016_10_01.models.DeletedKeyItemPaged
    name: DeletedKeyItemPaged
    uid: azure.keyvault.v2016_10_01.models.DeletedKeyItemPaged
  - fullName: '['
    name: '['
  - fullName: azure.keyvault.v2016_10_01.models.DeletedKeyItem
    name: DeletedKeyItem
    uid: azure.keyvault.v2016_10_01.models.DeletedKeyItem
  - fullName: ']'
    name: ']'
  uid: azure.keyvault.v2016_10_01.models.DeletedKeyItemPaged[azure.keyvault.v2016_10_01.models.DeletedKeyItem]
- fullName: azure.keyvault.v2016_10_01.models.DeletedSecretItemPaged[azure.keyvault.v2016_10_01.models.DeletedSecretItem]
  name: DeletedSecretItemPaged[DeletedSecretItem]
  spec.python:
  - fullName: azure.keyvault.v2016_10_01.models.DeletedSecretItemPaged
    name: DeletedSecretItemPaged
    uid: azure.keyvault.v2016_10_01.models.DeletedSecretItemPaged
  - fullName: '['
    name: '['
  - fullName: azure.keyvault.v2016_10_01.models.DeletedSecretItem
    name: DeletedSecretItem
    uid: azure.keyvault.v2016_10_01.models.DeletedSecretItem
  - fullName: ']'
    name: ']'
  uid: azure.keyvault.v2016_10_01.models.DeletedSecretItemPaged[azure.keyvault.v2016_10_01.models.DeletedSecretItem]
- fullName: azure.keyvault.v2016_10_01.models.KeyItemPaged[azure.keyvault.v2016_10_01.models.KeyItem]
  name: KeyItemPaged[KeyItem]
  spec.python:
  - fullName: azure.keyvault.v2016_10_01.models.KeyItemPaged
    name: KeyItemPaged
    uid: azure.keyvault.v2016_10_01.models.KeyItemPaged
  - fullName: '['
    name: '['
  - fullName: azure.keyvault.v2016_10_01.models.KeyItem
    name: KeyItem
    uid: azure.keyvault.v2016_10_01.models.KeyItem
  - fullName: ']'
    name: ']'
  uid: azure.keyvault.v2016_10_01.models.KeyItemPaged[azure.keyvault.v2016_10_01.models.KeyItem]
- fullName: azure.keyvault.v2016_10_01.models.SasDefinitionItemPaged[azure.keyvault.v2016_10_01.models.SasDefinitionItem]
  name: SasDefinitionItemPaged[SasDefinitionItem]
  spec.python:
  - fullName: azure.keyvault.v2016_10_01.models.SasDefinitionItemPaged
    name: SasDefinitionItemPaged
    uid: azure.keyvault.v2016_10_01.models.SasDefinitionItemPaged
  - fullName: '['
    name: '['
  - fullName: azure.keyvault.v2016_10_01.models.SasDefinitionItem
    name: SasDefinitionItem
    uid: azure.keyvault.v2016_10_01.models.SasDefinitionItem
  - fullName: ']'
    name: ']'
  uid: azure.keyvault.v2016_10_01.models.SasDefinitionItemPaged[azure.keyvault.v2016_10_01.models.SasDefinitionItem]
- fullName: azure.keyvault.v2016_10_01.models.SecretItemPaged[azure.keyvault.v2016_10_01.models.SecretItem]
  name: SecretItemPaged[SecretItem]
  spec.python:
  - fullName: azure.keyvault.v2016_10_01.models.SecretItemPaged
    name: SecretItemPaged
    uid: azure.keyvault.v2016_10_01.models.SecretItemPaged
  - fullName: '['
    name: '['
  - fullName: azure.keyvault.v2016_10_01.models.SecretItem
    name: SecretItem
    uid: azure.keyvault.v2016_10_01.models.SecretItem
  - fullName: ']'
    name: ']'
  uid: azure.keyvault.v2016_10_01.models.SecretItemPaged[azure.keyvault.v2016_10_01.models.SecretItem]
- fullName: azure.keyvault.v2016_10_01.models.StorageAccountItemPaged[azure.keyvault.v2016_10_01.models.StorageAccountItem]
  name: StorageAccountItemPaged[StorageAccountItem]
  spec.python:
  - fullName: azure.keyvault.v2016_10_01.models.StorageAccountItemPaged
    name: StorageAccountItemPaged
    uid: azure.keyvault.v2016_10_01.models.StorageAccountItemPaged
  - fullName: '['
    name: '['
  - fullName: azure.keyvault.v2016_10_01.models.StorageAccountItem
    name: StorageAccountItem
    uid: azure.keyvault.v2016_10_01.models.StorageAccountItem
  - fullName: ']'
    name: ']'
  uid: azure.keyvault.v2016_10_01.models.StorageAccountItemPaged[azure.keyvault.v2016_10_01.models.StorageAccountItem]
- fullName: list[bytearray]
  name: list[bytearray]
  spec.python:
  - fullName: list
    name: list
    uid: list
  - fullName: '['
    name: '['
  - fullName: bytearray
    name: bytearray
    uid: bytearray
  - fullName: ']'
    name: ']'
  uid: list[bytearray]
- fullName: list[azure.keyvault.v2016_10_01.models.Contact]
  name: list[Contact]
  spec.python:
  - fullName: list
    name: list
    uid: list
  - fullName: '['
    name: '['
  - fullName: azure.keyvault.v2016_10_01.models.Contact
    name: Contact
    uid: azure.keyvault.v2016_10_01.models.Contact
  - fullName: ']'
    name: ']'
  uid: list[azure.keyvault.v2016_10_01.models.Contact]
