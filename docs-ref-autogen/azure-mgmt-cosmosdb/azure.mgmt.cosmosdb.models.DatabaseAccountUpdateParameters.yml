### YamlMime:UniversalReference
api_name: []
items:
- children: []
  class: azure.mgmt.cosmosdb.models.DatabaseAccountUpdateParameters
  fullName: azure.mgmt.cosmosdb.models.DatabaseAccountUpdateParameters
  inheritance:
  - inheritance:
    - type: builtins.object
    type: msrest.serialization.Model
  langs:
  - python
  module: azure.mgmt.cosmosdb.models
  name: DatabaseAccountUpdateParameters
  summary: Parameters for patching Azure Cosmos DB database account properties.
  syntax:
    content: 'DatabaseAccountUpdateParameters(*, tags=None, location: str = None,
      consistency_policy=None, locations=None, ip_range_filter: str = None, is_virtual_network_filter_enabled:
      bool = None, enable_automatic_failover: bool = None, capabilities=None, virtual_network_rules=None,
      enable_multiple_write_locations: bool = None, enable_cassandra_connector: bool
      = None, connector_offer=None, disable_key_based_metadata_write_access: bool
      = None, key_vault_key_uri: str = None, public_network_access=None, **kwargs)
      -> None'
    parameters:
    - description: ''
      id: tags
      type:
      - dict[str, str]
    - description: 'The location of the resource group to which the resource

        belongs.'
      id: location
      type:
      - str
    - description: 'The consistency policy for the Cosmos DB

        account.'
      id: consistency_policy
      type:
      - azure.mgmt.cosmosdb.models.ConsistencyPolicy
    - description: 'An array that contains the georeplication locations

        enabled for the Cosmos DB account.'
      id: locations
      type:
      - list[azure.mgmt.cosmosdb.models.Location]
    - description: 'Cosmos DB Firewall Support: This value specifies

        the set of IP addresses or IP address ranges in CIDR form to be included

        as the allowed list of client IPs for a given database account. IP

        addresses/ranges must be comma separated and must not contain any spaces.'
      id: ip_range_filter
      type:
      - str
    - description: 'Flag to indicate whether to

        enable/disable Virtual Network ACL rules.'
      id: is_virtual_network_filter_enabled
      type:
      - bool
    - description: 'Enables automatic failover of the write

        region in the rare event that the region is unavailable due to an outage.

        Automatic failover will result in a new write region for the account and

        is chosen based on the failover priorities configured for the account.'
      id: enable_automatic_failover
      type:
      - bool
    - description: List of Cosmos DB capabilities for the account
      id: capabilities
      type:
      - list[azure.mgmt.cosmosdb.models.Capability]
    - description: 'List of Virtual Network ACL rules configured

        for the Cosmos DB account.'
      id: virtual_network_rules
      type:
      - list[azure.mgmt.cosmosdb.models.VirtualNetworkRule]
    - description: 'Enables the account to write in

        multiple locations'
      id: enable_multiple_write_locations
      type:
      - bool
    - description: 'Enables the cassandra connector on the

        Cosmos DB C* account'
      id: enable_cassandra_connector
      type:
      - bool
    - description: 'The cassandra connector offer type for the Cosmos

        DB database C* account. Possible values include: ''Small'''
      id: connector_offer
      type:
      - str
      - azure.mgmt.cosmosdb.models.ConnectorOffer
    - description: 'Disable write operations

        on metadata resources (databases, containers, throughput) via account keys'
      id: disable_key_based_metadata_write_access
      type:
      - bool
    - description: The URI of the key vault
      id: key_vault_key_uri
      type:
      - str
    - description: 'Whether requests from Public Network are

        allowed. Possible values include: ''Enabled'', ''Disabled'''
      id: public_network_access
      type:
      - str
      - azure.mgmt.cosmosdb.models.PublicNetworkAccess
  type: class
  uid: azure.mgmt.cosmosdb.models.DatabaseAccountUpdateParameters
references:
- fullName: dict[str, str]
  name: dict[str, str]
  spec.python:
  - fullName: dict
    name: dict
    uid: dict
  - fullName: '['
    name: '['
  - fullName: str
    name: str
    uid: str
  - fullName: ', '
    name: ', '
  - fullName: str
    name: str
    uid: str
  - fullName: ']'
    name: ']'
  uid: dict[str, str]
- fullName: list[azure.mgmt.cosmosdb.models.Location]
  name: list[Location]
  spec.python:
  - fullName: list
    name: list
    uid: list
  - fullName: '['
    name: '['
  - fullName: azure.mgmt.cosmosdb.models.Location
    name: Location
    uid: azure.mgmt.cosmosdb.models.Location
  - fullName: ']'
    name: ']'
  uid: list[azure.mgmt.cosmosdb.models.Location]
- fullName: list[azure.mgmt.cosmosdb.models.Capability]
  name: list[Capability]
  spec.python:
  - fullName: list
    name: list
    uid: list
  - fullName: '['
    name: '['
  - fullName: azure.mgmt.cosmosdb.models.Capability
    name: Capability
    uid: azure.mgmt.cosmosdb.models.Capability
  - fullName: ']'
    name: ']'
  uid: list[azure.mgmt.cosmosdb.models.Capability]
- fullName: list[azure.mgmt.cosmosdb.models.VirtualNetworkRule]
  name: list[VirtualNetworkRule]
  spec.python:
  - fullName: list
    name: list
    uid: list
  - fullName: '['
    name: '['
  - fullName: azure.mgmt.cosmosdb.models.VirtualNetworkRule
    name: VirtualNetworkRule
    uid: azure.mgmt.cosmosdb.models.VirtualNetworkRule
  - fullName: ']'
    name: ']'
  uid: list[azure.mgmt.cosmosdb.models.VirtualNetworkRule]
