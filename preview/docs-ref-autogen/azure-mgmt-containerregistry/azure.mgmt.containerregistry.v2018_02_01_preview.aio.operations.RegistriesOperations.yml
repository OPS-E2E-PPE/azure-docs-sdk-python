### YamlMime:PythonClass
uid: azure.mgmt.containerregistry.v2018_02_01_preview.aio.operations.RegistriesOperations
name: RegistriesOperations
fullName: azure.mgmt.containerregistry.v2018_02_01_preview.aio.operations.RegistriesOperations
module: azure.mgmt.containerregistry.v2018_02_01_preview.aio.operations
inheritances:
- builtins.object
summary: 'RegistriesOperations async operations.


  You should not instantiate this class directly. Instead, you should create a Client
  instance that

  instantiates it for you and attaches it as an attribute.'
constructor:
  syntax: RegistriesOperations(client, config, serializer, deserializer) -> None
  parameters:
  - name: client
    description: Client for service requests.
    isRequired: true
  - name: config
    description: Configuration of service client.
    isRequired: true
  - name: serializer
    description: An object model serializer.
    isRequired: true
  - name: deserializer
    description: An object model deserializer.
    isRequired: true
variables:
- description: Alias to model classes used in this operation group.
  name: models
methods:
- uid: azure.mgmt.containerregistry.v2018_02_01_preview.aio.operations.RegistriesOperations.begin_create
  name: begin_create
  summary: Creates a container registry with the specified parameters.
  signature: 'begin_create(resource_group_name: str, registry_name: str, registry:
    azure.mgmt.containerregistry.v2018_02_01_preview.models._models_py3.Registry,
    **kwargs) -> azure.core.polling._async_poller.AsyncLROPoller[_ForwardRef(''models.Registry'')]'
  parameters:
  - name: resource_group_name
    description: 'The name of the resource group to which the container registry

      belongs.'
    isRequired: true
    types:
    - <xref:str>
  - name: registry_name
    description: The name of the container registry.
    isRequired: true
    types:
    - <xref:str>
  - name: registry
    description: The parameters for creating a container registry.
    isRequired: true
    types:
    - <xref:azure.mgmt.containerregistry.v2018_02_01_preview.models.Registry>
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  - name: continuation_token
    description: A continuation token to restart a poller from a saved state.
    types:
    - <xref:str>
  - name: polling
    description: 'True for ARMPolling, False for no polling, or a

      polling object for personal polling strategy'
    types:
    - <xref:bool>
    - <xref:azure.core.polling.AsyncPollingMethod>
  - name: polling_interval
    description: Default waiting time between two polls for LRO operations if no Retry-After
      header is present.
    types:
    - <xref:int>
  return:
    description: An instance of AsyncLROPoller that returns either Registry or the
      result of cls(response)
    types:
    - <xref:azure.core.polling.AsyncLROPoller>[<xref:azure.mgmt.containerregistry.v2018_02_01_preview.models.Registry>]
  exceptions:
  - description: ''
    type: ~azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.containerregistry.v2018_02_01_preview.aio.operations.RegistriesOperations.begin_delete
  name: begin_delete
  summary: Deletes a container registry.
  signature: 'begin_delete(resource_group_name: str, registry_name: str, **kwargs)
    -> azure.core.polling._async_poller.AsyncLROPoller[NoneType]'
  parameters:
  - name: resource_group_name
    description: 'The name of the resource group to which the container registry

      belongs.'
    isRequired: true
    types:
    - <xref:str>
  - name: registry_name
    description: The name of the container registry.
    isRequired: true
    types:
    - <xref:str>
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  - name: continuation_token
    description: A continuation token to restart a poller from a saved state.
    types:
    - <xref:str>
  - name: polling
    description: 'True for ARMPolling, False for no polling, or a

      polling object for personal polling strategy'
    types:
    - <xref:bool>
    - <xref:azure.core.polling.AsyncPollingMethod>
  - name: polling_interval
    description: Default waiting time between two polls for LRO operations if no Retry-After
      header is present.
    types:
    - <xref:int>
  return:
    description: An instance of AsyncLROPoller that returns either None or the result
      of cls(response)
    types:
    - <xref:azure.core.polling.AsyncLROPoller>[<xref:None>]
  exceptions:
  - description: ''
    type: ~azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.containerregistry.v2018_02_01_preview.aio.operations.RegistriesOperations.begin_import_image
  name: begin_import_image
  summary: Copies an image to this container registry from the specified container
    registry.
  signature: 'begin_import_image(resource_group_name: str, registry_name: str, parameters:
    azure.mgmt.containerregistry.v2018_02_01_preview.models._models_py3.ImportImageParameters,
    **kwargs) -> azure.core.polling._async_poller.AsyncLROPoller[NoneType]'
  parameters:
  - name: resource_group_name
    description: 'The name of the resource group to which the container registry

      belongs.'
    isRequired: true
    types:
    - <xref:str>
  - name: registry_name
    description: The name of the container registry.
    isRequired: true
    types:
    - <xref:str>
  - name: parameters
    description: 'The parameters specifying the image to copy and the source container

      registry.'
    isRequired: true
    types:
    - <xref:azure.mgmt.containerregistry.v2018_02_01_preview.models.ImportImageParameters>
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  - name: continuation_token
    description: A continuation token to restart a poller from a saved state.
    types:
    - <xref:str>
  - name: polling
    description: 'True for ARMPolling, False for no polling, or a

      polling object for personal polling strategy'
    types:
    - <xref:bool>
    - <xref:azure.core.polling.AsyncPollingMethod>
  - name: polling_interval
    description: Default waiting time between two polls for LRO operations if no Retry-After
      header is present.
    types:
    - <xref:int>
  return:
    description: An instance of AsyncLROPoller that returns either None or the result
      of cls(response)
    types:
    - <xref:azure.core.polling.AsyncLROPoller>[<xref:None>]
  exceptions:
  - description: ''
    type: ~azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.containerregistry.v2018_02_01_preview.aio.operations.RegistriesOperations.begin_queue_build
  name: begin_queue_build
  summary: Creates a new build based on the request parameters and add it to the build
    queue.
  signature: 'begin_queue_build(resource_group_name: str, registry_name: str, build_request:
    azure.mgmt.containerregistry.v2018_02_01_preview.models._models_py3.QueueBuildRequest,
    **kwargs) -> azure.core.polling._async_poller.AsyncLROPoller[_ForwardRef(''models.Build'')]'
  parameters:
  - name: resource_group_name
    description: 'The name of the resource group to which the container registry

      belongs.'
    isRequired: true
    types:
    - <xref:str>
  - name: registry_name
    description: The name of the container registry.
    isRequired: true
    types:
    - <xref:str>
  - name: build_request
    description: The parameters of a build that needs to queued.
    isRequired: true
    types:
    - <xref:azure.mgmt.containerregistry.v2018_02_01_preview.models.QueueBuildRequest>
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  - name: continuation_token
    description: A continuation token to restart a poller from a saved state.
    types:
    - <xref:str>
  - name: polling
    description: 'True for ARMPolling, False for no polling, or a

      polling object for personal polling strategy'
    types:
    - <xref:bool>
    - <xref:azure.core.polling.AsyncPollingMethod>
  - name: polling_interval
    description: Default waiting time between two polls for LRO operations if no Retry-After
      header is present.
    types:
    - <xref:int>
  return:
    description: An instance of AsyncLROPoller that returns either Build or the result
      of cls(response)
    types:
    - <xref:azure.core.polling.AsyncLROPoller>[<xref:azure.mgmt.containerregistry.v2018_02_01_preview.models.Build>]
  exceptions:
  - description: ''
    type: ~azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.containerregistry.v2018_02_01_preview.aio.operations.RegistriesOperations.begin_update
  name: begin_update
  summary: Updates a container registry with the specified parameters.
  signature: 'begin_update(resource_group_name: str, registry_name: str, registry_update_parameters:
    azure.mgmt.containerregistry.v2018_02_01_preview.models._models_py3.RegistryUpdateParameters,
    **kwargs) -> azure.core.polling._async_poller.AsyncLROPoller[_ForwardRef(''models.Registry'')]'
  parameters:
  - name: resource_group_name
    description: 'The name of the resource group to which the container registry

      belongs.'
    isRequired: true
    types:
    - <xref:str>
  - name: registry_name
    description: The name of the container registry.
    isRequired: true
    types:
    - <xref:str>
  - name: registry_update_parameters
    description: The parameters for updating a container registry.
    isRequired: true
    types:
    - <xref:azure.mgmt.containerregistry.v2018_02_01_preview.models.RegistryUpdateParameters>
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  - name: continuation_token
    description: A continuation token to restart a poller from a saved state.
    types:
    - <xref:str>
  - name: polling
    description: 'True for ARMPolling, False for no polling, or a

      polling object for personal polling strategy'
    types:
    - <xref:bool>
    - <xref:azure.core.polling.AsyncPollingMethod>
  - name: polling_interval
    description: Default waiting time between two polls for LRO operations if no Retry-After
      header is present.
    types:
    - <xref:int>
  return:
    description: An instance of AsyncLROPoller that returns either Registry or the
      result of cls(response)
    types:
    - <xref:azure.core.polling.AsyncLROPoller>[<xref:azure.mgmt.containerregistry.v2018_02_01_preview.models.Registry>]
  exceptions:
  - description: ''
    type: ~azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.containerregistry.v2018_02_01_preview.aio.operations.RegistriesOperations.begin_update_policies
  name: begin_update_policies
  summary: Updates the policies for the specified container registry.
  signature: 'begin_update_policies(resource_group_name: str, registry_name: str,
    registry_policies_update_parameters: azure.mgmt.containerregistry.v2018_02_01_preview.models._models_py3.RegistryPolicies,
    **kwargs) -> azure.core.polling._async_poller.AsyncLROPoller[_ForwardRef(''models.RegistryPolicies'')]'
  parameters:
  - name: resource_group_name
    description: 'The name of the resource group to which the container registry

      belongs.'
    isRequired: true
    types:
    - <xref:str>
  - name: registry_name
    description: The name of the container registry.
    isRequired: true
    types:
    - <xref:str>
  - name: registry_policies_update_parameters
    description: 'The parameters for updating policies of a container

      registry.'
    isRequired: true
    types:
    - <xref:azure.mgmt.containerregistry.v2018_02_01_preview.models.RegistryPolicies>
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  - name: continuation_token
    description: A continuation token to restart a poller from a saved state.
    types:
    - <xref:str>
  - name: polling
    description: 'True for ARMPolling, False for no polling, or a

      polling object for personal polling strategy'
    types:
    - <xref:bool>
    - <xref:azure.core.polling.AsyncPollingMethod>
  - name: polling_interval
    description: Default waiting time between two polls for LRO operations if no Retry-After
      header is present.
    types:
    - <xref:int>
  return:
    description: An instance of AsyncLROPoller that returns either RegistryPolicies
      or the result of cls(response)
    types:
    - <xref:azure.core.polling.AsyncLROPoller>[<xref:azure.mgmt.containerregistry.v2018_02_01_preview.models.RegistryPolicies>]
  exceptions:
  - description: ''
    type: ~azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.containerregistry.v2018_02_01_preview.aio.operations.RegistriesOperations.check_name_availability
  name: check_name_availability
  summary: 'Checks whether the container registry name is available for use. The name
    must contain only

    alphanumeric characters, be globally unique, and between 5 and 50 characters in
    length.'
  signature: 'check_name_availability(registry_name_check_request: azure.mgmt.containerregistry.v2018_02_01_preview.models._models_py3.RegistryNameCheckRequest,
    **kwargs) -> azure.mgmt.containerregistry.v2018_02_01_preview.models._models_py3.RegistryNameStatus'
  parameters:
  - name: registry_name_check_request
    description: 'The object containing information for the availability

      request.'
    isRequired: true
    types:
    - <xref:azure.mgmt.containerregistry.v2018_02_01_preview.models.RegistryNameCheckRequest>
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  return:
    description: RegistryNameStatus, or the result of cls(response)
    types:
    - <xref:azure.mgmt.containerregistry.v2018_02_01_preview.models.RegistryNameStatus>
- uid: azure.mgmt.containerregistry.v2018_02_01_preview.aio.operations.RegistriesOperations.get
  name: get
  summary: Gets the properties of the specified container registry.
  signature: 'get(resource_group_name: str, registry_name: str, **kwargs) -> azure.mgmt.containerregistry.v2018_02_01_preview.models._models_py3.Registry'
  parameters:
  - name: resource_group_name
    description: 'The name of the resource group to which the container registry

      belongs.'
    isRequired: true
    types:
    - <xref:str>
  - name: registry_name
    description: The name of the container registry.
    isRequired: true
    types:
    - <xref:str>
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  return:
    description: Registry, or the result of cls(response)
    types:
    - <xref:azure.mgmt.containerregistry.v2018_02_01_preview.models.Registry>
- uid: azure.mgmt.containerregistry.v2018_02_01_preview.aio.operations.RegistriesOperations.get_build_source_upload_url
  name: get_build_source_upload_url
  summary: Get the upload location for the user to be able to upload the source.
  signature: 'get_build_source_upload_url(resource_group_name: str, registry_name:
    str, **kwargs) -> azure.mgmt.containerregistry.v2018_02_01_preview.models._models_py3.SourceUploadDefinition'
  parameters:
  - name: resource_group_name
    description: 'The name of the resource group to which the container registry

      belongs.'
    isRequired: true
    types:
    - <xref:str>
  - name: registry_name
    description: The name of the container registry.
    isRequired: true
    types:
    - <xref:str>
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  return:
    description: SourceUploadDefinition, or the result of cls(response)
    types:
    - <xref:azure.mgmt.containerregistry.v2018_02_01_preview.models.SourceUploadDefinition>
- uid: azure.mgmt.containerregistry.v2018_02_01_preview.aio.operations.RegistriesOperations.list
  name: list
  summary: Lists all the container registries under the specified subscription.
  signature: list(**kwargs) -> typing.AsyncIterable[_ForwardRef('models.RegistryListResult')]
  parameters:
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  return:
    description: An iterator like instance of either RegistryListResult or the result
      of cls(response)
    types:
    - <xref:azure.core.async_paging.AsyncItemPaged>[<xref:azure.mgmt.containerregistry.v2018_02_01_preview.models.RegistryListResult>]
- uid: azure.mgmt.containerregistry.v2018_02_01_preview.aio.operations.RegistriesOperations.list_by_resource_group
  name: list_by_resource_group
  summary: Lists all the container registries under the specified resource group.
  signature: 'list_by_resource_group(resource_group_name: str, **kwargs) -> typing.AsyncIterable[_ForwardRef(''models.RegistryListResult'')]'
  parameters:
  - name: resource_group_name
    description: 'The name of the resource group to which the container registry

      belongs.'
    isRequired: true
    types:
    - <xref:str>
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  return:
    description: An iterator like instance of either RegistryListResult or the result
      of cls(response)
    types:
    - <xref:azure.core.async_paging.AsyncItemPaged>[<xref:azure.mgmt.containerregistry.v2018_02_01_preview.models.RegistryListResult>]
- uid: azure.mgmt.containerregistry.v2018_02_01_preview.aio.operations.RegistriesOperations.list_credentials
  name: list_credentials
  summary: Lists the login credentials for the specified container registry.
  signature: 'list_credentials(resource_group_name: str, registry_name: str, **kwargs)
    -> azure.mgmt.containerregistry.v2018_02_01_preview.models._models_py3.RegistryListCredentialsResult'
  parameters:
  - name: resource_group_name
    description: 'The name of the resource group to which the container registry

      belongs.'
    isRequired: true
    types:
    - <xref:str>
  - name: registry_name
    description: The name of the container registry.
    isRequired: true
    types:
    - <xref:str>
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  return:
    description: RegistryListCredentialsResult, or the result of cls(response)
    types:
    - <xref:azure.mgmt.containerregistry.v2018_02_01_preview.models.RegistryListCredentialsResult>
- uid: azure.mgmt.containerregistry.v2018_02_01_preview.aio.operations.RegistriesOperations.list_policies
  name: list_policies
  summary: Lists the policies for the specified container registry.
  signature: 'list_policies(resource_group_name: str, registry_name: str, **kwargs)
    -> azure.mgmt.containerregistry.v2018_02_01_preview.models._models_py3.RegistryPolicies'
  parameters:
  - name: resource_group_name
    description: 'The name of the resource group to which the container registry

      belongs.'
    isRequired: true
    types:
    - <xref:str>
  - name: registry_name
    description: The name of the container registry.
    isRequired: true
    types:
    - <xref:str>
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  return:
    description: RegistryPolicies, or the result of cls(response)
    types:
    - <xref:azure.mgmt.containerregistry.v2018_02_01_preview.models.RegistryPolicies>
- uid: azure.mgmt.containerregistry.v2018_02_01_preview.aio.operations.RegistriesOperations.list_usages
  name: list_usages
  summary: Gets the quota usages for the specified container registry.
  signature: 'list_usages(resource_group_name: str, registry_name: str, **kwargs)
    -> azure.mgmt.containerregistry.v2018_02_01_preview.models._models_py3.RegistryUsageListResult'
  parameters:
  - name: resource_group_name
    description: 'The name of the resource group to which the container registry

      belongs.'
    isRequired: true
    types:
    - <xref:str>
  - name: registry_name
    description: The name of the container registry.
    isRequired: true
    types:
    - <xref:str>
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  return:
    description: RegistryUsageListResult, or the result of cls(response)
    types:
    - <xref:azure.mgmt.containerregistry.v2018_02_01_preview.models.RegistryUsageListResult>
- uid: azure.mgmt.containerregistry.v2018_02_01_preview.aio.operations.RegistriesOperations.regenerate_credential
  name: regenerate_credential
  summary: Regenerates one of the login credentials for the specified container registry.
  signature: 'regenerate_credential(resource_group_name: str, registry_name: str,
    regenerate_credential_parameters: azure.mgmt.containerregistry.v2018_02_01_preview.models._models_py3.RegenerateCredentialParameters,
    **kwargs) -> azure.mgmt.containerregistry.v2018_02_01_preview.models._models_py3.RegistryListCredentialsResult'
  parameters:
  - name: resource_group_name
    description: 'The name of the resource group to which the container registry

      belongs.'
    isRequired: true
    types:
    - <xref:str>
  - name: registry_name
    description: The name of the container registry.
    isRequired: true
    types:
    - <xref:str>
  - name: regenerate_credential_parameters
    description: 'Specifies name of the password which should be

      regenerated -- password or password2.'
    isRequired: true
    types:
    - <xref:azure.mgmt.containerregistry.v2018_02_01_preview.models.RegenerateCredentialParameters>
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  return:
    description: RegistryListCredentialsResult, or the result of cls(response)
    types:
    - <xref:azure.mgmt.containerregistry.v2018_02_01_preview.models.RegistryListCredentialsResult>
attributes:
- uid: azure.mgmt.containerregistry.v2018_02_01_preview.aio.operations.RegistriesOperations.models
  name: models
  signature: 'models = <module ''azure.mgmt.containerregistry.v2018_02_01_preview.models''
    from ''c:\\hostedtoolcache\\windows\\python\\3.6.8\\x64\\lib\\site-packages\\azure\\mgmt\\containerregistry\\v2018_02_01_preview\\models\\__init__.py''>'
