### YamlMime:PythonClass
uid: azure.security.attestation.models.AttestSgxEnclaveRequest
name: AttestSgxEnclaveRequest
fullName: azure.security.attestation.models.AttestSgxEnclaveRequest
module: azure.security.attestation.models
inheritances:
- msrest.serialization.Model
summary: Attestation request for Intel SGX enclaves.
constructor:
  syntax: 'AttestSgxEnclaveRequest(*, quote: typing.Union[bytes, NoneType] = None,
    runtime_data: typing.Union[_ForwardRef(''RuntimeData''), NoneType] = None, init_time_data:
    typing.Union[_ForwardRef(''InitTimeData''), NoneType] = None, draft_policy_for_attestation:
    typing.Union[str, NoneType] = None, nonce: typing.Union[str, NoneType] = None,
    **kwargs)'
  parameters:
  - name: quote
    description: Quote of the enclave to be attested.
    isRequired: true
    types:
    - <xref:bytes>
  - name: runtime_data
    description: 'Runtime data provided by the enclave at the time of quote generation.
      The

      MAA will verify that the first 32 bytes of the report_data field of the quote
      contains the

      SHA256 hash of the decoded "data" field of the runtime data.'
    isRequired: true
    types:
    - <xref:azure.security.attestation.models.RuntimeData>
  - name: init_time_data
    description: 'Initialization data provided when the enclave is created. MAA will

      verify that the init data was known to the enclave. Note that InitTimeData is
      invalid for

      CoffeeLake processors.'
    isRequired: true
    types:
    - <xref:azure.security.attestation.models.InitTimeData>
  - name: draft_policy_for_attestation
    description: 'Attest against the provided draft policy. Note that the

      resulting token cannot be validated.'
    isRequired: true
    types:
    - <xref:str>
  - name: nonce
    description: Nonce for incoming request - emitted in the generated attestation
      token.
    isRequired: true
    types:
    - <xref:str>
