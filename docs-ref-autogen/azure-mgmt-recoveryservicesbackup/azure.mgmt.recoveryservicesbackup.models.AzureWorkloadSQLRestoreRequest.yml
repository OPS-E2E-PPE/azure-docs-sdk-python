### YamlMime:UniversalReference
api_name: []
items:
- children: []
  class: azure.mgmt.recoveryservicesbackup.models.AzureWorkloadSQLRestoreRequest
  fullName: azure.mgmt.recoveryservicesbackup.models.AzureWorkloadSQLRestoreRequest
  inheritance:
  - inheritance:
    - inheritance:
      - inheritance:
        - type: builtins.object
        type: msrest.serialization.Model
      type: azure.mgmt.recoveryservicesbackup.models._models_py3.RestoreRequest
    type: azure.mgmt.recoveryservicesbackup.models._models_py3.AzureWorkloadRestoreRequest
  langs:
  - python
  module: azure.mgmt.recoveryservicesbackup.models
  name: AzureWorkloadSQLRestoreRequest
  summary: 'AzureWorkload SQL -specific restore. Specifically for full/diff restore.


    You probably want to use the sub-classes and not this class directly. Known

    sub-classes are: AzureWorkloadSQLPointInTimeRestoreRequest


    All required parameters must be populated in order to send to Azure.'
  syntax:
    content: 'AzureWorkloadSQLRestoreRequest(*, recovery_type=None, source_resource_id:
      str = None, property_bag=None, target_info=None, recovery_mode=None, should_use_alternate_target_location:
      bool = None, is_non_recoverable: bool = None, alternate_directory_paths=None,
      **kwargs) -> None'
    parameters:
    - description: Required. Constant filled by server.
      id: object_type
      type:
      - str
    - description: 'Type of this recovery. Possible values include:

        ''Invalid'', ''OriginalLocation'', ''AlternateLocation'', ''RestoreDisks'',

        ''Offline'''
      id: recovery_type
      type:
      - str
      - azure.mgmt.recoveryservicesbackup.models.RecoveryType
    - description: 'Fully qualified ARM ID of the VM on which

        workload that was running is being recovered.'
      id: source_resource_id
      type:
      - str
    - description: Workload specific property bag.
      id: property_bag
      type:
      - dict[str, str]
    - description: Details of target database
      id: target_info
      type:
      - azure.mgmt.recoveryservicesbackup.models.TargetRestoreInfo
    - description: 'Defines whether the current recovery mode is file

        restore or database restore. Possible values include: ''Invalid'',

        ''FileRecovery'', ''WorkloadRecovery'''
      id: recovery_mode
      type:
      - str
      - azure.mgmt.recoveryservicesbackup.models.RecoveryMode
    - description: 'Default option set to true.

        If this is set to false, alternate data directory must be provided'
      id: should_use_alternate_target_location
      type:
      - bool
    - description: 'SQL specific property where user can chose to

        set no-recovery when restore operation is tried'
      id: is_non_recoverable
      type:
      - bool
    - description: Data directory details
      id: alternate_directory_paths
      type:
      - list[azure.mgmt.recoveryservicesbackup.models.SQLDataDirectoryMapping]
  type: class
  uid: azure.mgmt.recoveryservicesbackup.models.AzureWorkloadSQLRestoreRequest
references:
- fullName: dict[str, str]
  name: dict[str, str]
  spec.python:
  - fullName: dict
    name: dict
    uid: dict
  - fullName: '['
    name: '['
  - fullName: str
    name: str
    uid: str
  - fullName: ', '
    name: ', '
  - fullName: str
    name: str
    uid: str
  - fullName: ']'
    name: ']'
  uid: dict[str, str]
- fullName: list[azure.mgmt.recoveryservicesbackup.models.SQLDataDirectoryMapping]
  name: list[SQLDataDirectoryMapping]
  spec.python:
  - fullName: list
    name: list
    uid: list
  - fullName: '['
    name: '['
  - fullName: azure.mgmt.recoveryservicesbackup.models.SQLDataDirectoryMapping
    name: SQLDataDirectoryMapping
    uid: azure.mgmt.recoveryservicesbackup.models.SQLDataDirectoryMapping
  - fullName: ']'
    name: ']'
  uid: list[azure.mgmt.recoveryservicesbackup.models.SQLDataDirectoryMapping]
