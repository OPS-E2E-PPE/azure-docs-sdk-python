### YamlMime:PythonClass
uid: azure.datalake.store.transfer.StateManager
name: StateManager
fullName: azure.datalake.store.transfer.StateManager
module: azure.datalake.store.transfer
inheritances:
- builtins.object
summary: 'Manages state for any hashable object.


  When tracking multiple files and their chunks, each file/chunk can be in

  any valid state for that particular type.


  At the simplest level, we need to set and retrieve an object''s current

  state, while only allowing valid states to be used. In addition, we also

  need to give statistics about a group of objects (are all objects in one

  state? how many objects are in each available state?).'
constructor:
  syntax: StateManager(*states)
  parameters:
  - name: states
    description: Managed objects can only use these defined states.
    isRequired: true
    types:
    - <xref:list of valid states>
examples:
- '

  ```


  >>> StateManager(''draft'', ''review'', ''complete'')  # doctest: +SKIP

  <StateManager: draft=0 review=0 complete=0>

  >>> mgr = StateManager(''off'', ''on'')

  >>> mgr[''foo''] = ''on''

  >>> mgr[''bar''] = ''off''

  >>> mgr[''quux''] = ''on''

  >>> mgr  # doctest: +SKIP

  <StateManager: off=1 on=2>

  >>> mgr.contains_all(''on'')

  False

  >>> mgr[''bar''] = ''on''

  >>> mgr.contains_all(''on'')

  True

  >>> mgr.contains_none(''off'')

  True

  ```


  Internal class used by *ADLTransferClient*.

  '
methods:
- uid: azure.datalake.store.transfer.StateManager.contains_all
  name: contains_all
  summary: Return whether all managed objects are in the given state
  signature: contains_all(state)
  parameters:
  - name: state
    isRequired: true
- uid: azure.datalake.store.transfer.StateManager.contains_none
  name: contains_none
  summary: Return whether no managed objects are in the given states
  signature: contains_none(*states)
