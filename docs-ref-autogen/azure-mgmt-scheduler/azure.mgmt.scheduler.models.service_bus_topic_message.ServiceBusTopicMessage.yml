### YamlMime:UniversalReference
api_name: []
items:
- children: []
  class: azure.mgmt.scheduler.models.service_bus_topic_message.ServiceBusTopicMessage
  fullName: azure.mgmt.scheduler.models.service_bus_topic_message.ServiceBusTopicMessage
  inheritance:
  - inheritance:
    - inheritance:
      - type: builtins.object
      type: msrest.serialization.Model
    type: azure.mgmt.scheduler.models.service_bus_message.ServiceBusMessage
  langs:
  - python
  module: azure.mgmt.scheduler.models.service_bus_topic_message
  name: ServiceBusTopicMessage
  summary: ServiceBusTopicMessage.
  syntax:
    content: ServiceBusTopicMessage(**kwargs)
    parameters:
    - description: Gets or sets the Service Bus authentication.
      id: authentication
      type:
      - azure.mgmt.scheduler.models.ServiceBusAuthentication
    - description: 'Gets or sets the brokered message

        properties.'
      id: brokered_message_properties
      type:
      - azure.mgmt.scheduler.models.ServiceBusBrokeredMessageProperties
    - description: 'Gets or sets the custom message

        properties.'
      id: custom_message_properties
      type:
      - dict[str, str]
    - description: Gets or sets the message.
      id: message
      type:
      - str
    - description: Gets or sets the namespace.
      id: namespace
      type:
      - str
    - description: 'Gets or sets the transport type. Possible values

        include: ''NotSpecified'', ''NetMessaging'', ''AMQP'''
      id: transport_type
      type:
      - str
      - azure.mgmt.scheduler.models.ServiceBusTransportType
    - description: Gets or sets the topic path.
      id: topic_path
      type:
      - str
  type: class
  uid: azure.mgmt.scheduler.models.service_bus_topic_message.ServiceBusTopicMessage
references:
- fullName: dict[str, str]
  name: dict[str, str]
  spec.python:
  - fullName: dict
    name: dict
    uid: dict
  - fullName: '['
    name: '['
  - fullName: str
    name: str
    uid: str
  - fullName: ', '
    name: ', '
  - fullName: str
    name: str
    uid: str
  - fullName: ']'
    name: ']'
  uid: dict[str, str]
