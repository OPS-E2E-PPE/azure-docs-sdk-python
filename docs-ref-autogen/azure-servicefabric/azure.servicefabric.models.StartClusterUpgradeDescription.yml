### YamlMime:UniversalReference
api_name: []
items:
- children: []
  class: azure.servicefabric.models.StartClusterUpgradeDescription
  fullName: azure.servicefabric.models.StartClusterUpgradeDescription
  inheritance:
  - inheritance:
    - type: builtins.object
    type: msrest.serialization.Model
  langs:
  - python
  module: azure.servicefabric.models
  name: StartClusterUpgradeDescription
  summary: Describes the parameters for starting a cluster upgrade.
  syntax:
    content: 'StartClusterUpgradeDescription(*, code_version: str = None, config_version:
      str = None, upgrade_kind=''Rolling'', rolling_upgrade_mode=''UnmonitoredAuto'',
      upgrade_replica_set_check_timeout_in_seconds: int = None, force_restart: bool
      = None, sort_order=''Default'', monitoring_policy=None, cluster_health_policy=None,
      enable_delta_health_evaluation: bool = None, cluster_upgrade_health_policy=None,
      application_health_policy_map=None, instance_close_delay_duration_in_seconds:
      int = None, **kwargs) -> None'
    parameters:
    - description: The cluster code version.
      id: code_version
      type:
      - str
    - description: The cluster configuration version.
      id: config_version
      type:
      - str
    - description: 'The kind of upgrade out of the following possible

        values. Possible values include: ''Invalid'', ''Rolling''. Default value:

        "Rolling" .'
      id: upgrade_kind
      type:
      - str
      - azure.servicefabric.models.UpgradeKind
    - description: 'The mode used to monitor health during a

        rolling upgrade. The values are UnmonitoredAuto, UnmonitoredManual, and

        Monitored. Possible values include: ''Invalid'', ''UnmonitoredAuto'',

        ''UnmonitoredManual'', ''Monitored''. Default value: "UnmonitoredAuto" .'
      id: rolling_upgrade_mode
      type:
      - str
      - azure.servicefabric.models.UpgradeMode
    - description: 'The maximum amount of

        time to block processing of an upgrade domain and prevent loss of

        availability when there are unexpected issues. When this timeout expires,

        processing of the upgrade domain will proceed regardless of availability

        loss issues. The timeout is reset at the start of each upgrade domain.

        Valid values are between 0 and 42949672925 inclusive. (unsigned 32-bit

        integer).'
      id: upgrade_replica_set_check_timeout_in_seconds
      type:
      - long
    - description: 'If true, then processes are forcefully restarted

        during upgrade even when the code version has not changed (the upgrade

        only changes configuration or data).'
      id: force_restart
      type:
      - bool
    - description: 'Defines the order in which an upgrade proceeds through

        the cluster. Possible values include: ''Invalid'', ''Default'', ''Numeric'',

        ''Lexicographical'', ''ReverseNumeric'', ''ReverseLexicographical''. Default

        value: "Default" .'
      id: sort_order
      type:
      - str
      - azure.servicefabric.models.UpgradeSortOrder
    - description: 'Describes the parameters for monitoring an

        upgrade in Monitored mode.'
      id: monitoring_policy
      type:
      - azure.servicefabric.models.MonitoringPolicyDescription
    - description: 'Defines a health policy used to evaluate the

        health of the cluster or of a cluster node.'
      id: cluster_health_policy
      type:
      - azure.servicefabric.models.ClusterHealthPolicy
    - description: 'When true, enables delta health

        evaluation rather than absolute health evaluation after completion of each

        upgrade domain.'
      id: enable_delta_health_evaluation
      type:
      - bool
    - description: 'Defines a health policy used to

        evaluate the health of the cluster during a cluster upgrade.'
      id: cluster_upgrade_health_policy
      type:
      - azure.servicefabric.models.ClusterUpgradeHealthPolicyObject
    - description: 'Defines the application health

        policy map used to evaluate the health of an application or one of its

        children entities.'
      id: application_health_policy_map
      type:
      - azure.servicefabric.models.ApplicationHealthPolicies
    - description: 'Duration in seconds, to

        wait before a stateless instance is closed, to allow the active requests

        to drain gracefully. This would be effective when the instance is closing

        during the application/cluster

        upgrade, only for those instances which have a non-zero delay duration

        configured in the service description. See

        InstanceCloseDelayDurationSeconds property in $ref:

        "#/definitions/StatelessServiceDescription.yaml" for details.

        Note, the default value of InstanceCloseDelayDurationInSeconds is

        4294967295, which indicates that the behavior will entirely depend on the

        delay configured in the stateless service description.'
      id: instance_close_delay_duration_in_seconds
      type:
      - long
  type: class
  uid: azure.servicefabric.models.StartClusterUpgradeDescription
references: []
