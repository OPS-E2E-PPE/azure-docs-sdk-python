### YamlMime:PythonClass
uid: azure.functions.EventHubEvent
name: EventHubEvent
fullName: azure.functions.EventHubEvent
module: azure.functions
inheritances:
- azure.functions._abc.EventHubEvent
summary: A concrete implementation of Event Hub message type.
constructor:
  syntax: 'EventHubEvent(*, body: bytes, trigger_metadata: typing.Mapping[str, azure.functions.meta.Datum]
    = None, enqueued_time: typing.Union[datetime.datetime, NoneType] = None, partition_key:
    typing.Union[str, NoneType] = None, sequence_number: typing.Union[int, NoneType]
    = None, offset: typing.Union[str, NoneType] = None, iothub_metadata: typing.Union[typing.Mapping[str,
    str], NoneType] = None) -> None'
methods:
- uid: azure.functions.EventHubEvent.get_body
  name: get_body
  signature: get_body() -> bytes
attributes:
- uid: azure.functions.EventHubEvent.metadata
  name: metadata
  summary: "Getting read-only trigger metadata in a Python dictionary.\n\nExposing\
    \ the raw trigger_metadata to our customer. For cardinality=many\nscenarios, each\
    \ event points to the common metadata of all the events.\n\nSo when using metadata\
    \ field when cardinality=many, it only needs to\ntake one of the events to get\
    \ all the data (e.g. events[0].metadata).\n\n\ntyping.Mapping[str, object]\n \
    \  Return the Python dictionary of trigger metadata"
