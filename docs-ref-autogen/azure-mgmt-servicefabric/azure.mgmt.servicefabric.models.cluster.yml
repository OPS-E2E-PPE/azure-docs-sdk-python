### YamlMime:UniversalReference
api_name: []
items:
- children: []
  class: azure.mgmt.servicefabric.models.Cluster
  fullName: azure.mgmt.servicefabric.models.Cluster
  inheritance:
  - inheritance:
    - inheritance:
      - type: builtins.object
      type: msrest.serialization.Model
    type: azure.mgmt.servicefabric.models._models_py3.Resource
  langs:
  - python
  module: azure.mgmt.servicefabric.models
  name: Cluster
  summary: 'The cluster resource

    .


    Variables are only populated by the server, and will be ignored when

    sending a request.


    All required parameters must be populated in order to send to Azure.'
  syntax:
    content: 'Cluster(*, location: str, management_endpoint: str, node_types, tags=None,
      add_on_features=None, azure_active_directory=None, certificate=None, certificate_common_names=None,
      client_certificate_common_names=None, client_certificate_thumbprints=None, cluster_code_version:
      str = None, diagnostics_storage_account_config=None, event_store_service_enabled:
      bool = None, fabric_settings=None, reliability_level=None, reverse_proxy_certificate=None,
      reverse_proxy_certificate_common_names=None, upgrade_description=None, upgrade_mode=None,
      vm_image: str = None, **kwargs) -> None'
    parameters:
    - description: Required. Azure resource location.
      id: location
      type:
      - str
    - description: Azure resource tags.
      id: tags
      type:
      - dict[str, str]
    - description: 'The list of add-on features to enable in the

        cluster.'
      id: add_on_features
      type:
      - list[str]
    - description: 'The AAD authentication settings of the

        cluster.'
      id: azure_active_directory
      type:
      - azure.mgmt.servicefabric.models.AzureActiveDirectory
    - description: 'The certificate to use for securing the cluster. The

        certificate provided will be used for node to node security within the

        cluster, SSL certificate for cluster management endpoint and default admin

        client.'
      id: certificate
      type:
      - azure.mgmt.servicefabric.models.CertificateDescription
    - description: 'Describes a list of server certificates

        referenced by common name that are used to secure the cluster.'
      id: certificate_common_names
      type:
      - azure.mgmt.servicefabric.models.ServerCertificateCommonNames
    - description: 'The list of client certificates

        referenced by common name that are allowed to manage the cluster.'
      id: client_certificate_common_names
      type:
      - list[azure.mgmt.servicefabric.models.ClientCertificateCommonName]
    - description: 'The list of client certificates

        referenced by thumbprint that are allowed to manage the cluster.'
      id: client_certificate_thumbprints
      type:
      - list[azure.mgmt.servicefabric.models.ClientCertificateThumbprint]
    - description: 'The Service Fabric runtime version of the

        cluster. This property can only by set the user when **upgradeMode** is

        set to ''Manual''. To get list of available Service Fabric versions for new

        clusters use [ClusterVersion API](./ClusterVersion.md). To get the list of

        available version for existing clusters use **availableClusterVersions**.'
      id: cluster_code_version
      type:
      - str
    - description: 'The storage account information

        for storing Service Fabric diagnostic logs.'
      id: diagnostics_storage_account_config
      type:
      - azure.mgmt.servicefabric.models.DiagnosticsStorageAccountConfig
    - description: 'Indicates if the event store service

        is enabled.'
      id: event_store_service_enabled
      type:
      - bool
    - description: 'The list of custom fabric settings to configure

        the cluster.'
      id: fabric_settings
      type:
      - list[azure.mgmt.servicefabric.models.SettingsSectionDescription]
    - description: 'Required. The http management endpoint of the

        cluster.'
      id: management_endpoint
      type:
      - str
    - description: Required. The list of node types in the cluster.
      id: node_types
      type:
      - list[azure.mgmt.servicefabric.models.NodeTypeDescription]
    - description: 'The reliability level sets the replica set size

        of system services. Learn about

        [ReliabilityLevel]([https://docs.microsoft.com/en-us/azure/service-fabric/service-fabric-cluster-capacity](https://docs.microsoft.com/en-us/azure/service-fabric/service-fabric-cluster-capacity)).

        - None - Run the System services with a target replica set count of 1.

        This should only be used for test clusters.

        - Bronze - Run the System services with a target replica set count of 3.

        This should only be used for test clusters.

        - Silver - Run the System services with a target replica set count of 5.

        - Gold - Run the System services with a target replica set count of 7.

        - Platinum - Run the System services with a target replica set count of 9.

        . Possible values include: ''None'', ''Bronze'', ''Silver'', ''Gold'', ''Platinum'''
      id: reliability_level
      type:
      - str
      - azure.mgmt.servicefabric.models.enum
    - description: 'The server certificate used by reverse

        proxy.'
      id: reverse_proxy_certificate
      type:
      - azure.mgmt.servicefabric.models.CertificateDescription
    - description: 'Describes a list of server

        certificates referenced by common name that are used to secure the

        cluster.'
      id: reverse_proxy_certificate_common_names
      type:
      - azure.mgmt.servicefabric.models.ServerCertificateCommonNames
    - description: The policy to use when upgrading the cluster.
      id: upgrade_description
      type:
      - azure.mgmt.servicefabric.models.ClusterUpgradePolicy
    - description: 'The upgrade mode of the cluster when new Service

        Fabric runtime version is available.

        - Automatic - The cluster will be automatically upgraded to the latest

        Service Fabric runtime version as soon as it is available.

        - Manual - The cluster will not be automatically upgraded to the latest

        Service Fabric runtime version. The cluster is upgraded by setting the

        **clusterCodeVersion** property in the cluster resource.

        . Possible values include: ''Automatic'', ''Manual'''
      id: upgrade_mode
      type:
      - str
      - azure.mgmt.servicefabric.models.enum
    - description: 'The VM image VMSS has been configured with. Generic names

        such as Windows or Linux can be used.'
      id: vm_image
      type:
      - str
    variables:
    - description: Azure resource identifier.
      id: id
      type:
      - str
    - description: Azure resource name.
      id: name
      type:
      - str
    - description: Azure resource type.
      id: type
      type:
      - str
    - description: Azure resource etag.
      id: etag
      type:
      - str
    - description: 'The Service Fabric runtime versions

        available for this cluster.'
      id: available_cluster_versions
      type:
      - list[azure.mgmt.servicefabric.models.ClusterVersionDetails]
    - description: 'The Azure Resource Provider endpoint. A system

        service in the cluster connects to this  endpoint.'
      id: cluster_endpoint
      type:
      - str
    - description: 'A service generated unique identifier for the cluster

        resource.'
      id: cluster_id
      type:
      - str
    - description: 'The current state of the cluster.

        - WaitingForNodes - Indicates that the cluster resource is created and the

        resource provider is waiting for Service Fabric VM extension to boot up

        and report to it.

        - Deploying - Indicates that the Service Fabric runtime is being installed

        on the VMs. Cluster resource will be in this state until the cluster boots

        up and system services are up.

        - BaselineUpgrade - Indicates that the cluster is upgrading to establishes

        the cluster version. This upgrade is automatically initiated when the

        cluster boots up for the first time.

        - UpdatingUserConfiguration - Indicates that the cluster is being upgraded

        with the user provided configuration.

        - UpdatingUserCertificate - Indicates that the cluster is being upgraded

        with the user provided certificate.

        - UpdatingInfrastructure - Indicates that the cluster is being upgraded

        with the latest Service Fabric runtime version. This happens only when the

        **upgradeMode** is set to ''Automatic''.

        - EnforcingClusterVersion - Indicates that cluster is on a different

        version than expected and the cluster is being upgraded to the expected

        version.

        - UpgradeServiceUnreachable - Indicates that the system service in the

        cluster is no longer polling the Resource Provider. Clusters in this state

        cannot be managed by the Resource Provider.

        - AutoScale - Indicates that the ReliabilityLevel of the cluster is being

        adjusted.

        - Ready - Indicates that the cluster is in a stable state.

        . Possible values include: ''WaitingForNodes'', ''Deploying'',

        ''BaselineUpgrade'', ''UpdatingUserConfiguration'', ''UpdatingUserCertificate'',

        ''UpdatingInfrastructure'', ''EnforcingClusterVersion'',

        ''UpgradeServiceUnreachable'', ''AutoScale'', ''Ready'''
      id: cluster_state
      type:
      - str
      - azure.mgmt.servicefabric.models.enum
    - description: 'The provisioning state of the cluster resource.

        Possible values include: ''Updating'', ''Succeeded'', ''Failed'', ''Canceled'''
      id: provisioning_state
      type:
      - str
      - azure.mgmt.servicefabric.models.ProvisioningState
  type: class
  uid: azure.mgmt.servicefabric.models.Cluster
references:
- fullName: list[azure.mgmt.servicefabric.models.ClusterVersionDetails]
  name: list[ClusterVersionDetails]
  spec.python:
  - fullName: list
    name: list
    uid: list
  - fullName: '['
    name: '['
  - fullName: azure.mgmt.servicefabric.models.ClusterVersionDetails
    name: ClusterVersionDetails
    uid: azure.mgmt.servicefabric.models.ClusterVersionDetails
  - fullName: ']'
    name: ']'
  uid: list[azure.mgmt.servicefabric.models.ClusterVersionDetails]
- fullName: dict[str, str]
  name: dict[str, str]
  spec.python:
  - fullName: dict
    name: dict
    uid: dict
  - fullName: '['
    name: '['
  - fullName: str
    name: str
    uid: str
  - fullName: ', '
    name: ', '
  - fullName: str
    name: str
    uid: str
  - fullName: ']'
    name: ']'
  uid: dict[str, str]
- fullName: list[str]
  name: list[str]
  spec.python:
  - fullName: list
    name: list
    uid: list
  - fullName: '['
    name: '['
  - fullName: str
    name: str
    uid: str
  - fullName: ']'
    name: ']'
  uid: list[str]
- fullName: list[azure.mgmt.servicefabric.models.ClientCertificateCommonName]
  name: list[ClientCertificateCommonName]
  spec.python:
  - fullName: list
    name: list
    uid: list
  - fullName: '['
    name: '['
  - fullName: azure.mgmt.servicefabric.models.ClientCertificateCommonName
    name: ClientCertificateCommonName
    uid: azure.mgmt.servicefabric.models.ClientCertificateCommonName
  - fullName: ']'
    name: ']'
  uid: list[azure.mgmt.servicefabric.models.ClientCertificateCommonName]
- fullName: list[azure.mgmt.servicefabric.models.ClientCertificateThumbprint]
  name: list[ClientCertificateThumbprint]
  spec.python:
  - fullName: list
    name: list
    uid: list
  - fullName: '['
    name: '['
  - fullName: azure.mgmt.servicefabric.models.ClientCertificateThumbprint
    name: ClientCertificateThumbprint
    uid: azure.mgmt.servicefabric.models.ClientCertificateThumbprint
  - fullName: ']'
    name: ']'
  uid: list[azure.mgmt.servicefabric.models.ClientCertificateThumbprint]
- fullName: list[azure.mgmt.servicefabric.models.SettingsSectionDescription]
  name: list[SettingsSectionDescription]
  spec.python:
  - fullName: list
    name: list
    uid: list
  - fullName: '['
    name: '['
  - fullName: azure.mgmt.servicefabric.models.SettingsSectionDescription
    name: SettingsSectionDescription
    uid: azure.mgmt.servicefabric.models.SettingsSectionDescription
  - fullName: ']'
    name: ']'
  uid: list[azure.mgmt.servicefabric.models.SettingsSectionDescription]
- fullName: list[azure.mgmt.servicefabric.models.NodeTypeDescription]
  name: list[NodeTypeDescription]
  spec.python:
  - fullName: list
    name: list
    uid: list
  - fullName: '['
    name: '['
  - fullName: azure.mgmt.servicefabric.models.NodeTypeDescription
    name: NodeTypeDescription
    uid: azure.mgmt.servicefabric.models.NodeTypeDescription
  - fullName: ']'
    name: ']'
  uid: list[azure.mgmt.servicefabric.models.NodeTypeDescription]
